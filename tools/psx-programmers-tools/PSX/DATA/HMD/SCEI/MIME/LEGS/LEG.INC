PrimHdrSect_0000:	// 0x00000118
	2;	// num prim hdrs

PolyPrimHdr_0000:	// 0x0000011c
	4;	// hdr size
	M(Poly_0000 / 4);
	M(Vert_0000 / 4);
	M(Norm_0000 / 4);
	M(CoordSect_0000 / 4);

SharedPrimHdr_0000:	// 0x00000130
	5;	// hdr size
	M(SharedPoly_0000 / 4);
	M(SharedVert_0000 / 4);
	M(CalcedVert_0000 / 4);
	M(SharedNorm_0000 / 4);
	M(CalcedNorm_0000 / 4);

PolyPrimSet_0000:	// 0x00000148
	SharedPrimSet_0000 / 4;	// next prim
	PolyPrimHdr_0000 / 4;
	M(2);	// num of types

PolyPrim_0000:	// 0x00000154
	DEV_ID(SCE)|CTG(CTG_POLY)|DRV(INI)
		|PRIM_TYPE(MESH|IIP);	// type[0]
	H(2); M(H(26));	// size, data
	(Poly_0000 - Poly_0000) / 4;

PolyPrim_0001:	// 0x00000160
	DEV_ID(SCE)|CTG(CTG_POLY)|DRV(0)
		|PRIM_TYPE(TRI|IIP);	// type[1]
	H(2); M(H(5));	// size, data
	(Poly_0001 - Poly_0000) / 4;

SharedPrimSet_0000:	// 0x0000016c
	TERMINATE;	// next prim
	SharedPrimHdr_0000 / 4;
	M(1);	// num of types

SharedPrim_0000:	// 0x00000178
	DEV_ID(SCE)|CTG(CTG_SHARED)|DRV(0)
		|PRIM_TYPE(0);	// type[0]
	H(7); M(H(0));	// size, data
	24;	// num of shared vertices
	(SharedVert_0000 - SharedVert_0000) / 8;	// src
	(CalcedVert_0000 - CalcedVert_0000) / 8;	// dst
	24;	// num of shared normal vectors
	(SharedNorm_0000 - SharedNorm_0000) / 8;	// src
	(CalcedNorm_0000 - CalcedNorm_0000) / 8;	// dst

PolyPrimSet_0001:	// 0x00000198
	SharedPrimSet_0001 / 4;	// next prim
	PolyPrimHdr_0000 / 4;
	M(2);	// num of types

PolyPrim_0002:	// 0x000001a4
	DEV_ID(SCE)|CTG(CTG_POLY)|DRV(0)
		|PRIM_TYPE(MESH|IIP);	// type[0]
	H(2); M(H(87));	// size, data
	(Poly_0002 - Poly_0000) / 4;

PolyPrim_0003:	// 0x000001b0
	DEV_ID(SCE)|CTG(CTG_POLY)|DRV(0)
		|PRIM_TYPE(TRI|IIP);	// type[1]
	H(2); M(H(16));	// size, data
	(Poly_0003 - Poly_0000) / 4;

SharedPrimSet_0001:	// 0x000001bc
	TERMINATE;	// next prim
	SharedPrimHdr_0000 / 4;
	M(1);	// num of types

SharedPrim_0001:	// 0x000001c8
	DEV_ID(SCE)|CTG(CTG_SHARED)|DRV(0)
		|PRIM_TYPE(0);	// type[0]
	H(7); M(H(0));	// size, data
	60;	// num of shared vertices
	(SharedVert_0001 - SharedVert_0000) / 8;	// src
	(CalcedVert_0001 - CalcedVert_0000) / 8;	// dst
	60;	// num of shared normal vectors
	(SharedNorm_0001 - SharedNorm_0000) / 8;	// src
	(CalcedNorm_0001 - CalcedNorm_0000) / 8;	// dst

PolyPrimSet_0002:	// 0x000001e8
	SharedPrimSet_0002 / 4;	// next prim
	PolyPrimHdr_0000 / 4;
	M(2);	// num of types

PolyPrim_0004:	// 0x000001f4
	DEV_ID(SCE)|CTG(CTG_POLY)|DRV(0)
		|PRIM_TYPE(MESH|IIP);	// type[0]
	H(2); M(H(192));	// size, data
	(Poly_0004 - Poly_0000) / 4;

PolyPrim_0005:	// 0x00000200
	DEV_ID(SCE)|CTG(CTG_POLY)|DRV(0)
		|PRIM_TYPE(TRI|IIP);	// type[1]
	H(2); M(H(43));	// size, data
	(Poly_0005 - Poly_0000) / 4;

SharedPrimSet_0002:	// 0x0000020c
	SharedPolyPrimSet_0000 / 4;	// next prim
	SharedPrimHdr_0000 / 4;
	M(1);	// num of types

SharedPrim_0002:	// 0x00000218
	DEV_ID(SCE)|CTG(CTG_SHARED)|DRV(0)
		|PRIM_TYPE(0);	// type[0]
	H(7); M(H(0));	// size, data
	34;	// num of shared vertices
	(SharedVert_0002 - SharedVert_0000) / 8;	// src
	(CalcedVert_0002 - CalcedVert_0000) / 8;	// dst
	34;	// num of shared normal vectors
	(SharedNorm_0002 - SharedNorm_0000) / 8;	// src
	(CalcedNorm_0002 - CalcedNorm_0000) / 8;	// dst

SharedPolyPrimSet_0000:	// 0x00000238
	TERMINATE;	// next prim
	SharedPrimHdr_0000 / 4;
	M(1);	// num of types

SharedPolyPrim_0000:	// 0x00000244
	DEV_ID(SCE)|CTG(CTG_SHARED)|DRV(0)
		|PRIM_TYPE(TRI|IIP);	// type[0]
	H(2); M(H(118));	// size, data
	(SharedPoly_0000 - SharedPoly_0000) / 4;

Poly_0000:	// 0x00000250
	0x0000001d; 0x300000ff; 0x00580000; 0x03d20001;
	0x03d30002; 0x300000ff; 0x00020001; 0x03c00003;
	0x300000ff; 0x00030002; 0x01920005; 0x300000ff;
	0x00050003; 0x03cb0007; 0x300000ff; 0x00070005;
	0x041f000c; 0x300000ff; 0x000c0007; 0x0421000d;
	0x300000ff; 0x000d000c; 0x0068000e; 0x300000ff;
	0x000e000d; 0x04200075; 0x300000ff; 0x0075000e;
	0x04230083; 0x300000ff; 0x00830075; 0x062b0080;
	0x300000ff; 0x00800083; 0x01b30081; 0x300000ff;
	0x00810080; 0x0630007f; 0x300000ff; 0x007f0081;
	0x04340082; 0x300000ff; 0x0082007f; 0x0433005a;
	0x300000ff; 0x005a0082; 0x006b005b; 0x300000ff;
	0x005b005a; 0x04350059; 0x300000ff; 0x0059005b;
	0x0431006d; 0x300000ff; 0x006d0059; 0x0334006b;
	0x300000ff; 0x006b006d; 0x01880069; 0x300000ff;
	0x0069006b; 0x01850068; 0x300000ff; 0x00680069;
	0x06750678; 0x300000ff; 0x06780068; 0x03c40067;
	0x300000ff; 0x00670678; 0x066d0677; 0x300000ff;
	0x06770067; 0x03bf0074; 0x300000ff; 0x00740677;
	0x0674067e; 0x300000ff; 0x067e0074; 0x004001e4;
	0x300000ff; 0x01e4067e; 0x018601e5; 0x300000ff;
	0x01e501e4; 0x067c0680; 0x300000ff; 0x068001e5;
	0x067a0681; 0x0000001b; 0x300000ff; 0x03d20001;
	0x01910004; 0x03c00003; 0x300000ff; 0x00030004;
	0x03c20006; 0x300000ff; 0x00060003; 0x03cb0007;
	0x300000ff; 0x00070006; 0x019b0008; 0x300000ff;
	0x00080007; 0x0421000d; 0x300000ff; 0x000d0008;
	0x06290076; 0x300000ff; 0x0076000d; 0x04200075;
	0x300000ff; 0x00750076; 0x01980077; 0x300000ff;
	0x00770075; 0x062b0080; 0x300000ff; 0x00800077;
	0x061b007e; 0x300000ff; 0x007e0080; 0x0630007f;
	0x300000ff; 0x007f007e; 0x019a0058; 0x300000ff;
	0x0058007f; 0x0433005a; 0x300000ff; 0x005a0058;
	0x06500056; 0x300000ff; 0x0056005a; 0x04350059;
	0x300000ff; 0x00590056; 0x01b50054; 0x300000ff;
	0x00540059; 0x0334006b; 0x300000ff; 0x006b0054;
	0x018a006c; 0x300000ff; 0x006c006b; 0x01850068;
	0x300000ff; 0x0068006c; 0x0187006a; 0x300000ff;
	0x006a0068; 0x03c40067; 0x300000ff; 0x0067006a;
	0x00540071; 0x300000ff; 0x00710067; 0x03bf0074;
	0x300000ff; 0x00740071; 0x01800072; 0x300000ff;
	0x00720074; 0x004001e4; 0x300000ff; 0x01e40072;
	0x067b067f; 0x300000ff; 0x067f01e4; 0x067c0680;
	0x00000019; 0x300000ff; 0x01910004; 0x03df0009;
	0x03c20006; 0x300000ff; 0x00060009; 0x03e1000a;
	0x300000ff; 0x000a0006; 0x019b0008; 0x300000ff;
	0x0008000a; 0x061a0078; 0x300000ff; 0x00780008;
	0x06290076; 0x300000ff; 0x00760078; 0x05f40079;
	0x300000ff; 0x00790076; 0x01980077; 0x300000ff;
	0x00770079; 0x03dc007c; 0x300000ff; 0x007c0077;
	0x061b007e; 0x300000ff; 0x007e007c; 0x03de005d;
	0x300000ff; 0x005d007e; 0x019a0058; 0x300000ff;
	0x0058005d; 0x062e0057; 0x300000ff; 0x00570058;
	0x06500056; 0x300000ff; 0x00560057; 0x062f0053;
	0x300000ff; 0x00530056; 0x01b50054; 0x300000ff;
	0x00540053; 0x04300051; 0x300000ff; 0x00510054;
	0x018a006c; 0x300000ff; 0x006c0051; 0x042c006e;
	0x300000ff; 0x006e006c; 0x0187006a; 0x300000ff;
	0x006a006e; 0x005f006f; 0x300000ff; 0x006f006a;
	0x00540071; 0x300000ff; 0x0071006f; 0x03f50070;
	0x300000ff; 0x00700071; 0x01800072; 0x300000ff;
	0x00720070; 0x06730679; 0x300000ff; 0x06790072;
	0x067b067f; 0x00000018; 0x300000ff; 0x03df0009;
	0x005b000b; 0x03e1000a; 0x300000ff; 0x000a000b;
	0x03e0007b; 0x300000ff; 0x007b000a; 0x061a0078;
	0x300000ff; 0x0078007b; 0x0197007a; 0x300000ff;
	0x007a0078; 0x05f40079; 0x300000ff; 0x0079007a;
	0x03db007d; 0x300000ff; 0x007d0079; 0x03dc007c;
	0x300000ff; 0x007c007d; 0x005a005e; 0x300000ff;
	0x005e007c; 0x03de005d; 0x300000ff; 0x005d005e;
	0x03dd005c; 0x300000ff; 0x005c005d; 0x062e0057;
	0x300000ff; 0x0057005c; 0x01990055; 0x300000ff;
	0x00550057; 0x062f0053; 0x300000ff; 0x00530055;
	0x042e0052; 0x300000ff; 0x00520053; 0x04300051;
	0x300000ff; 0x00510052; 0x006a003f; 0x300000ff;
	0x003f0051; 0x042c006e; 0x300000ff; 0x006e003f;
	0x042b0047; 0x300000ff; 0x0047006e; 0x005f006f;
	0x300000ff; 0x006f0047; 0x01820049; 0x300000ff;
	0x0049006f; 0x03f50070; 0x300000ff; 0x00700049;
	0x03bd004e; 0x300000ff; 0x004e0070; 0x06730679;
	0x300000ff; 0x0679004e; 0x066c0676; 0x0000000e;
	0x300000ff; 0x00580000; 0x03d30002; 0x03d4000f;
	0x300000ff; 0x000f0002; 0x03c90010; 0x300000ff;
	0x0010000f; 0x01930011; 0x300000ff; 0x00110010;
	0x03f70013; 0x300000ff; 0x00130011; 0x04260016;
	0x300000ff; 0x00160013; 0x04280017; 0x300000ff;
	0x00170016; 0x00690018; 0x300000ff; 0x00180017;
	0x04250019; 0x300000ff; 0x00190018; 0x0424002c;
	0x300000ff; 0x002c0019; 0x01420027; 0x300000ff;
	0x0027002c; 0x017e0028; 0x300000ff; 0x00280027;
	0x03cf0026; 0x300000ff; 0x00260028; 0x06700671;
	0x300000ff; 0x06710026; 0x066f0670; 0x0000000d;
	0x300000ff; 0x03d30002; 0x01920005; 0x03c90010;
	0x300000ff; 0x00100005; 0x03ce0012; 0x300000ff;
	0x00120010; 0x03f70013; 0x300000ff; 0x00130012;
	0x01b20014; 0x300000ff; 0x00140013; 0x04280017;
	0x300000ff; 0x00170014; 0x0378001a; 0x300000ff;
	0x001a0017; 0x04250019; 0x300000ff; 0x0019001a;
	0x018d001b; 0x300000ff; 0x001b0019; 0x01420027;
	0x300000ff; 0x0027001b; 0x03cd0024; 0x300000ff;
	0x00240027; 0x03cf0026; 0x300000ff; 0x00260024;
	0x066e066f; 0x300000ff; 0x066f0026; 0x066f0670;
	0x0000000c; 0x300000ff; 0x01920005; 0x041f000c;
	0x03ce0012; 0x300000ff; 0x0012000c; 0x04220015;
	0x300000ff; 0x00150012; 0x01b20014; 0x300000ff;
	0x00140015; 0x0361001c; 0x300000ff; 0x001c0014;
	0x0378001a; 0x300000ff; 0x001a001c; 0x035b001d;
	0x300000ff; 0x001d001a; 0x018d001b; 0x300000ff;
	0x001b001d; 0x0678066c; 0x300000ff; 0x066c001b;
	0x03cd0024; 0x300000ff; 0x0024066c; 0x0676066e;
	0x300000ff; 0x066e0024; 0x066e066f; 0x300000ff;
	0x066f066e; 0x0683067d; 0x00000007; 0x30519e8f;
	0x041f000c; 0x0068000e; 0x04220015; 0x30519e8f;
	0x0015000e; 0x041e001f; 0x30519e8f; 0x001f0015;
	0x0361001c; 0x30519e8f; 0x001c001f; 0x018c001e;
	0x30519e8f; 0x001e001c; 0x035b001d; 0x30519e8f;
	0x001d001e; 0x0677066d; 0x30519e8f; 0x066d001d;
	0x0678066c; 0x00000007; 0x30519e8f; 0x0059002d;
	0x03d5002e; 0x03d7002f; 0x30519e8f; 0x002f002e;
	0x03b60030; 0x30519e8f; 0x0030002f; 0x01950032;
	0x30519e8f; 0x00320030; 0x03f40034; 0x30519e8f;
	0x00340032; 0x04270036; 0x30519e8f; 0x00360034;
	0x04260016; 0x30519e8f; 0x00160036; 0x00690018;
	0x00000005; 0x30519e8f; 0x03d5002e; 0x018f0031;
	0x03b60030; 0x30519e8f; 0x00300031; 0x03890033;
	0x30519e8f; 0x00330030; 0x03f40034; 0x30519e8f;
	0x00340033; 0x01930011; 0x30519e8f; 0x00110034;
	0x04260016; 0x00000003; 0x30519e8f; 0x018f0031;
	0x03d00035; 0x03890033; 0x30519e8f; 0x00330035;
	0x03d4000f; 0x30519e8f; 0x000f0033; 0x01930011;
	0x00000010; 0x300000ff; 0x00690018; 0x04290037;
	0x04270036; 0x300000ff; 0x00360037; 0x05ea0038;
	0x300000ff; 0x00380036; 0x01950032; 0x300000ff;
	0x00320038; 0x05e3003b; 0x300000ff; 0x003b0032;
	0x03d7002f; 0x300000ff; 0x002f003b; 0x03d80040;
	0x300000ff; 0x0040002f; 0x0059002d; 0x300000ff;
	0x002d0040; 0x03d6005f; 0x300000ff; 0x005f002d;
	0x03d5002e; 0x300000ff; 0x002e005f; 0x03b405aa;
	0x300000ff; 0x05aa002e; 0x018f0031; 0x300000ff;
	0x003105aa; 0x038805a8; 0x300000ff; 0x05a80031;
	0x03d00035; 0x300000ff; 0x003505a8; 0x03d105a7;
	0x300000ff; 0x05a70035; 0x00580000; 0x300000ff;
	0x000005a7; 0x03d20001; 0x00000010; 0x300000ff;
	0x04290037; 0x01b40039; 0x05ea0038; 0x300000ff;
	0x00380039; 0x05f2003a; 0x300000ff; 0x003a0038;
	0x05e3003b; 0x300000ff; 0x003b003a; 0x0196003c;
	0x300000ff; 0x003c003b; 0x03d80040; 0x300000ff;
	0x0040003c; 0x05740060; 0x300000ff; 0x00600040;
	0x03d6005f; 0x300000ff; 0x005f0060; 0x01940061;
	0x300000ff; 0x0061005f; 0x03b405aa; 0x300000ff;
	0x05aa0061; 0x03bc05ab; 0x300000ff; 0x05ab05aa;
	0x038805a8; 0x300000ff; 0x05a805ab; 0x019005a9;
	0x300000ff; 0x05a905a8; 0x03d105a7; 0x300000ff;
	0x05a705a9; 0x03b905ad; 0x300000ff; 0x05ad05a7;
	0x03d20001; 0x300000ff; 0x000105ad; 0x01910004;
	0x00000010; 0x300000ff; 0x01b40039; 0x042f003d;
	0x05f2003a; 0x300000ff; 0x003a003d; 0x042d003e;
	0x300000ff; 0x003e003a; 0x0196003c; 0x300000ff;
	0x003c003e; 0x05ed0062; 0x300000ff; 0x0062003c;
	0x05740060; 0x300000ff; 0x00600062; 0x05de0063;
	0x300000ff; 0x00630060; 0x01940061; 0x300000ff;
	0x00610063; 0x03da0064; 0x300000ff; 0x00640061;
	0x03bc05ab; 0x300000ff; 0x05ab0064; 0x03d905ac;
	0x300000ff; 0x05ac05ab; 0x019005a9; 0x300000ff;
	0x05a905ac; 0x03be05ae; 0x300000ff; 0x05ae05a9;
	0x03b905ad; 0x300000ff; 0x05ad05ae; 0x03c105af;
	0x300000ff; 0x05af05ad; 0x01910004; 0x300000ff;
	0x000405af; 0x03df0009; 0x00000010; 0x300000ff;
	0x042f003d; 0x006a003f; 0x042d003e; 0x300000ff;
	0x003e003f; 0x042e0052; 0x300000ff; 0x0052003e;
	0x05ed0062; 0x300000ff; 0x00620052; 0x01990055;
	0x300000ff; 0x00550062; 0x05de0063; 0x300000ff;
	0x00630055; 0x03dd005c; 0x300000ff; 0x005c0063;
	0x03da0064; 0x300000ff; 0x0064005c; 0x005a005e;
	0x300000ff; 0x005e0064; 0x03d905ac; 0x300000ff;
	0x05ac005e; 0x03db007d; 0x300000ff; 0x007d05ac;
	0x03be05ae; 0x300000ff; 0x05ae007d; 0x0197007a;
	0x300000ff; 0x007a05ae; 0x03c105af; 0x300000ff;
	0x05af007a; 0x03e0007b; 0x300000ff; 0x007b05af;
	0x03df0009; 0x300000ff; 0x0009007b; 0x005b000b;
	0x00000006; 0x30519e8f; 0x006a003f; 0x042f003d;
	0x042a0041; 0x30519e8f; 0x0041003d; 0x03c80042;
	0x30519e8f; 0x00420041; 0x017f0043; 0x30519e8f;
	0x00430042; 0x01320045; 0x30519e8f; 0x00450043;
	0x06710672; 0x30519e8f; 0x06720045; 0x06700671;
	0x00000005; 0x30519e8f; 0x042f003d; 0x01b40039;
	0x03c80042; 0x30519e8f; 0x00420039; 0x015e0044;
	0x30519e8f; 0x00440042; 0x01320045; 0x30519e8f;
	0x00450044; 0x017e0028; 0x30519e8f; 0x00280045;
	0x06700671; 0x00000003; 0x30519e8f; 0x01b40039;
	0x04290037; 0x015e0044; 0x30519e8f; 0x00440037;
	0x0424002c; 0x30519e8f; 0x002c0044; 0x017e0028;
	0x00000007; 0x30519e8f; 0x006a003f; 0x042a0041;
	0x042b0047; 0x30519e8f; 0x00470041; 0x01830048;
	0x30519e8f; 0x00480047; 0x01820049; 0x30519e8f;
	0x00490048; 0x06820674; 0x30519e8f; 0x06740049;
	0x03bd004e; 0x30519e8f; 0x004e0674; 0x06720675;
	0x30519e8f; 0x0675004e; 0x066c0676; 0x00000003;
	0x30519e8f; 0x042a0041; 0x017f0043; 0x01830048;
	0x30519e8f; 0x00480043; 0x06810673; 0x30519e8f;
	0x06730048; 0x06820674; 0x00000005; 0x30519e8f;
	0x006b005b; 0x0431006d; 0x04320084; 0x30519e8f;
	0x0084006d; 0x01a40085; 0x30519e8f; 0x00850084;
	0x018e0086; 0x30519e8f; 0x00860085; 0x067e067b;
	0x30519e8f; 0x067b0086; 0x0679067c; 0x00000003;
	0x30519e8f; 0x0431006d; 0x01880069; 0x01a40085;
	0x30519e8f; 0x00850069; 0x067d067a; 0x30519e8f;
	0x067a0085; 0x067e067b; 0x00000007; 0x30519e8f;
	0x006b005b; 0x04320084; 0x04340082; 0x30519e8f;
	0x00820084; 0x037c008d; 0x30519e8f; 0x008d0082;
	0x01b30081; 0x30519e8f; 0x0081008d; 0x0364008f;
	0x30519e8f; 0x008f0081; 0x04230083; 0x30519e8f;
	0x0083008f; 0x041e001f; 0x30519e8f; 0x001f0083;
	0x0068000e; 0x00000005; 0x30519e8f; 0x04320084;
	0x018e0086; 0x037c008d; 0x30519e8f; 0x008d0086;
	0x035c008e; 0x30519e8f; 0x008e008d; 0x0364008f;
	0x30519e8f; 0x008f008e; 0x018c001e; 0x30519e8f;
	0x001e008f; 0x041e001f; 0x00000003; 0x30519e8f;
	0x018e0086; 0x0679067c; 0x035c008e; 0x30519e8f;
	0x008e067c; 0x0677066d; 0x30519e8f; 0x066d008e;
	0x018c001e; 0x00000002; 0x30519e8f; 0x0674067e;
	0x018601e5; 0x067f0682; 0x30519e8f; 0x068201e5;
	0x06800683;

Poly_0001:	// 0x00001034
	0x30519e8f; 0x03d00035; 0x00580000; 0x03d4000f;
	0x30519e8f; 0x04290037; 0x00690018; 0x0424002c;
	0x30519e8f; 0x017f0043; 0x06710672; 0x06810673;
	0x30519e8f; 0x01880069; 0x06750678; 0x067d067a;
	0x30519e8f; 0x018601e5; 0x067a0681; 0x06800683;

Poly_0002:	// 0x00001084
	0x00000019; 0x300000ff; 0x00530090; 0x03b00091;
	0x03b10092; 0x300000ff; 0x00920091; 0x03bb0093;
	0x300000ff; 0x00930092; 0x017a0095; 0x300000ff;
	0x00950093; 0x03c50097; 0x300000ff; 0x00970095;
	0x043f009c; 0x300000ff; 0x009c0097; 0x0440009d;
	0x300000ff; 0x009d009c; 0x006d009e; 0x300000ff;
	0x009e009d; 0x043c00b7; 0x300000ff; 0x00b7009e;
	0x044100cd; 0x300000ff; 0x00cd00b7; 0x061000d4;
	0x300000ff; 0x00d400cd; 0x01b800cc; 0x300000ff;
	0x00cc00d4; 0x061200d2; 0x300000ff; 0x00d200cc;
	0x044700cf; 0x300000ff; 0x00cf00d2; 0x044200d1;
	0x300000ff; 0x00d100cf; 0x006e00d0; 0x300000ff;
	0x00d000d1; 0x044300e0; 0x300000ff; 0x00e000d0;
	0x044400fe; 0x300000ff; 0x00fe00e0; 0x061500ff;
	0x300000ff; 0x00ff00fe; 0x015100fa; 0x300000ff;
	0x00fa00ff; 0x06140101; 0x300000ff; 0x010100fa;
	0x036600f7; 0x300000ff; 0x00f70101; 0x03620104;
	0x300000ff; 0x010400f7; 0x004600f5; 0x300000ff;
	0x00f50104; 0x069c06a7; 0x300000ff; 0x06a700f5;
	0x069d06a8; 0x00000017; 0x300000ff; 0x03b00091;
	0x01790094; 0x03bb0093; 0x300000ff; 0x00930094;
	0x03c30096; 0x300000ff; 0x00960093; 0x03c50097;
	0x300000ff; 0x00970096; 0x01b60098; 0x300000ff;
	0x00980097; 0x0440009d; 0x300000ff; 0x009d0098;
	0x060f00b8; 0x300000ff; 0x00b8009d; 0x043c00b7;
	0x300000ff; 0x00b700b8; 0x014900b9; 0x300000ff;
	0x00b900b7; 0x061000d4; 0x300000ff; 0x00d400b9;
	0x060e00d5; 0x300000ff; 0x00d500d4; 0x061200d2;
	0x300000ff; 0x00d200d5; 0x014a00d3; 0x300000ff;
	0x00d300d2; 0x044200d1; 0x300000ff; 0x00d100d3;
	0x061100db; 0x300000ff; 0x00db00d1; 0x044300e0;
	0x300000ff; 0x00e000db; 0x014d00dc; 0x300000ff;
	0x00dc00e0; 0x061500ff; 0x300000ff; 0x00ff00dc;
	0x06130100; 0x300000ff; 0x010000ff; 0x06140101;
	0x300000ff; 0x01010100; 0x014b0102; 0x300000ff;
	0x01020101; 0x03620104; 0x300000ff; 0x01040102;
	0x06b506b7; 0x300000ff; 0x06b70104; 0x069c06a7;
	0x00000015; 0x300000ff; 0x01790094; 0x04390099;
	0x03c30096; 0x300000ff; 0x00960099; 0x043a009a;
	0x300000ff; 0x009a0096; 0x01b60098; 0x300000ff;
	0x0098009a; 0x060d00ba; 0x300000ff; 0x00ba0098;
	0x060f00b8; 0x300000ff; 0x00b800ba; 0x060b00bb;
	0x300000ff; 0x00bb00b8; 0x014900b9; 0x300000ff;
	0x00b900bb; 0x035900bc; 0x300000ff; 0x00bc00b9;
	0x060e00d5; 0x300000ff; 0x00d500bc; 0x035a00d6;
	0x300000ff; 0x00d600d5; 0x014a00d3; 0x300000ff;
	0x00d300d6; 0x060200d8; 0x300000ff; 0x00d800d3;
	0x061100db; 0x300000ff; 0x00db00d8; 0x060400da;
	0x300000ff; 0x00da00db; 0x014d00dc; 0x300000ff;
	0x00dc00da; 0x036000de; 0x300000ff; 0x00de00dc;
	0x06130100; 0x300000ff; 0x010000de; 0x035e0103;
	0x300000ff; 0x01030100; 0x014b0102; 0x300000ff;
	0x01020103; 0x06b406b8; 0x300000ff; 0x06b80102;
	0x06b506b7; 0x00000013; 0x300000ff; 0x04390099;
	0x006c009b; 0x043a009a; 0x300000ff; 0x009a009b;
	0x043600aa; 0x300000ff; 0x00aa009a; 0x060d00ba;
	0x300000ff; 0x00ba00aa; 0x014800ad; 0x300000ff;
	0x00ad00ba; 0x060b00bb; 0x300000ff; 0x00bb00ad;
	0x035800b4; 0x300000ff; 0x00b400bb; 0x035900bc;
	0x300000ff; 0x00bc00b4; 0x004400b6; 0x300000ff;
	0x00b600bc; 0x035a00d6; 0x300000ff; 0x00d600b6;
	0x035400d7; 0x300000ff; 0x00d700d6; 0x060200d8;
	0x300000ff; 0x00d800d7; 0x014400d9; 0x300000ff;
	0x00d900d8; 0x060400da; 0x300000ff; 0x00da00d9;
	0x035d00dd; 0x300000ff; 0x00dd00da; 0x036000de;
	0x300000ff; 0x00de00dd; 0x004500df; 0x300000ff;
	0x00df00de; 0x035e0103; 0x300000ff; 0x010300df;
	0x069b06b6; 0x300000ff; 0x06b60103; 0x06b406b8;
	0x00000010; 0x300000ff; 0x00530090; 0x03b10092;
	0x03ac009f; 0x300000ff; 0x009f0092; 0x063b00a0;
	0x300000ff; 0x00a0009f; 0x016200a1; 0x300000ff;
	0x00a100a0; 0x063900a3; 0x300000ff; 0x00a300a1;
	0x039500a6; 0x300000ff; 0x00a600a3; 0x039a00a7;
	0x300000ff; 0x00a700a6; 0x005000a8; 0x300000ff;
	0x00a800a7; 0x039400c5; 0x300000ff; 0x00c500a8;
	0x03960147; 0x300000ff; 0x014700c5; 0x063401f8;
	0x300000ff; 0x01f80147; 0x0163014a; 0x300000ff;
	0x014a01f8; 0x063d01f6; 0x300000ff; 0x01f6014a;
	0x03b2014f; 0x300000ff; 0x014f01f6; 0x03b301f5;
	0x300000ff; 0x01f5014f; 0x06850685; 0x300000ff;
	0x068501f5; 0x06a20687; 0x00000010; 0x300000ff;
	0x03b10092; 0x017a0095; 0x063b00a0; 0x300000ff;
	0x00a00095; 0x064800a2; 0x300000ff; 0x00a200a0;
	0x063900a3; 0x300000ff; 0x00a300a2; 0x016700a4;
	0x300000ff; 0x00a400a3; 0x039a00a7; 0x300000ff;
	0x00a700a4; 0x063500c3; 0x300000ff; 0x00c300a7;
	0x039400c5; 0x300000ff; 0x00c500c3; 0x016100c1;
	0x300000ff; 0x00c100c5; 0x063401f8; 0x300000ff;
	0x01f800c1; 0x063601f9; 0x300000ff; 0x01f901f8;
	0x063d01f6; 0x300000ff; 0x01f601f9; 0x016901f7;
	0x300000ff; 0x01f701f6; 0x03b301f5; 0x300000ff;
	0x01f501f7; 0x064e01fd; 0x300000ff; 0x01fd01f5;
	0x06a20687; 0x300000ff; 0x068701fd; 0x068d0686;
	0x0000000f; 0x300000ff; 0x017a0095; 0x043f009c;
	0x064800a2; 0x300000ff; 0x00a2009c; 0x043d00a5;
	0x300000ff; 0x00a500a2; 0x016700a4; 0x300000ff;
	0x00a400a5; 0x064700c4; 0x300000ff; 0x00c400a4;
	0x063500c3; 0x300000ff; 0x00c300c4; 0x063700c0;
	0x300000ff; 0x00c000c3; 0x016100c1; 0x300000ff;
	0x00c100c0; 0x039b00be; 0x300000ff; 0x00be00c1;
	0x063601f9; 0x300000ff; 0x01f900be; 0x039d01fa;
	0x300000ff; 0x01fa01f9; 0x016901f7; 0x300000ff;
	0x01f701fa; 0x064d01fb; 0x300000ff; 0x01fb01f7;
	0x064e01fd; 0x300000ff; 0x01fd01fb; 0x06bd069c;
	0x300000ff; 0x069c01fd; 0x068d0686; 0x0000000e;
	0x300000ff; 0x043f009c; 0x006d009e; 0x043d00a5;
	0x300000ff; 0x00a5009e; 0x043e00c6; 0x300000ff;
	0x00c600a5; 0x064700c4; 0x300000ff; 0x00c400c6;
	0x016e00c2; 0x300000ff; 0x00c200c4; 0x063700c0;
	0x300000ff; 0x00c000c2; 0x03a200bf; 0x300000ff;
	0x00bf00c0; 0x039b00be; 0x300000ff; 0x00be00bf;
	0x005100bd; 0x300000ff; 0x00bd00be; 0x039d01fa;
	0x300000ff; 0x01fa00bd; 0x039e01c1; 0x300000ff;
	0x01c101fa; 0x064d01fb; 0x300000ff; 0x01fb01c1;
	0x016a01bd; 0x300000ff; 0x01bd01fb; 0x06bd069c;
	0x300000ff; 0x069c01bd; 0x06a40696; 0x00000019;
	0x300000ff; 0x006c009b; 0x043700a9; 0x043600aa;
	0x300000ff; 0x00aa00a9; 0x060c00ab; 0x300000ff;
	0x00ab00aa; 0x014800ad; 0x300000ff; 0x00ad00ab;
	0x060500af; 0x300000ff; 0x00af00ad; 0x035800b4;
	0x300000ff; 0x00b400af; 0x035500b5; 0x300000ff;
	0x00b500b4; 0x004400b6; 0x300000ff; 0x00b600b5;
	0x0353021a; 0x300000ff; 0x021a00b6; 0x03570219;
	0x300000ff; 0x0219021a; 0x05db0216; 0x300000ff;
	0x02160219; 0x01470214; 0x300000ff; 0x02140216;
	0x05e40213; 0x300000ff; 0x02130214; 0x037f0211;
	0x300000ff; 0x02110213; 0x037e0212; 0x300000ff;
	0x02120211; 0x004b0210; 0x300000ff; 0x02100212;
	0x03800227; 0x300000ff; 0x02270210; 0x03810259;
	0x300000ff; 0x02590227; 0x062d02ba; 0x300000ff;
	0x02ba0259; 0x015b0258; 0x300000ff; 0x025802ba;
	0x062c02b9; 0x300000ff; 0x02b90258; 0x037d025a;
	0x300000ff; 0x025a02b9; 0x037b02b7; 0x300000ff;
	0x02b7025a; 0x004a0248; 0x300000ff; 0x024802b7;
	0x069f06a6; 0x300000ff; 0x06a60248; 0x069e06a5;
	0x00000017; 0x300000ff; 0x043700a9; 0x015500ac;
	0x060c00ab; 0x300000ff; 0x00ab00ac; 0x060600ae;
	0x300000ff; 0x00ae00ab; 0x060500af; 0x300000ff;
	0x00af00ae; 0x014500b0; 0x300000ff; 0x00b000af;
	0x035500b5; 0x300000ff; 0x00b500b0; 0x05da02b0;
	0x300000ff; 0x02b000b5; 0x0353021a; 0x300000ff;
	0x021a02b0; 0x01330218; 0x300000ff; 0x0218021a;
	0x05db0216; 0x300000ff; 0x02160218; 0x05d90217;
	0x300000ff; 0x02170216; 0x05e40213; 0x300000ff;
	0x02130217; 0x01370215; 0x300000ff; 0x02150213;
	0x037e0212; 0x300000ff; 0x02120215; 0x05e50222;
	0x300000ff; 0x02220212; 0x03800227; 0x300000ff;
	0x02270222; 0x01590223; 0x300000ff; 0x02230227;
	0x062d02ba; 0x300000ff; 0x02ba0223; 0x062a02b8;
	0x300000ff; 0x02b802ba; 0x062c02b9; 0x300000ff;
	0x02b902b8; 0x015802b4; 0x300000ff; 0x02b402b9;
	0x037b02b7; 0x300000ff; 0x02b702b4; 0x06b906b5;
	0x300000ff; 0x06b502b7; 0x069f06a6; 0x00000016;
	0x300000ff; 0x015500ac; 0x036e00b1; 0x060600ae;
	0x300000ff; 0x00ae00b1; 0x036a00b2; 0x300000ff;
	0x00b200ae; 0x014500b0; 0x300000ff; 0x00b000b2;
	0x05dd02b1; 0x300000ff; 0x02b100b0; 0x05da02b0;
	0x300000ff; 0x02b002b1; 0x05d802af; 0x300000ff;
	0x02af02b0; 0x01330218; 0x300000ff; 0x021802af;
	0x0339021c; 0x300000ff; 0x021c0218; 0x05d90217;
	0x300000ff; 0x0217021c; 0x033d021b; 0x300000ff;
	0x021b0217; 0x01370215; 0x300000ff; 0x0215021b;
	0x05df021f; 0x300000ff; 0x021f0215; 0x05e50222;
	0x300000ff; 0x0222021f; 0x05e10221; 0x300000ff;
	0x02210222; 0x01590223; 0x300000ff; 0x02230221;
	0x03730225; 0x300000ff; 0x02250223; 0x062a02b8;
	0x300000ff; 0x02b80225; 0x037202b2; 0x300000ff;
	0x02b202b8; 0x015802b4; 0x300000ff; 0x02b402b2;
	0x062802b3; 0x300000ff; 0x02b302b4; 0x06b906b5;
	0x300000ff; 0x06b502b3; 0x06b806b4; 0x00000015;
	0x300000ff; 0x036e00b1; 0x004700b3; 0x036a00b2;
	0x300000ff; 0x00b200b3; 0x036802a6; 0x300000ff;
	0x02a600b2; 0x05dd02b1; 0x300000ff; 0x02b102a6;
	0x013402a8; 0x300000ff; 0x02a802b1; 0x05d802af;
	0x300000ff; 0x02af02a8; 0x033a02ad; 0x300000ff;
	0x02ad02af; 0x0339021c; 0x300000ff; 0x021c02ad;
	0x0684069d; 0x300000ff; 0x069d021c; 0x033d021b;
	0x300000ff; 0x021b069d; 0x033b021e; 0x300000ff;
	0x021e021b; 0x05df021f; 0x300000ff; 0x021f021e;
	0x01350220; 0x300000ff; 0x0220021f; 0x05e10221;
	0x300000ff; 0x02210220; 0x03700224; 0x300000ff;
	0x02240221; 0x03730225; 0x300000ff; 0x02250224;
	0x00480226; 0x300000ff; 0x02260225; 0x037202b2;
	0x300000ff; 0x02b20226; 0x0371023b; 0x300000ff;
	0x023b02b2; 0x062802b3; 0x300000ff; 0x02b3023b;
	0x068a06a1; 0x300000ff; 0x06a102b3; 0x06b806b4;
	0x00000007; 0x30519e8f; 0x005100bd; 0x03a200bf;
	0x03a300c7; 0x30519e8f; 0x00c700bf; 0x065a00c8;
	0x30519e8f; 0x00c800c7; 0x016f00c9; 0x30519e8f;
	0x00c900c8; 0x065d00cb; 0x30519e8f; 0x00cb00c9;
	0x044500ce; 0x30519e8f; 0x00ce00cb; 0x044700cf;
	0x30519e8f; 0x00cf00ce; 0x006e00d0; 0x00000005;
	0x30519e8f; 0x03a200bf; 0x016e00c2; 0x065a00c8;
	0x30519e8f; 0x00c800c2; 0x065b00ca; 0x30519e8f;
	0x00ca00c8; 0x065d00cb; 0x30519e8f; 0x00cb00ca;
	0x01b800cc; 0x30519e8f; 0x00cc00cb; 0x044700cf;
	0x00000003; 0x30519e8f; 0x016e00c2; 0x043e00c6;
	0x065b00ca; 0x30519e8f; 0x00ca00c6; 0x044100cd;
	0x30519e8f; 0x00cd00ca; 0x01b800cc; 0x00000007;
	0x30519e8f; 0x005200e1; 0x03a400e2; 0x03aa00e3;
	0x30519e8f; 0x00e300e2; 0x064c00e4; 0x30519e8f;
	0x00e400e3; 0x017500e6; 0x30519e8f; 0x00e600e4;
	0x065c00e8; 0x30519e8f; 0x00e800e6; 0x044600ea;
	0x30519e8f; 0x00ea00e8; 0x044500ce; 0x30519e8f;
	0x00ce00ea; 0x006e00d0; 0x00000005; 0x30519e8f;
	0x03a400e2; 0x016800e5; 0x064c00e4; 0x30519e8f;
	0x00e400e5; 0x064a00e7; 0x30519e8f; 0x00e700e4;
	0x065c00e8; 0x30519e8f; 0x00e800e7; 0x016f00c9;
	0x30519e8f; 0x00c900e8; 0x044500ce; 0x00000003;
	0x30519e8f; 0x016800e5; 0x039c00e9; 0x064a00e7;
	0x30519e8f; 0x00e700e9; 0x03a300c7; 0x30519e8f;
	0x00c700e7; 0x016f00c9; 0x00000028; 0x300000ff;
	0x005200e1; 0x03aa00e3; 0x03ab00eb; 0x300000ff;
	0x00eb00e3; 0x005500ec; 0x300000ff; 0x00ec00eb;
	0x017600ed; 0x300000ff; 0x00ed00ec; 0x03b500ef;
	0x300000ff; 0x00ef00ed; 0x044b00f2; 0x300000ff;
	0x00f200ef; 0x044d00f3; 0x300000ff; 0x00f300f2;
	0x006f00f4; 0x300000ff; 0x00f400f3; 0x044900fd;
	0x300000ff; 0x00fd00f4; 0x044a0119; 0x300000ff;
	0x011900fd; 0x0620011a; 0x300000ff; 0x011a0119;
	0x01560116; 0x300000ff; 0x0116011a; 0x0619011c;
	0x300000ff; 0x011c0116; 0x036f0114; 0x300000ff;
	0x0114011c; 0x036b011f; 0x300000ff; 0x011f0114;
	0x004700b3; 0x300000ff; 0x00b3011f; 0x036d02a2;
	0x300000ff; 0x02a200b3; 0x036c0290; 0x300000ff;
	0x029002a2; 0x062202a0; 0x300000ff; 0x02a00290;
	0x0153028e; 0x300000ff; 0x028e02a0; 0x0623029f;
	0x300000ff; 0x029f028e; 0x038c0292; 0x300000ff;
	0x0292029f; 0x038f02a1; 0x300000ff; 0x02a10292;
	0x004e0293; 0x300000ff; 0x029302a1; 0x038d02cc;
	0x300000ff; 0x02cc0293; 0x038e0298; 0x300000ff;
	0x029802cc; 0x063102cb; 0x300000ff; 0x02cb0298;
	0x015f0297; 0x300000ff; 0x029702cb; 0x06bb06bb;
	0x300000ff; 0x06bb0297; 0x038a0299; 0x300000ff;
	0x029906bb; 0x06a106af; 0x300000ff; 0x06af0299;
	0x004d0285; 0x300000ff; 0x028506af; 0x06a006ae;
	0x300000ff; 0x06ae0285; 0x038a0299; 0x300000ff;
	0x029906ae; 0x05fe0296; 0x300000ff; 0x02960299;
	0x015f0297; 0x300000ff; 0x02970296; 0x06000295;
	0x300000ff; 0x02950297; 0x038e0298; 0x300000ff;
	0x02980295; 0x038b0291; 0x300000ff; 0x02910298;
	0x004e0293; 0x300000ff; 0x02930291; 0x038c0292;
	0x0000001b; 0x300000ff; 0x03aa00e3; 0x017500e6;
	0x005500ec; 0x300000ff; 0x00ec00e6; 0x005600ee;
	0x300000ff; 0x00ee00ec; 0x03b500ef; 0x300000ff;
	0x00ef00ee; 0x01b900f0; 0x300000ff; 0x00f000ef;
	0x044d00f3; 0x300000ff; 0x00f300f0; 0x062100fb;
	0x300000ff; 0x00fb00f3; 0x044900fd; 0x300000ff;
	0x00fd00fb; 0x015200f9; 0x300000ff; 0x00f900fd;
	0x0620011a; 0x300000ff; 0x011a00f9; 0x0617011b;
	0x300000ff; 0x011b011a; 0x0619011c; 0x300000ff;
	0x011c011b; 0x014e011d; 0x300000ff; 0x011d011c;
	0x036b011f; 0x300000ff; 0x011f011d; 0x061802a3;
	0x300000ff; 0x02a3011f; 0x036d02a2; 0x300000ff;
	0x02a202a3; 0x0154029e; 0x300000ff; 0x029e02a2;
	0x062202a0; 0x300000ff; 0x02a0029e; 0x0624029c;
	0x300000ff; 0x029c02a0; 0x0623029f; 0x300000ff;
	0x029f029c; 0x0160029d; 0x300000ff; 0x029d029f;
	0x038f02a1; 0x300000ff; 0x02a1029d; 0x063202ce;
	0x300000ff; 0x02ce02a1; 0x038d02cc; 0x300000ff;
	0x02cc02ce; 0x068b06ba; 0x300000ff; 0x06ba02cc;
	0x063102cb; 0x300000ff; 0x02cb06ba; 0x06ba06b9;
	0x300000ff; 0x06b902cb; 0x06bb06bb; 0x00000017;
	0x300000ff; 0x017500e6; 0x044600ea; 0x005600ee;
	0x300000ff; 0x00ee00ea; 0x044800f1; 0x300000ff;
	0x00f100ee; 0x01b900f0; 0x300000ff; 0x00f000f1;
	0x061f00fc; 0x300000ff; 0x00fc00f0; 0x062100fb;
	0x300000ff; 0x00fb00fc; 0x061e00f8; 0x300000ff;
	0x00f800fb; 0x015200f9; 0x300000ff; 0x00f900f8;
	0x036700f6; 0x300000ff; 0x00f600f9; 0x0617011b;
	0x300000ff; 0x011b00f6; 0x0363011e; 0x300000ff;
	0x011e011b; 0x014e011d; 0x300000ff; 0x011d011e;
	0x061602a4; 0x300000ff; 0x02a4011d; 0x061802a3;
	0x300000ff; 0x02a302a4; 0x061c02a5; 0x300000ff;
	0x02a502a3; 0x0154029e; 0x300000ff; 0x029e02a5;
	0x0391029b; 0x300000ff; 0x029b029e; 0x0624029c;
	0x300000ff; 0x029c029b; 0x0393029a; 0x300000ff;
	0x029a029c; 0x0160029d; 0x300000ff; 0x029d029a;
	0x063302cf; 0x300000ff; 0x02cf029d; 0x063202ce;
	0x300000ff; 0x02ce02cf; 0x06bc06bc; 0x300000ff;
	0x06bc02ce; 0x068b06ba; 0x00000015; 0x300000ff;
	0x044600ea; 0x006e00d0; 0x044800f1; 0x300000ff;
	0x00f100d0; 0x044400fe; 0x300000ff; 0x00fe00f1;
	0x061f00fc; 0x300000ff; 0x00fc00fe; 0x015100fa;
	0x300000ff; 0x00fa00fc; 0x061e00f8; 0x300000ff;
	0x00f800fa; 0x036600f7; 0x300000ff; 0x00f700f8;
	0x036700f6; 0x300000ff; 0x00f600f7; 0x004600f5;
	0x300000ff; 0x00f500f6; 0x0363011e; 0x300000ff;
	0x011e00f5; 0x03650269; 0x300000ff; 0x0269011e;
	0x061602a4; 0x300000ff; 0x02a40269; 0x0150026b;
	0x300000ff; 0x026b02a4; 0x061c02a5; 0x300000ff;
	0x02a5026b; 0x03900270; 0x300000ff; 0x027002a5;
	0x0391029b; 0x300000ff; 0x029b0270; 0x004f0272;
	0x300000ff; 0x0272029b; 0x0393029a; 0x300000ff;
	0x029a0272; 0x03920271; 0x300000ff; 0x0271029a;
	0x063302cf; 0x300000ff; 0x02cf0271; 0x068c06ab;
	0x300000ff; 0x06ab02cf; 0x06bc06bc; 0x00000008;
	0x30519e8f; 0x005200e1; 0x03ab00eb; 0x03a90105;
	0x30519e8f; 0x010500eb; 0x06690106; 0x30519e8f;
	0x01060105; 0x01740107; 0x30519e8f; 0x01070106;
	0x066b0109; 0x30519e8f; 0x01090107; 0x0438010c;
	0x30519e8f; 0x010c0109; 0x043b010d; 0x30519e8f;
	0x010d010c; 0x006c009b; 0x30519e8f; 0x009b010d;
	0x043700a9; 0x00000008; 0x30519e8f; 0x03ab00eb;
	0x017600ed; 0x06690106; 0x30519e8f; 0x010600ed;
	0x017c0108; 0x30519e8f; 0x01080106; 0x066b0109;
	0x30519e8f; 0x01090108; 0x01b7010a; 0x30519e8f;
	0x010a0109; 0x043b010d; 0x30519e8f; 0x010d010a;
	0x06260117; 0x30519e8f; 0x0117010d; 0x043700a9;
	0x30519e8f; 0x00a90117; 0x015500ac; 0x00000008;
	0x30519e8f; 0x017600ed; 0x044b00f2; 0x017c0108;
	0x30519e8f; 0x010800f2; 0x044c010b; 0x30519e8f;
	0x010b0108; 0x01b7010a; 0x30519e8f; 0x010a010b;
	0x06270118; 0x30519e8f; 0x0118010a; 0x06260117;
	0x30519e8f; 0x01170118; 0x06250115; 0x30519e8f;
	0x01150117; 0x015500ac; 0x30519e8f; 0x00ac0115;
	0x036e00b1; 0x00000008; 0x30519e8f; 0x044b00f2;
	0x006f00f4; 0x044c010b; 0x30519e8f; 0x010b00f4;
	0x044a0119; 0x30519e8f; 0x0119010b; 0x06270118;
	0x30519e8f; 0x01180119; 0x01560116; 0x30519e8f;
	0x01160118; 0x06250115; 0x30519e8f; 0x01150116;
	0x036f0114; 0x30519e8f; 0x01140115; 0x036e00b1;
	0x30519e8f; 0x00b10114; 0x004700b3; 0x00000007;
	0x30519e8f; 0x005200e1; 0x03a90105; 0x03a5010e;
	0x30519e8f; 0x010e0105; 0x065f010f; 0x30519e8f;
	0x010f010e; 0x01700110; 0x30519e8f; 0x0110010f;
	0x06610112; 0x30519e8f; 0x01120110; 0x03ad0113;
	0x30519e8f; 0x01130112; 0x03b00091; 0x30519e8f;
	0x00910113; 0x00530090; 0x00000005; 0x30519e8f;
	0x03a90105; 0x01740107; 0x065f010f; 0x30519e8f;
	0x010f0107; 0x066a0111; 0x30519e8f; 0x0111010f;
	0x06610112; 0x30519e8f; 0x01120111; 0x01790094;
	0x30519e8f; 0x00940112; 0x03b00091; 0x00000003;
	0x30519e8f; 0x01740107; 0x0438010c; 0x066a0111;
	0x30519e8f; 0x0111010c; 0x04390099; 0x30519e8f;
	0x00990111; 0x01790094; 0x0000001f; 0x300000ff;
	0x06860684; 0x03c70120; 0x03ca0121; 0x300000ff;
	0x01210120; 0x03b80122; 0x300000ff; 0x01220121;
	0x01890124; 0x300000ff; 0x01240122; 0x03ba0126;
	0x300000ff; 0x01260124; 0x040e012a; 0x300000ff;
	0x012a0126; 0x040d012b; 0x300000ff; 0x012b012a;
	0x0064012c; 0x300000ff; 0x012c012b; 0x040c0137;
	0x300000ff; 0x0137012c; 0x040f0146; 0x300000ff;
	0x01460137; 0x06410141; 0x300000ff; 0x01410146;
	0x01ad0142; 0x300000ff; 0x01420141; 0x06430140;
	0x300000ff; 0x01400142; 0x04120144; 0x300000ff;
	0x01440140; 0x04110143; 0x300000ff; 0x01430144;
	0x00650145; 0x300000ff; 0x01450143; 0x04130159;
	0x300000ff; 0x01590145; 0x041401f1; 0x300000ff;
	0x01f10159; 0x05f501f2; 0x300000ff; 0x01f201f1;
	0x01b001ee; 0x300000ff; 0x01ee01f2; 0x05fd01f4;
	0x300000ff; 0x01f401ee; 0x041c01ec; 0x300000ff;
	0x01ec01f4; 0x041d0164; 0x300000ff; 0x016401ec;
	0x00670136; 0x300000ff; 0x01360164; 0x041a0134;
	0x300000ff; 0x01340136; 0x041b0135; 0x300000ff;
	0x01350134; 0x03510131; 0x300000ff; 0x01310135;
	0x01ae0132; 0x300000ff; 0x01320131; 0x033c0130;
	0x300000ff; 0x01300132; 0x04100133; 0x300000ff;
	0x01330130; 0x040e012a; 0x300000ff; 0x012a0133;
	0x0064012c; 0x0000001d; 0x300000ff; 0x03c70120;
	0x01770123; 0x03b80122; 0x300000ff; 0x01220123;
	0x03b70125; 0x300000ff; 0x01250122; 0x03ba0126;
	0x300000ff; 0x01260125; 0x01780127; 0x300000ff;
	0x01270126; 0x040d012b; 0x300000ff; 0x012b0127;
	0x06400138; 0x300000ff; 0x0138012b; 0x040c0137;
	0x300000ff; 0x01370138; 0x01640139; 0x300000ff;
	0x01390137; 0x06410141; 0x300000ff; 0x01410139;
	0x063f013e; 0x300000ff; 0x013e0141; 0x06430140;
	0x300000ff; 0x0140013e; 0x0165013f; 0x300000ff;
	0x013f0140; 0x04110143; 0x300000ff; 0x0143013f;
	0x06440156; 0x300000ff; 0x01560143; 0x04130159;
	0x300000ff; 0x01590156; 0x01af0157; 0x300000ff;
	0x01570159; 0x05f501f2; 0x300000ff; 0x01f20157;
	0x05fa01f3; 0x300000ff; 0x01f301f2; 0x05fd01f4;
	0x300000ff; 0x01f401f3; 0x01b10163; 0x300000ff;
	0x016301f4; 0x041d0164; 0x300000ff; 0x01640163;
	0x03520161; 0x300000ff; 0x01610164; 0x041a0134;
	0x300000ff; 0x01340161; 0x018b012f; 0x300000ff;
	0x012f0134; 0x03510131; 0x300000ff; 0x0131012f;
	0x0335012e; 0x300000ff; 0x012e0131; 0x033c0130;
	0x300000ff; 0x0130012e; 0x01890124; 0x300000ff;
	0x01240130; 0x040e012a; 0x0000001b; 0x300000ff;
	0x01770123; 0x03ae0128; 0x03b70125; 0x300000ff;
	0x01250128; 0x03af0129; 0x300000ff; 0x01290125;
	0x01780127; 0x300000ff; 0x01270129; 0x063a013a;
	0x300000ff; 0x013a0127; 0x06400138; 0x300000ff;
	0x0138013a; 0x0638013b; 0x300000ff; 0x013b0138;
	0x01640139; 0x300000ff; 0x0139013b; 0x0397013c;
	0x300000ff; 0x013c0139; 0x063f013e; 0x300000ff;
	0x013e013c; 0x0398013d; 0x300000ff; 0x013d013e;
	0x0165013f; 0x300000ff; 0x013f013d; 0x06420154;
	0x300000ff; 0x0154013f; 0x06440156; 0x300000ff;
	0x01560154; 0x06460155; 0x300000ff; 0x01550156;
	0x01af0157; 0x300000ff; 0x01570155; 0x04180158;
	0x300000ff; 0x01580157; 0x05fa01f3; 0x300000ff;
	0x01f30158; 0x04190165; 0x300000ff; 0x016501f3;
	0x01b10163; 0x300000ff; 0x01630165; 0x034f0162;
	0x300000ff; 0x01620163; 0x03520161; 0x300000ff;
	0x01610162; 0x034d0160; 0x300000ff; 0x01600161;
	0x018b012f; 0x300000ff; 0x012f0160; 0x03cc012d;
	0x300000ff; 0x012d012f; 0x0335012e; 0x300000ff;
	0x012e012d; 0x03ca0121; 0x300000ff; 0x0121012e;
	0x01890124; 0x00000019; 0x300000ff; 0x03ae0128;
	0x00530090; 0x03af0129; 0x300000ff; 0x01290090;
	0x03ac009f; 0x300000ff; 0x009f0129; 0x063a013a;
	0x300000ff; 0x013a009f; 0x016200a1; 0x300000ff;
	0x00a1013a; 0x0638013b; 0x300000ff; 0x013b00a1;
	0x039500a6; 0x300000ff; 0x00a6013b; 0x0397013c;
	0x300000ff; 0x013c00a6; 0x005000a8; 0x300000ff;
	0x00a8013c; 0x0398013d; 0x300000ff; 0x013d00a8;
	0x03990148; 0x300000ff; 0x0148013d; 0x06420154;
	0x300000ff; 0x01540148; 0x0166014b; 0x300000ff;
	0x014b0154; 0x06460155; 0x300000ff; 0x0155014b;
	0x04150151; 0x300000ff; 0x01510155; 0x04180158;
	0x300000ff; 0x01580151; 0x00660153; 0x300000ff;
	0x01530158; 0x04190165; 0x300000ff; 0x01650153;
	0x0417015a; 0x300000ff; 0x015a0165; 0x034f0162;
	0x300000ff; 0x0162015a; 0x0691068d; 0x300000ff;
	0x068d0162; 0x034d0160; 0x300000ff; 0x0160068d;
	0x06ab068f; 0x300000ff; 0x068f0160; 0x03cc012d;
	0x300000ff; 0x012d068f; 0x06860684; 0x300000ff;
	0x0684012d; 0x03ca0121; 0x00000008; 0x30519e8f;
	0x005000a8; 0x03960147; 0x03990148; 0x30519e8f;
	0x01480147; 0x063c0149; 0x30519e8f; 0x01490148;
	0x0166014b; 0x30519e8f; 0x014b0149; 0x0645014d;
	0x30519e8f; 0x014d014b; 0x04150151; 0x30519e8f;
	0x0151014d; 0x04160152; 0x30519e8f; 0x01520151;
	0x00660153; 0x30519e8f; 0x01530152; 0x0417015a;
	0x00000008; 0x30519e8f; 0x03960147; 0x0163014a;
	0x063c0149; 0x30519e8f; 0x0149014a; 0x063e014c;
	0x30519e8f; 0x014c0149; 0x0645014d; 0x30519e8f;
	0x014d014c; 0x017d014e; 0x30519e8f; 0x014e014d;
	0x04160152; 0x30519e8f; 0x0152014e; 0x06be068c;
	0x30519e8f; 0x068c0152; 0x0417015a; 0x30519e8f;
	0x015a068c; 0x0691068d; 0x00000005; 0x30519e8f;
	0x0163014a; 0x03b2014f; 0x063e014c; 0x30519e8f;
	0x014c014f; 0x06a3068b; 0x30519e8f; 0x068b014c;
	0x017d014e; 0x30519e8f; 0x014e068b; 0x06ac068e;
	0x30519e8f; 0x068e014e; 0x06be068c; 0x00000016;
	0x300000ff; 0x00630166; 0x04090167; 0x04080168;
	0x300000ff; 0x01680167; 0x014f0169; 0x300000ff;
	0x01690168; 0x01a0016b; 0x300000ff; 0x016b0169;
	0x0043016d; 0x300000ff; 0x016d016b; 0x03e70172;
	0x300000ff; 0x0172016d; 0x03e40173; 0x300000ff;
	0x01730172; 0x005c0174; 0x300000ff; 0x01740173;
	0x03e201c7; 0x300000ff; 0x01c70174; 0x03e3017f;
	0x300000ff; 0x017f01c7; 0x065401d3; 0x300000ff;
	0x01d3017f; 0x019c0182; 0x300000ff; 0x018201d3;
	0x065701d2; 0x300000ff; 0x01d20182; 0x03eb0187;
	0x300000ff; 0x018701d2; 0x03e801cf; 0x300000ff;
	0x01cf0187; 0x005d0189; 0x300000ff; 0x018901cf;
	0x03e901d0; 0x300000ff; 0x01d00189; 0x03ea01d4;
	0x300000ff; 0x01d401d0; 0x066801d5; 0x300000ff;
	0x01d501d4; 0x018401d6; 0x300000ff; 0x01d601d5;
	0x066501d8; 0x300000ff; 0x01d801d6; 0x06a80697;
	0x300000ff; 0x069701d8; 0x06a60698; 0x00000018;
	0x300000ff; 0x04090167; 0x01a7016a; 0x014f0169;
	0x300000ff; 0x0169016a; 0x00f3016c; 0x300000ff;
	0x016c0169; 0x0043016d; 0x300000ff; 0x016d016c;
	0x019d016e; 0x300000ff; 0x016e016d; 0x03e40173;
	0x300000ff; 0x0173016e; 0x065501c5; 0x300000ff;
	0x01c50173; 0x03e201c7; 0x300000ff; 0x01c701c5;
	0x016b01c4; 0x300000ff; 0x01c401c7; 0x065401d3;
	0x300000ff; 0x01d301c4; 0x065201d1; 0x300000ff;
	0x01d101d3; 0x065701d2; 0x300000ff; 0x01d201d1;
	0x016c01ca; 0x300000ff; 0x01ca01d2; 0x03e801cf;
	0x300000ff; 0x01cf01ca; 0x065601cc; 0x300000ff;
	0x01cc01cf; 0x03e901d0; 0x300000ff; 0x01d001cc;
	0x017301cd; 0x300000ff; 0x01cd01d0; 0x066801d5;
	0x300000ff; 0x01d501cd; 0x066301d7; 0x300000ff;
	0x01d701d5; 0x066501d8; 0x300000ff; 0x01d801d7;
	0x017101d9; 0x300000ff; 0x01d901d8; 0x06a60698;
	0x300000ff; 0x069801d9; 0x0664020f; 0x300000ff;
	0x020f0698; 0x06a70689; 0x300000ff; 0x0689020f;
	0x068f0688; 0x00000018; 0x300000ff; 0x01a7016a;
	0x03f9016f; 0x00f3016c; 0x300000ff; 0x016c016f;
	0x03f60170; 0x300000ff; 0x0170016c; 0x019d016e;
	0x300000ff; 0x016e0170; 0x065901c6; 0x300000ff;
	0x01c6016e; 0x065501c5; 0x300000ff; 0x01c501c6;
	0x065301c3; 0x300000ff; 0x01c301c5; 0x016b01c4;
	0x300000ff; 0x01c401c3; 0x039f01c2; 0x300000ff;
	0x01c201c4; 0x065201d1; 0x300000ff; 0x01d101c2;
	0x03a001c8; 0x300000ff; 0x01c801d1; 0x016c01ca;
	0x300000ff; 0x01ca01c8; 0x064901c9; 0x300000ff;
	0x01c901ca; 0x065601cc; 0x300000ff; 0x01cc01c9;
	0x064b01cb; 0x300000ff; 0x01cb01cc; 0x017301cd;
	0x300000ff; 0x01cd01cb; 0x03a801ce; 0x300000ff;
	0x01ce01cd; 0x066301d7; 0x300000ff; 0x01d701ce;
	0x03a601da; 0x300000ff; 0x01da01d7; 0x017101d9;
	0x300000ff; 0x01d901da; 0x0662020d; 0x300000ff;
	0x020d01d9; 0x0664020f; 0x300000ff; 0x020f020d;
	0x0667020e; 0x300000ff; 0x020e020f; 0x068f0688;
	0x300000ff; 0x0688020e; 0x06aa068a; 0x00000018;
	0x300000ff; 0x03f9016f; 0x06870690; 0x03f60170;
	0x300000ff; 0x01700690; 0x03f301b7; 0x300000ff;
	0x01b70170; 0x065901c6; 0x300000ff; 0x01c601b7;
	0x016d01ba; 0x300000ff; 0x01ba01c6; 0x065301c3;
	0x300000ff; 0x01c301ba; 0x03a101c0; 0x300000ff;
	0x01c001c3; 0x039f01c2; 0x300000ff; 0x01c201c0;
	0x005100bd; 0x300000ff; 0x00bd01c2; 0x03a001c8;
	0x300000ff; 0x01c800bd; 0x039c00e9; 0x300000ff;
	0x00e901c8; 0x064901c9; 0x300000ff; 0x01c900e9;
	0x016800e5; 0x300000ff; 0x00e501c9; 0x064b01cb;
	0x300000ff; 0x01cb00e5; 0x03a400e2; 0x300000ff;
	0x00e201cb; 0x03a801ce; 0x300000ff; 0x01ce00e2;
	0x005200e1; 0x300000ff; 0x00e101ce; 0x03a601da;
	0x300000ff; 0x01da00e1; 0x03a70207; 0x300000ff;
	0x020701da; 0x0662020d; 0x300000ff; 0x020d0207;
	0x01720209; 0x300000ff; 0x0209020d; 0x0667020e;
	0x300000ff; 0x020e0209; 0x03c6020c; 0x300000ff;
	0x020c020e; 0x06aa068a; 0x300000ff; 0x068a020c;
	0x06860684; 0x00000010; 0x300000ff; 0x005c0174;
	0x03e50175; 0x03e70172; 0x300000ff; 0x01720175;
	0x01360176; 0x300000ff; 0x01760172; 0x01a0016b;
	0x300000ff; 0x016b0176; 0x015a0179; 0x300000ff;
	0x0179016b; 0x04080168; 0x300000ff; 0x01680179;
	0x040a017e; 0x300000ff; 0x017e0168; 0x00630166;
	0x300000ff; 0x0166017e; 0x040b01b4; 0x300000ff;
	0x01b40166; 0x04090167; 0x300000ff; 0x016701b4;
	0x038701b1; 0x300000ff; 0x01b10167; 0x01a7016a;
	0x300000ff; 0x016a01b1; 0x038501b0; 0x300000ff;
	0x01b0016a; 0x03f9016f; 0x300000ff; 0x016f01b0;
	0x03f801ae; 0x300000ff; 0x01ae016f; 0x06870690;
	0x300000ff; 0x069001ae; 0x06ae0692; 0x00000010;
	0x300000ff; 0x03e50175; 0x019e0177; 0x01360176;
	0x300000ff; 0x01760177; 0x013b0178; 0x300000ff;
	0x01780176; 0x015a0179; 0x300000ff; 0x01790178;
	0x01aa017a; 0x300000ff; 0x017a0179; 0x040a017e;
	0x300000ff; 0x017e017a; 0x05e80206; 0x300000ff;
	0x0206017e; 0x040b01b4; 0x300000ff; 0x01b40206;
	0x01ac01b3; 0x300000ff; 0x01b301b4; 0x038701b1;
	0x300000ff; 0x01b101b3; 0x038601b2; 0x300000ff;
	0x01b201b1; 0x038501b0; 0x300000ff; 0x01b001b2;
	0x01a601a9; 0x300000ff; 0x01a901b0; 0x03f801ae;
	0x300000ff; 0x01ae01a9; 0x037701ab; 0x300000ff;
	0x01ab01ae; 0x06ae0692; 0x300000ff; 0x069201ab;
	0x06920691; 0x00000018; 0x300000ff; 0x019e0177;
	0x03fa017b; 0x013b0178; 0x300000ff; 0x0178017b;
	0x03fd017c; 0x300000ff; 0x017c0178; 0x01aa017a;
	0x300000ff; 0x017a017c; 0x05760204; 0x300000ff;
	0x0204017a; 0x05e80206; 0x300000ff; 0x02060204;
	0x05d40205; 0x300000ff; 0x02050206; 0x01ac01b3;
	0x300000ff; 0x01b30205; 0x040701b5; 0x300000ff;
	0x01b501b3; 0x038601b2; 0x300000ff; 0x01b201b5;
	0x040401a7; 0x300000ff; 0x01a701b2; 0x01a601a9;
	0x300000ff; 0x01a901a7; 0x038401a8; 0x300000ff;
	0x01a801a9; 0x037701ab; 0x300000ff; 0x01ab01a8;
	0x037601aa; 0x300000ff; 0x01aa01ab; 0x06920691;
	0x300000ff; 0x069101aa; 0x03f101ad; 0x300000ff;
	0x01ad0691; 0x06bf069b; 0x300000ff; 0x069b01ad;
	0x03ef01e2; 0x300000ff; 0x01e2069b; 0x0690069a;
	0x300000ff; 0x069a01e2; 0x017b01e0; 0x300000ff;
	0x01e0069a; 0x015701de; 0x300000ff; 0x01de01e0;
	0x015d01e1; 0x300000ff; 0x01e101de; 0x018401d6;
	0x300000ff; 0x01d601e1; 0x03ea01d4; 0x00000018;
	0x300000ff; 0x03fa017b; 0x0060017d; 0x03fd017c;
	0x300000ff; 0x017c017d; 0x03fc01fe; 0x300000ff;
	0x01fe017c; 0x05760204; 0x300000ff; 0x020401fe;
	0x01a90200; 0x300000ff; 0x02000204; 0x05d40205;
	0x300000ff; 0x02050200; 0x04050203; 0x300000ff;
	0x02030205; 0x040701b5; 0x300000ff; 0x01b50203;
	0x006201a0; 0x300000ff; 0x01a001b5; 0x040401a7;
	0x300000ff; 0x01a701a0; 0x0403019f; 0x300000ff;
	0x019f01a7; 0x038401a8; 0x300000ff; 0x01a8019f;
	0x01a5019a; 0x300000ff; 0x019a01a8; 0x037601aa;
	0x300000ff; 0x01aa019a; 0x03f2019c; 0x300000ff;
	0x019c01aa; 0x03f101ad; 0x300000ff; 0x01ad019c;
	0x005e019d; 0x300000ff; 0x019d01ad; 0x03ef01e2;
	0x300000ff; 0x01e2019d; 0x03f0019b; 0x300000ff;
	0x019b01e2; 0x017b01e0; 0x300000ff; 0x01e0019b;
	0x01a10196; 0x300000ff; 0x019601e0; 0x015d01e1;
	0x300000ff; 0x01e10196; 0x03ec0193; 0x300000ff;
	0x019301e1; 0x03ea01d4; 0x300000ff; 0x01d40193;
	0x005d0189; 0x0000000f; 0x300000ff; 0x005c0174;
	0x03e3017f; 0x03e60180; 0x300000ff; 0x0180017f;
	0x00570181; 0x300000ff; 0x01810180; 0x019f0183;
	0x300000ff; 0x01830181; 0x013d0185; 0x300000ff;
	0x01850183; 0x03fe018a; 0x300000ff; 0x018a0185;
	0x03ff018b; 0x300000ff; 0x018b018a; 0x0061018c;
	0x300000ff; 0x018c018b; 0x040101a6; 0x300000ff;
	0x01a6018c; 0x04000191; 0x300000ff; 0x019101a6;
	0x05730201; 0x300000ff; 0x02010191; 0x01a80190;
	0x300000ff; 0x01900201; 0x057201ff; 0x300000ff;
	0x01ff0190; 0x03fb0192; 0x300000ff; 0x019201ff;
	0x03fc01fe; 0x300000ff; 0x01fe0192; 0x0060017d;
	0x0000000d; 0x300000ff; 0x03e3017f; 0x019c0182;
	0x00570181; 0x300000ff; 0x01810182; 0x01810184;
	0x300000ff; 0x01840181; 0x013d0185; 0x300000ff;
	0x01850184; 0x01a20186; 0x300000ff; 0x01860185;
	0x03ff018b; 0x300000ff; 0x018b0186; 0x034b01a3;
	0x300000ff; 0x01a3018b; 0x040101a6; 0x300000ff;
	0x01a601a3; 0x01ab01a4; 0x300000ff; 0x01a401a6;
	0x05730201; 0x300000ff; 0x020101a4; 0x05790202;
	0x300000ff; 0x02020201; 0x057201ff; 0x300000ff;
	0x01ff0202; 0x01a90200; 0x300000ff; 0x020001ff;
	0x03fc01fe; 0x0000000b; 0x300000ff; 0x019c0182;
	0x03eb0187; 0x01810184; 0x300000ff; 0x01840187;
	0x03ed0188; 0x300000ff; 0x01880184; 0x01a20186;
	0x300000ff; 0x01860188; 0x033701a1; 0x300000ff;
	0x01a10186; 0x034b01a3; 0x300000ff; 0x01a301a1;
	0x037401a2; 0x300000ff; 0x01a201a3; 0x01ab01a4;
	0x300000ff; 0x01a401a2; 0x040601a5; 0x300000ff;
	0x01a501a4; 0x05790202; 0x300000ff; 0x020201a5;
	0x04050203; 0x300000ff; 0x02030202; 0x01a90200;
	0x00000009; 0x30519e8f; 0x03eb0187; 0x005d0189;
	0x03ed0188; 0x30519e8f; 0x01880189; 0x03ee0194;
	0x30519e8f; 0x01940188; 0x033701a1; 0x30519e8f;
	0x01a10194; 0x01a30197; 0x30519e8f; 0x019701a1;
	0x037401a2; 0x30519e8f; 0x01a20197; 0x0402019e;
	0x30519e8f; 0x019e01a2; 0x040601a5; 0x30519e8f;
	0x01a5019e; 0x006201a0; 0x30519e8f; 0x01a001a5;
	0x04050203; 0x00000007; 0x30519e8f; 0x005c0174;
	0x03e60180; 0x03e50175; 0x30519e8f; 0x01750180;
	0x00f6018d; 0x30519e8f; 0x018d0175; 0x019e0177;
	0x30519e8f; 0x0177018d; 0x0139018f; 0x30519e8f;
	0x018f0177; 0x03fa017b; 0x30519e8f; 0x017b018f;
	0x03fb0192; 0x30519e8f; 0x0192017b; 0x0060017d;
	0x00000005; 0x30519e8f; 0x03e60180; 0x019f0183;
	0x00f6018d; 0x30519e8f; 0x018d0183; 0x013e018e;
	0x30519e8f; 0x018e018d; 0x0139018f; 0x30519e8f;
	0x018f018e; 0x01a80190; 0x30519e8f; 0x0190018f;
	0x03fb0192; 0x00000003; 0x30519e8f; 0x019f0183;
	0x03fe018a; 0x013e018e; 0x30519e8f; 0x018e018a;
	0x04000191; 0x30519e8f; 0x0191018e; 0x01a80190;
	0x00000007; 0x30519e8f; 0x005d0189; 0x03ec0193;
	0x03ee0194; 0x30519e8f; 0x01940193; 0x015c0195;
	0x30519e8f; 0x01950194; 0x01a30197; 0x30519e8f;
	0x01970195; 0x03500199; 0x30519e8f; 0x01990197;
	0x0402019e; 0x30519e8f; 0x019e0199; 0x0403019f;
	0x30519e8f; 0x019f019e; 0x006201a0; 0x00000005;
	0x30519e8f; 0x03ec0193; 0x01a10196; 0x015c0195;
	0x30519e8f; 0x01950196; 0x03360198; 0x30519e8f;
	0x01980195; 0x03500199; 0x30519e8f; 0x01990198;
	0x01a5019a; 0x30519e8f; 0x019a0199; 0x0403019f;
	0x00000003; 0x30519e8f; 0x01a10196; 0x03f0019b;
	0x03360198; 0x30519e8f; 0x0198019b; 0x03f2019c;
	0x30519e8f; 0x019c0198; 0x01a5019a; 0x00000007;
	0x30519e8f; 0x06870690; 0x06ad0693; 0x03f301b7;
	0x30519e8f; 0x01b70693; 0x065801b8; 0x30519e8f;
	0x01b801b7; 0x016d01ba; 0x30519e8f; 0x01ba01b8;
	0x064f01bc; 0x30519e8f; 0x01bc01ba; 0x03a101c0;
	0x30519e8f; 0x01c001bc; 0x039e01c1; 0x30519e8f;
	0x01c101c0; 0x005100bd; 0x00000005; 0x30519e8f;
	0x06ad0693; 0x068e0694; 0x065801b8; 0x30519e8f;
	0x01b80694; 0x065101bb; 0x30519e8f; 0x01bb01b8;
	0x064f01bc; 0x30519e8f; 0x01bc01bb; 0x016a01bd;
	0x30519e8f; 0x01bd01bc; 0x039e01c1; 0x00000003;
	0x30519e8f; 0x068e0694; 0x06a50695; 0x065101bb;
	0x30519e8f; 0x01bb0695; 0x06a40696; 0x30519e8f;
	0x069601bb; 0x016a01bd; 0x00000002; 0x30519e8f;
	0x06a90699; 0x015701de; 0x06a80697; 0x30519e8f;
	0x069701de; 0x018401d6; 0x00000007; 0x30519e8f;
	0x00670136; 0x041b0135; 0x041c01ec; 0x30519e8f;
	0x01ec0135; 0x05f101ed; 0x30519e8f; 0x01ed01ec;
	0x01b001ee; 0x30519e8f; 0x01ee01ed; 0x05ee01f0;
	0x30519e8f; 0x01f001ee; 0x041401f1; 0x30519e8f;
	0x01f101f0; 0x04120144; 0x30519e8f; 0x014401f1;
	0x00650145; 0x00000005; 0x30519e8f; 0x041b0135;
	0x01ae0132; 0x05f101ed; 0x30519e8f; 0x01ed0132;
	0x05e901ef; 0x30519e8f; 0x01ef01ed; 0x05ee01f0;
	0x30519e8f; 0x01f001ef; 0x01ad0142; 0x30519e8f;
	0x014201f0; 0x04120144; 0x00000003; 0x30519e8f;
	0x01ae0132; 0x04100133; 0x05e901ef; 0x30519e8f;
	0x01ef0133; 0x040f0146; 0x30519e8f; 0x014601ef;
	0x01ad0142; 0x00000007; 0x30519e8f; 0x005200e1;
	0x03a5010e; 0x03a70207; 0x30519e8f; 0x0207010e;
	0x065e0208; 0x30519e8f; 0x02080207; 0x01720209;
	0x30519e8f; 0x02090208; 0x0666020b; 0x30519e8f;
	0x020b0209; 0x03c6020c; 0x30519e8f; 0x020c020b;
	0x03c70120; 0x30519e8f; 0x0120020c; 0x06860684;
	0x00000005; 0x30519e8f; 0x03a5010e; 0x01700110;
	0x065e0208; 0x30519e8f; 0x02080110; 0x0660020a;
	0x30519e8f; 0x020a0208; 0x0666020b; 0x30519e8f;
	0x020b020a; 0x01770123; 0x30519e8f; 0x0123020b;
	0x03c70120; 0x00000003; 0x30519e8f; 0x01700110;
	0x03ad0113; 0x0660020a; 0x30519e8f; 0x020a0113;
	0x03ae0128; 0x30519e8f; 0x0128020a; 0x01770123;
	0x00000007; 0x30519e8f; 0x0684069d; 0x0695069e;
	0x033b021e; 0x30519e8f; 0x021e069e; 0x06b0069f;
	0x30519e8f; 0x069f021e; 0x01350220; 0x30519e8f;
	0x0220069f; 0x05e00238; 0x30519e8f; 0x02380220;
	0x03700224; 0x30519e8f; 0x02240238; 0x0371023b;
	0x30519e8f; 0x023b0224; 0x00480226; 0x00000002;
	0x30519e8f; 0x06b106a0; 0x068a06a1; 0x05e00238;
	0x30519e8f; 0x023806a1; 0x0371023b; 0x00000004;
	0x30519e8f; 0x06b206a2; 0x014c0243; 0x06b306a3;
	0x30519e8f; 0x06a30243; 0x037a0247; 0x30519e8f;
	0x024706a3; 0x069e06a5; 0x30519e8f; 0x06a50247;
	0x004a0248; 0x00000002; 0x30519e8f; 0x069a06a4;
	0x035f0245; 0x06b206a2; 0x30519e8f; 0x06a20245;
	0x014c0243; 0x00000009; 0x30519e8f; 0x069a06a4;
	0x004500df; 0x035f0245; 0x30519e8f; 0x024500df;
	0x035d00dd; 0x30519e8f; 0x00dd0245; 0x06030252;
	0x30519e8f; 0x025200dd; 0x014400d9; 0x30519e8f;
	0x00d90252; 0x06010253; 0x30519e8f; 0x025300d9;
	0x035400d7; 0x30519e8f; 0x00d70253; 0x03560254;
	0x30519e8f; 0x025400d7; 0x004400b6; 0x30519e8f;
	0x00b60254; 0x03570219; 0x00000005; 0x30519e8f;
	0x004a0248; 0x037a0247; 0x0379024f; 0x30519e8f;
	0x024f0247; 0x06080250; 0x30519e8f; 0x0250024f;
	0x01460251; 0x30519e8f; 0x02510250; 0x06010253;
	0x30519e8f; 0x02530251; 0x03560254; 0x00000003;
	0x30519e8f; 0x037a0247; 0x014c0243; 0x06080250;
	0x30519e8f; 0x02500243; 0x06030252; 0x30519e8f;
	0x02520250; 0x06010253; 0x00000002; 0x30519e8f;
	0x03570219; 0x06070255; 0x03560254; 0x30519e8f;
	0x02540255; 0x01460251; 0x00000005; 0x30519e8f;
	0x03570219; 0x01470214; 0x06070255; 0x30519e8f;
	0x02550214; 0x060a0256; 0x30519e8f; 0x02560255;
	0x06090257; 0x30519e8f; 0x02570256; 0x015b0258;
	0x30519e8f; 0x02580257; 0x037d025a; 0x00000002;
	0x30519e8f; 0x06070255; 0x06090257; 0x01460251;
	0x30519e8f; 0x02510257; 0x0379024f; 0x00000003;
	0x30519e8f; 0x01470214; 0x037f0211; 0x060a0256;
	0x30519e8f; 0x02560211; 0x03810259; 0x30519e8f;
	0x02590256; 0x015b0258; 0x00000002; 0x30519e8f;
	0x06090257; 0x037d025a; 0x0379024f; 0x30519e8f;
	0x024f025a; 0x004a0248; 0x00000007; 0x30519e8f;
	0x004600f5; 0x069d06a8; 0x03650269; 0x30519e8f;
	0x026906a8; 0x06b606a9; 0x30519e8f; 0x06a90269;
	0x0150026b; 0x30519e8f; 0x026b06a9; 0x061d026d;
	0x30519e8f; 0x026d026b; 0x03900270; 0x30519e8f;
	0x0270026d; 0x03920271; 0x30519e8f; 0x02710270;
	0x004f0272; 0x00000002; 0x30519e8f; 0x06b706aa;
	0x068c06ab; 0x061d026d; 0x30519e8f; 0x026d06ab;
	0x03920271; 0x00000005; 0x30519e8f; 0x069706b0;
	0x05f80289; 0x069906b1; 0x30519e8f; 0x06b10289;
	0x0143028b; 0x30519e8f; 0x028b06b1; 0x05fc0294;
	0x30519e8f; 0x0294028b; 0x06000295; 0x30519e8f;
	0x02950294; 0x05fe0296; 0x00000005; 0x30519e8f;
	0x069706b0; 0x0140028a; 0x05f80289; 0x30519e8f;
	0x0289028a; 0x05f9028c; 0x30519e8f; 0x028c0289;
	0x05ff028d; 0x30519e8f; 0x028d028c; 0x0153028e;
	0x30519e8f; 0x028e028d; 0x038c0292; 0x00000003;
	0x30519e8f; 0x05f80289; 0x05ff028d; 0x0143028b;
	0x30519e8f; 0x028b028d; 0x038b0291; 0x30519e8f;
	0x0291028b; 0x06000295; 0x00000003; 0x30519e8f;
	0x0140028a; 0x0369028f; 0x05f9028c; 0x30519e8f;
	0x028c028f; 0x036c0290; 0x30519e8f; 0x0290028c;
	0x0153028e; 0x00000002; 0x30519e8f; 0x069906b1;
	0x05fc0294; 0x069806ac; 0x30519e8f; 0x06ac0294;
	0x068906ad; 0x00000002; 0x30519e8f; 0x05fc0294;
	0x05fe0296; 0x068906ad; 0x30519e8f; 0x06ad0296;
	0x06a006ae; 0x00000009; 0x30519e8f; 0x004700b3;
	0x0369028f; 0x036802a6; 0x30519e8f; 0x02a6028f;
	0x05dc02a7; 0x30519e8f; 0x02a702a6; 0x013402a8;
	0x30519e8f; 0x02a802a7; 0x05d602aa; 0x30519e8f;
	0x02aa02a8; 0x033a02ad; 0x30519e8f; 0x02ad02aa;
	0x033802ae; 0x30519e8f; 0x02ae02ad; 0x0684069d;
	0x30519e8f; 0x069d02ae; 0x069306bd; 0x30519e8f;
	0x06bd069d; 0x069406be; 0x00000007; 0x30519e8f;
	0x0369028f; 0x0140028a; 0x05dc02a7; 0x30519e8f;
	0x02a7028a; 0x05d702a9; 0x30519e8f; 0x02a902a7;
	0x05d602aa; 0x30519e8f; 0x02aa02a9; 0x068806b2;
	0x30519e8f; 0x06b202aa; 0x033802ae; 0x30519e8f;
	0x02ae06b2; 0x06af06bf; 0x30519e8f; 0x06bf02ae;
	0x069306bd; 0x00000003; 0x30519e8f; 0x0140028a;
	0x069706b0; 0x05d702a9; 0x30519e8f; 0x02a906b0;
	0x069606b3; 0x30519e8f; 0x06b302a9; 0x068806b2;

Poly_0003:	// 0x00003ff4
	0x30519e8f; 0x043e00c6; 0x006d009e; 0x044100cd;
	0x30519e8f; 0x039c00e9; 0x005100bd; 0x03a300c7;
	0x30519e8f; 0x0438010c; 0x006c009b; 0x04390099;
	0x30519e8f; 0x03b2014f; 0x06850685; 0x06a3068b;
	0x30519e8f; 0x03fe018a; 0x0061018c; 0x04000191;
	0x30519e8f; 0x03f0019b; 0x005e019d; 0x03f2019c;
	0x30519e8f; 0x06a90699; 0x0690069a; 0x015701de;
	0x30519e8f; 0x04100133; 0x0064012c; 0x040f0146;
	0x30519e8f; 0x03ad0113; 0x00530090; 0x03ae0128;
	0x30519e8f; 0x06b106a0; 0x05e00238; 0x06b0069f;
	0x30519e8f; 0x014c0243; 0x035f0245; 0x06030252;
	0x30519e8f; 0x037f0211; 0x004b0210; 0x03810259;
	0x30519e8f; 0x06b706aa; 0x061d026d; 0x06b606a9;
	0x30519e8f; 0x0369028f; 0x004700b3; 0x036c0290;
	0x30519e8f; 0x05ff028d; 0x038c0292; 0x038b0291;
	0x30519e8f; 0x004500df; 0x069a06a4; 0x069b06b6;

Poly_0004:	// 0x000040f4
	0x00000008; 0x30519e8f; 0x06cc06c0; 0x0131022b;
	0x06da06c1; 0x30519e8f; 0x06c1022b; 0x05d5022d;
	0x30519e8f; 0x022d06c1; 0x05e2022e; 0x30519e8f;
	0x022e022d; 0x013a022f; 0x30519e8f; 0x022f022e;
	0x03750234; 0x30519e8f; 0x0234022f; 0x05ec024b;
	0x30519e8f; 0x024b0234; 0x06d106ca; 0x30519e8f;
	0x06ca024b; 0x06c906c9; 0x00000002; 0x30519e8f;
	0x06da06c1; 0x05e2022e; 0x06c306c2; 0x30519e8f;
	0x06c2022e; 0x06cf06c3; 0x00000007; 0x30519e8f;
	0x0131022b; 0x03400230; 0x05d5022d; 0x30519e8f;
	0x022d0230; 0x03430231; 0x30519e8f; 0x0231022d;
	0x013a022f; 0x30519e8f; 0x022f0231; 0x05eb0249;
	0x30519e8f; 0x0249022f; 0x05ec024b; 0x30519e8f;
	0x024b0249; 0x06dd06c8; 0x30519e8f; 0x06c8024b;
	0x06c906c9; 0x00000005; 0x30519e8f; 0x03400230;
	0x00410232; 0x03430231; 0x30519e8f; 0x02310232;
	0x0344023d; 0x30519e8f; 0x023d0231; 0x05eb0249;
	0x30519e8f; 0x0249023d; 0x06c506c7; 0x30519e8f;
	0x06c70249; 0x06dd06c8; 0x00000004; 0x30519e8f;
	0x05e2022e; 0x03750234; 0x06cf06c3; 0x30519e8f;
	0x06c30234; 0x00490235; 0x30519e8f; 0x023506c3;
	0x06d006c4; 0x30519e8f; 0x06c40235; 0x06d106ca;
	0x00000003; 0x30519e8f; 0x00410232; 0x0342023c;
	0x0344023d; 0x30519e8f; 0x023d023c; 0x06db06c5;
	0x30519e8f; 0x06c5023d; 0x06c506c7; 0x00000004;
	0x30519e8f; 0x06c706cc; 0x05f30260; 0x06df06cb;
	0x30519e8f; 0x06cb0260; 0x05f70261; 0x30519e8f;
	0x026106cb; 0x06c806cd; 0x30519e8f; 0x06cd0261;
	0x06d206ce; 0x00000006; 0x30519e8f; 0x05f30260;
	0x013f0262; 0x05f70261; 0x30519e8f; 0x02610262;
	0x03820267; 0x30519e8f; 0x02670261; 0x06d206ce;
	0x30519e8f; 0x06ce0267; 0x004c0268; 0x30519e8f;
	0x026806ce; 0x06d506cf; 0x30519e8f; 0x06cf0268;
	0x06d406d9; 0x00000009; 0x30519e8f; 0x06c706cc;
	0x03490263; 0x05f30260; 0x30519e8f; 0x02600263;
	0x034a0264; 0x30519e8f; 0x02640260; 0x013f0262;
	0x30519e8f; 0x02620264; 0x05ef0276; 0x30519e8f;
	0x02760262; 0x05f60274; 0x30519e8f; 0x02740276;
	0x05f00277; 0x30519e8f; 0x02770274; 0x01410275;
	0x30519e8f; 0x02750277; 0x06ce06d0; 0x30519e8f;
	0x06d00275; 0x06e006d2; 0x00000008; 0x30519e8f;
	0x03490263; 0x00420265; 0x034a0264; 0x30519e8f;
	0x02640265; 0x03470279; 0x30519e8f; 0x02790264;
	0x05ef0276; 0x30519e8f; 0x02760279; 0x013c0278;
	0x30519e8f; 0x02780276; 0x05f00277; 0x30519e8f;
	0x02770278; 0x034e027b; 0x30519e8f; 0x027b0277;
	0x06ce06d0; 0x30519e8f; 0x06d0027b; 0x06c006d1;
	0x00000003; 0x30519e8f; 0x004c0268; 0x03820267;
	0x03830273; 0x30519e8f; 0x02730267; 0x05f60274;
	0x30519e8f; 0x02740273; 0x01410275; 0x00000002;
	0x30519e8f; 0x06e106d3; 0x05fb0281; 0x06e006d2;
	0x30519e8f; 0x06d20281; 0x01410275; 0x00000004;
	0x30519e8f; 0x06e106d3; 0x06ca06d4; 0x05fb0281;
	0x30519e8f; 0x028106d4; 0x06d306d5; 0x30519e8f;
	0x06d50281; 0x03830273; 0x30519e8f; 0x027306d5;
	0x004c0268; 0x00000007; 0x30519e8f; 0x06c406c6;
	0x05e602be; 0x06dc06d6; 0x30519e8f; 0x06d602be;
	0x05e702bf; 0x30519e8f; 0x02bf06d6; 0x06c606d7;
	0x30519e8f; 0x06d702bf; 0x034802c2; 0x30519e8f;
	0x02c206d7; 0x06de06d8; 0x30519e8f; 0x06d802c2;
	0x03490263; 0x30519e8f; 0x026306d8; 0x06c706cc;
	0x00000005; 0x30519e8f; 0x05e602be; 0x013802c0;
	0x05e702bf; 0x30519e8f; 0x02bf02c0; 0x034602c3;
	0x30519e8f; 0x02c302bf; 0x034802c2; 0x30519e8f;
	0x02c202c3; 0x00420265; 0x30519e8f; 0x026502c2;
	0x03490263; 0x0000005d; 0x300000ff; 0x06c406c6;
	0x0342023c; 0x05e602be; 0x300000ff; 0x02be023c;
	0x034102c1; 0x300000ff; 0x02c102be; 0x013802c0;
	0x300000ff; 0x02c002c1; 0x05840302; 0x300000ff;
	0x030202c0; 0x05860301; 0x300000ff; 0x03010302;
	0x058202ff; 0x300000ff; 0x02ff0301; 0x00fb0300;
	0x300000ff; 0x030002ff; 0x029202fe; 0x300000ff;
	0x02fe0300; 0x0585030d; 0x300000ff; 0x030d02fe;
	0x02930305; 0x300000ff; 0x0305030d; 0x00fc0308;
	0x300000ff; 0x03080305; 0x05710306; 0x300000ff;
	0x03060308; 0x0575030a; 0x300000ff; 0x030a0306;
	0x05700309; 0x300000ff; 0x0309030a; 0x00f402e0;
	0x300000ff; 0x02e00309; 0x028402de; 0x300000ff;
	0x02de02e0; 0x06d606dd; 0x300000ff; 0x06dd02de;
	0x028302d2; 0x300000ff; 0x02d206dd; 0x06c106da;
	0x300000ff; 0x06da02d2; 0x056e02d3; 0x300000ff;
	0x02d306da; 0x06d706db; 0x300000ff; 0x06db02d3;
	0x056f02d6; 0x300000ff; 0x02d606db; 0x06c206dc;
	0x300000ff; 0x06dc02d6; 0x028b02da; 0x300000ff;
	0x02da06dc; 0x057702e7; 0x300000ff; 0x02e702da;
	0x028a02ea; 0x300000ff; 0x02ea02e7; 0x00f502e9;
	0x300000ff; 0x02e902ea; 0x04840533; 0x300000ff;
	0x053302e9; 0x04860532; 0x300000ff; 0x05320533;
	0x04830530; 0x300000ff; 0x05300532; 0x00870510;
	0x300000ff; 0x05100530; 0x01da0514; 0x300000ff;
	0x05140510; 0x0485050f; 0x300000ff; 0x050f0514;
	0x01db0513; 0x300000ff; 0x0513050f; 0x0088050d;
	0x300000ff; 0x050d0513; 0x04810517; 0x300000ff;
	0x0517050d; 0x0488051a; 0x300000ff; 0x051a0517;
	0x04820519; 0x300000ff; 0x0519051a; 0x008d04ed;
	0x300000ff; 0x04ed0519; 0x01e204f2; 0x300000ff;
	0x04f204ed; 0x049504ec; 0x300000ff; 0x04ec04f2;
	0x01e304f1; 0x300000ff; 0x04f104ec; 0x008e04ea;
	0x300000ff; 0x04ea04f1; 0x049004f5; 0x300000ff;
	0x04f504ea; 0x049704f8; 0x300000ff; 0x04f804f5;
	0x049204f7; 0x300000ff; 0x04f704f8; 0x00ab0452;
	0x300000ff; 0x045204f7; 0x020b0457; 0x300000ff;
	0x04570452; 0x04dd0451; 0x300000ff; 0x04510457;
	0x020c0456; 0x300000ff; 0x04560451; 0x00ac044f;
	0x300000ff; 0x044f0456; 0x04da045a; 0x300000ff;
	0x045a044f; 0x04df045d; 0x300000ff; 0x045d045a;
	0x04dc045c; 0x300000ff; 0x045c045d; 0x00e20318;
	0x300000ff; 0x0318045c; 0x0260031d; 0x300000ff;
	0x031d0318; 0x05550317; 0x300000ff; 0x0317031d;
	0x0261031c; 0x300000ff; 0x031c0317; 0x00e30315;
	0x300000ff; 0x0315031c; 0x05520320; 0x300000ff;
	0x03200315; 0x05570323; 0x300000ff; 0x03230320;
	0x05540322; 0x300000ff; 0x03220323; 0x00ec0324;
	0x300000ff; 0x03240322; 0x02730326; 0x300000ff;
	0x03260324; 0x05650349; 0x300000ff; 0x03490326;
	0x0272034b; 0x300000ff; 0x034b0349; 0x00eb0347;
	0x300000ff; 0x0347034b; 0x054b034d; 0x300000ff;
	0x034d0347; 0x054e0350; 0x300000ff; 0x0350034d;
	0x0549034f; 0x300000ff; 0x034f0350; 0x00df0351;
	0x300000ff; 0x0351034f; 0x025b0353; 0x300000ff;
	0x03530351; 0x054c035d; 0x300000ff; 0x035d0353;
	0x025a035f; 0x300000ff; 0x035f035d; 0x00de035b;
	0x300000ff; 0x035b035f; 0x05410361; 0x300000ff;
	0x0361035b; 0x05450364; 0x300000ff; 0x03640361;
	0x053f0363; 0x300000ff; 0x03630364; 0x00db0365;
	0x300000ff; 0x03650363; 0x02560367; 0x300000ff;
	0x03670365; 0x0542036d; 0x300000ff; 0x036d0367;
	0x02550370; 0x300000ff; 0x0370036d; 0x00da036f;
	0x300000ff; 0x036f0370; 0x053e0233; 0x300000ff;
	0x0233036f; 0x0543022c; 0x300000ff; 0x022c0233;
	0x0540022a; 0x300000ff; 0x022a022c; 0x00dc02c9;
	0x300000ff; 0x02c9022a; 0x025802c6; 0x300000ff;
	0x02c602c9; 0x054702c8; 0x300000ff; 0x02c802c6;
	0x02590352; 0x300000ff; 0x035202c8; 0x00dd034e;
	0x300000ff; 0x034e0352; 0x0549034f; 0x300000ff;
	0x034f034e; 0x054b034d; 0x00000044; 0x300000ff;
	0x0342023c; 0x00410232; 0x034102c1; 0x300000ff;
	0x02c10232; 0x033e02f4; 0x300000ff; 0x02f402c1;
	0x05840302; 0x300000ff; 0x030202f4; 0x00fa02f6;
	0x300000ff; 0x02f60302; 0x058202ff; 0x300000ff;
	0x02ff02f6; 0x029102fb; 0x300000ff; 0x02fb02ff;
	0x029202fe; 0x300000ff; 0x02fe02fb; 0x002402fd;
	0x300000ff; 0x02fd02fe; 0x02930305; 0x300000ff;
	0x030502fd; 0x028d0304; 0x300000ff; 0x03040305;
	0x05710306; 0x300000ff; 0x03060304; 0x00f20307;
	0x300000ff; 0x03070306; 0x05700309; 0x300000ff;
	0x03090307; 0x0282030b; 0x300000ff; 0x030b0309;
	0x028402de; 0x300000ff; 0x02de030b; 0x002202d0;
	0x300000ff; 0x02d002de; 0x028302d2; 0x300000ff;
	0x02d202d0; 0x028102d1; 0x300000ff; 0x02d102d2;
	0x056e02d3; 0x300000ff; 0x02d302d1; 0x00f102d4;
	0x300000ff; 0x02d402d3; 0x056f02d6; 0x300000ff;
	0x02d602d4; 0x028902d9; 0x300000ff; 0x02d902d6;
	0x028b02da; 0x300000ff; 0x02da02d9; 0x002302db;
	0x300000ff; 0x02db02da; 0x028a02ea; 0x300000ff;
	0x02ea02db; 0x02860534; 0x300000ff; 0x053402ea;
	0x04840533; 0x300000ff; 0x05330534; 0x00860531;
	0x300000ff; 0x05310533; 0x04830530; 0x300000ff;
	0x05300531; 0x01d9052f; 0x300000ff; 0x052f0530;
	0x01da0514; 0x300000ff; 0x0514052f; 0x00050515;
	0x300000ff; 0x05150514; 0x01db0513; 0x300000ff;
	0x05130515; 0x01d80516; 0x300000ff; 0x05160513;
	0x04810517; 0x300000ff; 0x05170516; 0x00850518;
	0x300000ff; 0x05180517; 0x04820519; 0x300000ff;
	0x05190518; 0x01dd051b; 0x300000ff; 0x051b0519;
	0x01e204f2; 0x300000ff; 0x04f2051b; 0x000604f3;
	0x300000ff; 0x04f304f2; 0x01e304f1; 0x300000ff;
	0x04f104f3; 0x01e004f4; 0x300000ff; 0x04f404f1;
	0x049004f5; 0x300000ff; 0x04f504f4; 0x008b04f6;
	0x300000ff; 0x04f604f5; 0x049204f7; 0x300000ff;
	0x04f704f6; 0x020804f9; 0x300000ff; 0x04f904f7;
	0x020b0457; 0x300000ff; 0x045704f9; 0x000c0458;
	0x300000ff; 0x04580457; 0x020c0456; 0x300000ff;
	0x04560458; 0x020a0459; 0x300000ff; 0x04590456;
	0x04da045a; 0x300000ff; 0x045a0459; 0x00aa045b;
	0x300000ff; 0x045b045a; 0x04dc045c; 0x300000ff;
	0x045c045b; 0x025c045e; 0x300000ff; 0x045e045c;
	0x0260031d; 0x300000ff; 0x031d045e; 0x001c031e;
	0x300000ff; 0x031e031d; 0x0261031c; 0x300000ff;
	0x031c031e; 0x025f031f; 0x300000ff; 0x031f031c;
	0x05520320; 0x300000ff; 0x0320031f; 0x00e10321;
	0x300000ff; 0x03210320; 0x05540322; 0x300000ff;
	0x03220321; 0x026f0325; 0x300000ff; 0x03250322;
	0x02730326; 0x300000ff; 0x03260325; 0x001f0327;
	0x300000ff; 0x03270326; 0x0272034b; 0x300000ff;
	0x034b0327; 0x026e034c; 0x300000ff; 0x034c034b;
	0x054b034d; 0x300000ff; 0x034d034c; 0x00dd034e;
	0x0000000d; 0x300000ff; 0x06d606dd; 0x06d806de;
	0x00f402e0; 0x300000ff; 0x02e006de; 0x06cd06df;
	0x300000ff; 0x06df02e0; 0x0575030a; 0x300000ff;
	0x030a06df; 0x034c030c; 0x300000ff; 0x030c030a;
	0x00fc0308; 0x300000ff; 0x0308030c; 0x0588030e;
	0x300000ff; 0x030e0308; 0x0585030d; 0x300000ff;
	0x030d030e; 0x0587030f; 0x300000ff; 0x030f030d;
	0x00fb0300; 0x300000ff; 0x0300030f; 0x03450303;
	0x300000ff; 0x03030300; 0x05860301; 0x300000ff;
	0x03010303; 0x034602c3; 0x300000ff; 0x02c30301;
	0x013802c0; 0x00000045; 0x300000ff; 0x06cb06e0;
	0x06d906e1; 0x00fe02e6; 0x300000ff; 0x02e606e1;
	0x057802e8; 0x300000ff; 0x02e802e6; 0x029802eb;
	0x300000ff; 0x02eb02e8; 0x029502ec; 0x300000ff;
	0x02ec02eb; 0x002502ed; 0x300000ff; 0x02ed02ec;
	0x02940512; 0x300000ff; 0x051202ed; 0x02970511;
	0x300000ff; 0x05110512; 0x0487050e; 0x300000ff;
	0x050e0511; 0x00fd050c; 0x300000ff; 0x050c050e;
	0x0489050b; 0x300000ff; 0x050b050c; 0x029d0509;
	0x300000ff; 0x0509050b; 0x029a050a; 0x300000ff;
	0x050a0509; 0x002604f0; 0x300000ff; 0x04f0050a;
	0x029b04ef; 0x300000ff; 0x04ef04f0; 0x02a004ee;
	0x300000ff; 0x04ee04ef; 0x049604eb; 0x300000ff;
	0x04eb04ee; 0x010204e9; 0x300000ff; 0x04e904eb;
	0x049804e8; 0x300000ff; 0x04e804e9; 0x02c404e6;
	0x300000ff; 0x04e604e8; 0x02c204e7; 0x300000ff;
	0x04e704e6; 0x002c0455; 0x300000ff; 0x045504e7;
	0x02c30454; 0x300000ff; 0x04540455; 0x02c60453;
	0x300000ff; 0x04530454; 0x04de0450; 0x300000ff;
	0x04500453; 0x0113044e; 0x300000ff; 0x044e0450;
	0x04e0044d; 0x300000ff; 0x044d044e; 0x031e044b;
	0x300000ff; 0x044b044d; 0x031c044c; 0x300000ff;
	0x044c044b; 0x003c031b; 0x300000ff; 0x031b044c;
	0x031d031a; 0x300000ff; 0x031a031b; 0x03210319;
	0x300000ff; 0x0319031a; 0x05560316; 0x300000ff;
	0x03160319; 0x012d0314; 0x300000ff; 0x03140316;
	0x05580313; 0x300000ff; 0x03130314; 0x03310311;
	0x300000ff; 0x03110313; 0x032e0312; 0x300000ff;
	0x03120311; 0x003f0310; 0x300000ff; 0x03100312;
	0x032f0328; 0x300000ff; 0x03280310; 0x0330034a;
	0x300000ff; 0x034a0328; 0x05670348; 0x300000ff;
	0x0348034a; 0x012b0346; 0x300000ff; 0x03460348;
	0x05660345; 0x300000ff; 0x03450346; 0x031b0343;
	0x300000ff; 0x03430345; 0x03180344; 0x300000ff;
	0x03440343; 0x003b0342; 0x300000ff; 0x03420344;
	0x03170355; 0x300000ff; 0x03550342; 0x0319035e;
	0x300000ff; 0x035e0355; 0x054f035c; 0x300000ff;
	0x035c035e; 0x0128035a; 0x300000ff; 0x035a035c;
	0x054d0359; 0x300000ff; 0x0359035a; 0x03150357;
	0x300000ff; 0x03570359; 0x03130358; 0x300000ff;
	0x03580357; 0x003a0356; 0x300000ff; 0x03560358;
	0x03120369; 0x300000ff; 0x03690356; 0x0314036a;
	0x300000ff; 0x036a0369; 0x0546036b; 0x300000ff;
	0x036b036a; 0x00e9036c; 0x300000ff; 0x036c036b;
	0x0544036e; 0x300000ff; 0x036e036c; 0x026c0371;
	0x300000ff; 0x0371036e; 0x02680372; 0x300000ff;
	0x03720371; 0x001e0334; 0x300000ff; 0x03340372;
	0x026902e1; 0x300000ff; 0x02e10334; 0x026b0228;
	0x300000ff; 0x022802e1; 0x054802cd; 0x300000ff;
	0x02cd0228; 0x00e802dc; 0x300000ff; 0x02dc02cd;
	0x054a02ca; 0x300000ff; 0x02ca02dc; 0x027102dd;
	0x300000ff; 0x02dd02ca; 0x026e034c; 0x300000ff;
	0x034c02dd; 0x001f0327; 0x00000002; 0x30519e8f;
	0x06c206dc; 0x057702e7; 0x06d906e1; 0x30519e8f;
	0x06e102e7; 0x057802e8; 0x00000002; 0x30519e8f;
	0x057702e7; 0x00f502e9; 0x057802e8; 0x30519e8f;
	0x02e802e9; 0x029502ec; 0x00000006; 0x30519e8f;
	0x002502ed; 0x029902ee; 0x029802eb; 0x30519e8f;
	0x02eb02ee; 0x058902ef; 0x30519e8f; 0x02ef02eb;
	0x00fe02e6; 0x30519e8f; 0x02e602ef; 0x058a02f2;
	0x30519e8f; 0x02f202e6; 0x06cb06e0; 0x30519e8f;
	0x06e002f2; 0x06cc06c0; 0x00000005; 0x30519e8f;
	0x029902ee; 0x00ff02f0; 0x058902ef; 0x30519e8f;
	0x02ef02f0; 0x058b02f1; 0x30519e8f; 0x02f102ef;
	0x058a02f2; 0x30519e8f; 0x02f202f1; 0x0131022b;
	0x30519e8f; 0x022b02f2; 0x06cc06c0; 0x00000003;
	0x30519e8f; 0x00ff02f0; 0x033f02f3; 0x058b02f1;
	0x30519e8f; 0x02f102f3; 0x03400230; 0x30519e8f;
	0x023002f1; 0x0131022b; 0x0000006d; 0x300000ff;
	0x00410232; 0x033f02f3; 0x033e02f4; 0x300000ff;
	0x02f402f3; 0x058302f5; 0x300000ff; 0x02f502f4;
	0x00fa02f6; 0x300000ff; 0x02f602f5; 0x057b02f8;
	0x300000ff; 0x02f802f6; 0x029102fb; 0x300000ff;
	0x02fb02f8; 0x028e02fc; 0x300000ff; 0x02fc02fb;
	0x002402fd; 0x300000ff; 0x02fd02fc; 0x028f05bc;
	0x300000ff; 0x05bc02fd; 0x0290052d; 0x300000ff;
	0x052d05bc; 0x057e05c6; 0x300000ff; 0x05c6052d;
	0x00f90528; 0x300000ff; 0x052805c6; 0x058105c5;
	0x300000ff; 0x05c50528; 0x02a40526; 0x300000ff;
	0x052605c5; 0x02a505c7; 0x300000ff; 0x05c70526;
	0x002704d6; 0x300000ff; 0x04d605c7; 0x02a805f5;
	0x300000ff; 0x05f504d6; 0x02a90603; 0x300000ff;
	0x060305f5; 0x059a05ff; 0x300000ff; 0x05ff0603;
	0x01070600; 0x300000ff; 0x060005ff; 0x059d05fe;
	0x300000ff; 0x05fe0600; 0x02be0602; 0x300000ff;
	0x060205fe; 0x02c00601; 0x300000ff; 0x06010602;
	0x002b0486; 0x300000ff; 0x04860601; 0x02c10484;
	0x300000ff; 0x04840486; 0x02bd0485; 0x300000ff;
	0x04850484; 0x04d50481; 0x300000ff; 0x04810485;
	0x00a70482; 0x300000ff; 0x04820481; 0x04d40480;
	0x300000ff; 0x04800482; 0x02060483; 0x300000ff;
	0x04830480; 0x0207047a; 0x300000ff; 0x047a0483;
	0x000b047c; 0x300000ff; 0x047c047a; 0x0205047b;
	0x300000ff; 0x047b047c; 0x020405f3; 0x300000ff;
	0x05f3047b; 0x04c1063f; 0x300000ff; 0x063f05f3;
	0x009f05f1; 0x300000ff; 0x05f1063f; 0x04c0063e;
	0x300000ff; 0x063e05f1; 0x01fb05f4; 0x300000ff;
	0x05f4063e; 0x01fe063c; 0x300000ff; 0x063c05f4;
	0x000a0494; 0x300000ff; 0x0494063c; 0x01fd0495;
	0x300000ff; 0x04950494; 0x02010492; 0x300000ff;
	0x04920495; 0x04c50496; 0x300000ff; 0x04960492;
	0x00a5048b; 0x300000ff; 0x048b0496; 0x04d00499;
	0x300000ff; 0x0499048b; 0x02fa0488; 0x300000ff;
	0x04880499; 0x02fb0383; 0x300000ff; 0x03830488;
	0x00360384; 0x300000ff; 0x03840383; 0x02fe0382;
	0x300000ff; 0x03820384; 0x02fd064b; 0x300000ff;
	0x064b0382; 0x05c202c5; 0x300000ff; 0x02c5064b;
	0x01230648; 0x300000ff; 0x064802c5; 0x05c302bb;
	0x300000ff; 0x02bb0648; 0x03030646; 0x300000ff;
	0x064602bb; 0x030502b5; 0x300000ff; 0x02b50646;
	0x003703aa; 0x300000ff; 0x03aa02b5; 0x030403a8;
	0x300000ff; 0x03a803aa; 0x030003a9; 0x300000ff;
	0x03a903a8; 0x053503a5; 0x300000ff; 0x03a503a9;
	0x00d203a6; 0x300000ff; 0x03a603a5; 0x053403a4;
	0x300000ff; 0x03a403a6; 0x024603a7; 0x300000ff;
	0x03a703a4; 0x0247039e; 0x300000ff; 0x039e03a7;
	0x001703a0; 0x300000ff; 0x03a0039e; 0x0244039f;
	0x300000ff; 0x039f03a0; 0x0245026e; 0x300000ff;
	0x026e039f; 0x052f027f; 0x300000ff; 0x027f026e;
	0x00d1025c; 0x300000ff; 0x025c027f; 0x0533027d;
	0x300000ff; 0x027d025c; 0x0250024d; 0x300000ff;
	0x024d027d; 0x025101b9; 0x300000ff; 0x01b9024d;
	0x00190390; 0x300000ff; 0x039001b9; 0x024d01b6;
	0x300000ff; 0x01b60390; 0x024e03b5; 0x300000ff;
	0x03b501b6; 0x051c01af; 0x300000ff; 0x01af03b5;
	0x00c903b7; 0x300000ff; 0x03b701af; 0x051601ac;
	0x300000ff; 0x01ac03b7; 0x023903bb; 0x300000ff;
	0x03bb01ac; 0x023803c9; 0x300000ff; 0x03c903bb;
	0x001503bd; 0x300000ff; 0x03bd03c9; 0x023a03c8;
	0x300000ff; 0x03c803bd; 0x023b03bc; 0x300000ff;
	0x03bc03c8; 0x052203c6; 0x300000ff; 0x03c603bc;
	0x00cb03ba; 0x300000ff; 0x03ba03c6; 0x052503c5;
	0x300000ff; 0x03c503ba; 0x02f603be; 0x300000ff;
	0x03be03c5; 0x02f803c7; 0x300000ff; 0x03c703be;
	0x003503ab; 0x300000ff; 0x03ab03c7; 0x02f903ac;
	0x300000ff; 0x03ac03ab; 0x02f703ad; 0x300000ff;
	0x03ad03ac; 0x053c03ae; 0x300000ff; 0x03ae03ad;
	0x00d703b0; 0x300000ff; 0x03b003ae; 0x053b03b2;
	0x300000ff; 0x03b203b0; 0x025203b4; 0x300000ff;
	0x03b403b2; 0x0253038f; 0x300000ff; 0x038f03b4;
	0x00190390; 0x300000ff; 0x0390038f; 0x024f038e;
	0x300000ff; 0x038e0390; 0x0250024d; 0x300000ff;
	0x024d038e; 0x0529025b; 0x300000ff; 0x025b024d;
	0x00d1025c; 0x300000ff; 0x025c025b; 0x0527026c;
	0x300000ff; 0x026c025c; 0x0245026e; 0x300000ff;
	0x026e026c; 0x02430634; 0x300000ff; 0x0634026e;
	0x001703a0; 0x300000ff; 0x03a00634; 0x02410635;
	0x300000ff; 0x063503a0; 0x02420479; 0x300000ff;
	0x04790635; 0x04c8063d; 0x300000ff; 0x063d0479;
	0x00a60478; 0x300000ff; 0x0478063d; 0x04c1063f;
	0x300000ff; 0x063f0478; 0x0205047b; 0x00000020;
	0x300000ff; 0x033f02f3; 0x00ff02f0; 0x058302f5;
	0x300000ff; 0x02f502f0; 0x057d02f7; 0x300000ff;
	0x02f702f5; 0x057b02f8; 0x300000ff; 0x02f802f7;
	0x00f702f9; 0x300000ff; 0x02f902f8; 0x028e02fc;
	0x300000ff; 0x02fc02f9; 0x057a05bd; 0x300000ff;
	0x05bd02fc; 0x028f05bc; 0x300000ff; 0x05bc05bd;
	0x00f805be; 0x300000ff; 0x05be05bc; 0x057e05c6;
	0x300000ff; 0x05c605be; 0x058005c3; 0x300000ff;
	0x05c305c6; 0x058105c5; 0x300000ff; 0x05c505c3;
	0x010005c4; 0x300000ff; 0x05c405c5; 0x02a505c7;
	0x300000ff; 0x05c705c4; 0x058d05f6; 0x300000ff;
	0x05f605c7; 0x02a805f5; 0x300000ff; 0x05f505f6;
	0x010605f7; 0x300000ff; 0x05f705f5; 0x059a05ff;
	0x300000ff; 0x05ff05f7; 0x059b05fc; 0x300000ff;
	0x05fc05ff; 0x059d05fe; 0x300000ff; 0x05fe05fc;
	0x010d05fd; 0x300000ff; 0x05fd05fe; 0x02c00601;
	0x300000ff; 0x060105fd; 0x05a50643; 0x300000ff;
	0x06430601; 0x02c10484; 0x300000ff; 0x04840643;
	0x0111047f; 0x300000ff; 0x047f0484; 0x04d50481;
	0x300000ff; 0x0481047f; 0x04d7047e; 0x300000ff;
	0x047e0481; 0x04d40480; 0x300000ff; 0x0480047e;
	0x00a80475; 0x300000ff; 0x04750480; 0x0207047a;
	0x300000ff; 0x047a0475; 0x04d20477; 0x300000ff;
	0x0477047a; 0x0205047b; 0x300000ff; 0x047b0477;
	0x00a60478; 0x00000020; 0x300000ff; 0x00ff02f0;
	0x029902ee; 0x057d02f7; 0x300000ff; 0x02f702ee;
	0x029602fa; 0x300000ff; 0x02fa02f7; 0x00f702f9;
	0x300000ff; 0x02f902fa; 0x057c05bf; 0x300000ff;
	0x05bf02f9; 0x057a05bd; 0x300000ff; 0x05bd05bf;
	0x057f05c0; 0x300000ff; 0x05c005bd; 0x00f805be;
	0x300000ff; 0x05be05c0; 0x029c05c1; 0x300000ff;
	0x05c105be; 0x058005c3; 0x300000ff; 0x05c305c1;
	0x029e05c2; 0x300000ff; 0x05c205c3; 0x010005c4;
	0x300000ff; 0x05c405c2; 0x058c05f8; 0x300000ff;
	0x05f805c4; 0x058d05f6; 0x300000ff; 0x05f605f8;
	0x058f05f9; 0x300000ff; 0x05f905f6; 0x010605f7;
	0x300000ff; 0x05f705f9; 0x02b705fa; 0x300000ff;
	0x05fa05f7; 0x059b05fc; 0x300000ff; 0x05fc05fa;
	0x02b805fb; 0x300000ff; 0x05fb05fc; 0x010d05fd;
	0x300000ff; 0x05fd05fb; 0x05a40644; 0x300000ff;
	0x064405fd; 0x05a50643; 0x300000ff; 0x06430644;
	0x05a80641; 0x300000ff; 0x06410643; 0x0111047f;
	0x300000ff; 0x047f0641; 0x0302047d; 0x300000ff;
	0x047d047f; 0x04d7047e; 0x300000ff; 0x047e047d;
	0x02ff0473; 0x300000ff; 0x0473047e; 0x00a80475;
	0x300000ff; 0x04750473; 0x04d60474; 0x300000ff;
	0x04740475; 0x04d20477; 0x300000ff; 0x04770474;
	0x04d30476; 0x300000ff; 0x04760477; 0x00a60478;
	0x300000ff; 0x04780476; 0x02420479; 0x00000020;
	0x300000ff; 0x029902ee; 0x002502ed; 0x029602fa;
	0x300000ff; 0x02fa02ed; 0x02970511; 0x300000ff;
	0x051102fa; 0x057c05bf; 0x300000ff; 0x05bf0511;
	0x00fd050c; 0x300000ff; 0x050c05bf; 0x057f05c0;
	0x300000ff; 0x05c0050c; 0x029d0509; 0x300000ff;
	0x050905c0; 0x029c05c1; 0x300000ff; 0x05c10509;
	0x002604f0; 0x300000ff; 0x04f005c1; 0x029e05c2;
	0x300000ff; 0x05c204f0; 0x029f05e0; 0x300000ff;
	0x05e005c2; 0x058c05f8; 0x300000ff; 0x05f805e0;
	0x010105e2; 0x300000ff; 0x05e205f8; 0x058f05f9;
	0x300000ff; 0x05f905e2; 0x02b605e5; 0x300000ff;
	0x05e505f9; 0x02b705fa; 0x300000ff; 0x05fa05e5;
	0x002a0491; 0x300000ff; 0x049105fa; 0x02b805fb;
	0x300000ff; 0x05fb0491; 0x02bb0645; 0x300000ff;
	0x064505fb; 0x05a40644; 0x300000ff; 0x06440645;
	0x01100642; 0x300000ff; 0x06420644; 0x05a80641;
	0x300000ff; 0x06410642; 0x03010640; 0x300000ff;
	0x06400641; 0x0302047d; 0x300000ff; 0x047d0640;
	0x003703aa; 0x300000ff; 0x03aa047d; 0x02ff0473;
	0x300000ff; 0x047303aa; 0x030003a9; 0x300000ff;
	0x03a90473; 0x04d60474; 0x300000ff; 0x047403a9;
	0x00d203a6; 0x300000ff; 0x03a60474; 0x04d30476;
	0x300000ff; 0x047603a6; 0x024603a7; 0x300000ff;
	0x03a70476; 0x02420479; 0x300000ff; 0x047903a7;
	0x001703a0; 0x00000005; 0x30519e8f; 0x0588030e;
	0x013c0278; 0x0587030f; 0x30519e8f; 0x030f0278;
	0x03470279; 0x30519e8f; 0x0279030f; 0x03450303;
	0x30519e8f; 0x03030279; 0x00420265; 0x30519e8f;
	0x02650303; 0x034602c3; 0x00000002; 0x30519e8f;
	0x034c030c; 0x034e027b; 0x0588030e; 0x30519e8f;
	0x030e027b; 0x013c0278; 0x00000002; 0x30519e8f;
	0x032e0312; 0x05580313; 0x00e30315; 0x30519e8f;
	0x03150313; 0x05550317; 0x00000002; 0x30519e8f;
	0x05560316; 0x031d031a; 0x00e20318; 0x30519e8f;
	0x0318031a; 0x04df045d; 0x00000002; 0x30519e8f;
	0x00e30315; 0x05570323; 0x032e0312; 0x30519e8f;
	0x03120323; 0x032f0328; 0x00000002; 0x30519e8f;
	0x05570323; 0x00ec0324; 0x032f0328; 0x30519e8f;
	0x03280324; 0x05670348; 0x0000000f; 0x300000ff;
	0x003e0329; 0x0329032a; 0x0328032b; 0x300000ff;
	0x032b032a; 0x0560032c; 0x300000ff; 0x032c032b;
	0x00e7032e; 0x300000ff; 0x032e032c; 0x055a0330;
	0x300000ff; 0x0330032e; 0x02670335; 0x300000ff;
	0x03350330; 0x02640336; 0x300000ff; 0x03360335;
	0x001d0337; 0x300000ff; 0x03370336; 0x02650286;
	0x300000ff; 0x02860337; 0x02630657; 0x300000ff;
	0x06570286; 0x05510282; 0x300000ff; 0x02820657;
	0x00e00654; 0x300000ff; 0x06540282; 0x05500280;
	0x300000ff; 0x02800654; 0x025e0652; 0x300000ff;
	0x06520280; 0x025f031f; 0x300000ff; 0x031f0652;
	0x001c031e; 0x0000000d; 0x300000ff; 0x0329032a;
	0x00ea032d; 0x0560032c; 0x300000ff; 0x032c032d;
	0x055c032f; 0x300000ff; 0x032f032c; 0x055a0330;
	0x300000ff; 0x0330032f; 0x00e40331; 0x300000ff;
	0x03310330; 0x02640336; 0x300000ff; 0x03360331;
	0x055902bd; 0x300000ff; 0x02bd0336; 0x02650286;
	0x300000ff; 0x028602bd; 0x00e5027e; 0x300000ff;
	0x027e0286; 0x05510282; 0x300000ff; 0x0282027e;
	0x0553027c; 0x300000ff; 0x027c0282; 0x05500280;
	0x300000ff; 0x0280027c; 0x00e10321; 0x300000ff;
	0x03210280; 0x025f031f; 0x0000000b; 0x300000ff;
	0x00ea032d; 0x026d0332; 0x055c032f; 0x300000ff;
	0x032f0332; 0x026a0333; 0x300000ff; 0x0333032f;
	0x00e40331; 0x300000ff; 0x03310333; 0x055b02c4;
	0x300000ff; 0x02c40331; 0x055902bd; 0x300000ff;
	0x02bd02c4; 0x055d02bc; 0x300000ff; 0x02bc02bd;
	0x00e5027e; 0x300000ff; 0x027e02bc; 0x0270027a;
	0x300000ff; 0x027a027e; 0x0553027c; 0x300000ff;
	0x027c027a; 0x026f0325; 0x300000ff; 0x0325027c;
	0x00e10321; 0x00000009; 0x30519e8f; 0x026d0332;
	0x001e0334; 0x026a0333; 0x30519e8f; 0x03330334;
	0x026b0228; 0x30519e8f; 0x02280333; 0x055b02c4;
	0x30519e8f; 0x02c40228; 0x00e802dc; 0x30519e8f;
	0x02dc02c4; 0x055d02bc; 0x30519e8f; 0x02bc02dc;
	0x027102dd; 0x30519e8f; 0x02dd02bc; 0x0270027a;
	0x30519e8f; 0x027a02dd; 0x001f0327; 0x30519e8f;
	0x0327027a; 0x026f0325; 0x0000001f; 0x300000ff;
	0x003e0329; 0x0328032b; 0x032c0338; 0x300000ff;
	0x0338032b; 0x05610339; 0x300000ff; 0x03390338;
	0x012e033a; 0x300000ff; 0x033a0339; 0x055f033c;
	0x300000ff; 0x033c033a; 0x0326033f; 0x300000ff;
	0x033f033c; 0x03230340; 0x300000ff; 0x0340033f;
	0x003d0341; 0x300000ff; 0x03410340; 0x0322045f;
	0x300000ff; 0x045f0341; 0x03240469; 0x300000ff;
	0x0469045f; 0x04e9046a; 0x300000ff; 0x046a0469;
	0x0115046b; 0x300000ff; 0x046b046a; 0x04e7046d;
	0x300000ff; 0x046d046b; 0x02cd0470; 0x300000ff;
	0x0470046d; 0x02c80471; 0x300000ff; 0x04710470;
	0x002d0472; 0x300000ff; 0x04720471; 0x02c704fa;
	0x300000ff; 0x04fa0472; 0x02ca0503; 0x300000ff;
	0x050304fa; 0x04cf0504; 0x300000ff; 0x05040503;
	0x010e0505; 0x300000ff; 0x05050504; 0x04cc0507;
	0x300000ff; 0x05070505; 0x02b90508; 0x300000ff;
	0x05080507; 0x02b50490; 0x300000ff; 0x04900508;
	0x002a0491; 0x300000ff; 0x04910490; 0x02ba048f;
	0x300000ff; 0x048f0491; 0x02bb0645; 0x300000ff;
	0x0645048f; 0x05a60649; 0x300000ff; 0x06490645;
	0x01100642; 0x300000ff; 0x06420649; 0x05a90647;
	0x300000ff; 0x06470642; 0x03010640; 0x300000ff;
	0x06400647; 0x03030646; 0x300000ff; 0x06460640;
	0x003703aa; 0x0000001d; 0x300000ff; 0x0328032b;
	0x00e7032e; 0x05610339; 0x300000ff; 0x0339032e;
	0x055e033b; 0x300000ff; 0x033b0339; 0x055f033c;
	0x300000ff; 0x033c033b; 0x00e6033d; 0x300000ff;
	0x033d033c; 0x03230340; 0x300000ff; 0x0340033d;
	0x04e80460; 0x300000ff; 0x04600340; 0x0322045f;
	0x300000ff; 0x045f0460; 0x00b00461; 0x300000ff;
	0x0461045f; 0x04e9046a; 0x300000ff; 0x046a0461;
	0x04e6046c; 0x300000ff; 0x046c046a; 0x04e7046d;
	0x300000ff; 0x046d046c; 0x00af046e; 0x300000ff;
	0x046e046d; 0x02c80471; 0x300000ff; 0x0471046e;
	0x04ce04fb; 0x300000ff; 0x04fb0471; 0x02c704fa;
	0x300000ff; 0x04fa04fb; 0x00a404fc; 0x300000ff;
	0x04fc04fa; 0x04cf0504; 0x300000ff; 0x050404fc;
	0x04ca0506; 0x300000ff; 0x05060504; 0x04cc0507;
	0x300000ff; 0x05070506; 0x00a3048e; 0x300000ff;
	0x048e0507; 0x02b50490; 0x300000ff; 0x0490048e;
	0x04cd048c; 0x300000ff; 0x048c0490; 0x02ba048f;
	0x300000ff; 0x048f048c; 0x010f048a; 0x300000ff;
	0x048a048f; 0x05a60649; 0x300000ff; 0x0649048a;
	0x05a7064a; 0x300000ff; 0x064a0649; 0x05a90647;
	0x300000ff; 0x0647064a; 0x01230648; 0x300000ff;
	0x06480647; 0x03030646; 0x0000001b; 0x300000ff;
	0x00e7032e; 0x02670335; 0x055e033b; 0x300000ff;
	0x033b0335; 0x0266033e; 0x300000ff; 0x033e033b;
	0x00e6033d; 0x300000ff; 0x033d033e; 0x04e50462;
	0x300000ff; 0x0462033d; 0x04e80460; 0x300000ff;
	0x04600462; 0x04e30463; 0x300000ff; 0x04630460;
	0x00b00461; 0x300000ff; 0x04610463; 0x02130466;
	0x300000ff; 0x04660461; 0x04e6046c; 0x300000ff;
	0x046c0466; 0x0212046f; 0x300000ff; 0x046f046c;
	0x00af046e; 0x300000ff; 0x046e046f; 0x04c304fd;
	0x300000ff; 0x04fd046e; 0x04ce04fb; 0x300000ff;
	0x04fb04fd; 0x04c204fe; 0x300000ff; 0x04fe04fb;
	0x00a404fc; 0x300000ff; 0x04fc04fe; 0x02000501;
	0x300000ff; 0x050104fc; 0x04ca0506; 0x300000ff;
	0x05060501; 0x01ff0493; 0x300000ff; 0x04930506;
	0x00a3048e; 0x300000ff; 0x048e0493; 0x04cb048d;
	0x300000ff; 0x048d048e; 0x04cd048c; 0x300000ff;
	0x048c048d; 0x04d10489; 0x300000ff; 0x0489048c;
	0x010f048a; 0x300000ff; 0x048a0489; 0x02fc0487;
	0x300000ff; 0x0487048a; 0x05a7064a; 0x300000ff;
	0x064a0487; 0x02fd064b; 0x300000ff; 0x064b064a;
	0x01230648; 0x00000019; 0x300000ff; 0x02670335;
	0x001d0337; 0x0266033e; 0x300000ff; 0x033e0337;
	0x02620465; 0x300000ff; 0x0465033e; 0x04e50462;
	0x300000ff; 0x04620465; 0x00ae0464; 0x300000ff;
	0x04640462; 0x04e30463; 0x300000ff; 0x04630464;
	0x02110467; 0x300000ff; 0x04670463; 0x02130466;
	0x300000ff; 0x04660467; 0x000d0468; 0x300000ff;
	0x04680466; 0x0212046f; 0x300000ff; 0x046f0468;
	0x020e0500; 0x300000ff; 0x0500046f; 0x04c304fd;
	0x300000ff; 0x04fd0500; 0x00a004ff; 0x300000ff;
	0x04ff04fd; 0x04c204fe; 0x300000ff; 0x04fe04ff;
	0x01fc0502; 0x300000ff; 0x050204fe; 0x02000501;
	0x300000ff; 0x05010502; 0x000a0494; 0x300000ff;
	0x04940501; 0x01ff0493; 0x300000ff; 0x04930494;
	0x02010492; 0x300000ff; 0x04920493; 0x04cb048d;
	0x300000ff; 0x048d0492; 0x00a5048b; 0x300000ff;
	0x048b048d; 0x04d10489; 0x300000ff; 0x0489048b;
	0x02fa0488; 0x300000ff; 0x04880489; 0x02fc0487;
	0x300000ff; 0x04870488; 0x00360384; 0x300000ff;
	0x03840487; 0x02fd064b; 0x00000002; 0x30519e8f;
	0x03180344; 0x05660345; 0x00eb0347; 0x30519e8f;
	0x03470345; 0x05650349; 0x00000002; 0x30519e8f;
	0x02590352; 0x001b0354; 0x025b0353; 0x30519e8f;
	0x03530354; 0x025a035f; 0x00000002; 0x30519e8f;
	0x00eb0347; 0x054e0350; 0x03180344; 0x30519e8f;
	0x03440350; 0x03170355; 0x00000002; 0x30519e8f;
	0x054e0350; 0x00df0351; 0x03170355; 0x30519e8f;
	0x03550351; 0x054f035c; 0x00000002; 0x30519e8f;
	0x03130358; 0x054d0359; 0x00de035b; 0x30519e8f;
	0x035b0359; 0x054c035d; 0x00000002; 0x30519e8f;
	0x001b0354; 0x02570360; 0x025a035f; 0x30519e8f;
	0x035f0360; 0x05410361; 0x00000002; 0x30519e8f;
	0x02570360; 0x00d90362; 0x05410361; 0x30519e8f;
	0x03610362; 0x053f0363; 0x00000002; 0x30519e8f;
	0x00d90362; 0x02540366; 0x053f0363; 0x30519e8f;
	0x03630366; 0x02560367; 0x00000002; 0x30519e8f;
	0x02540366; 0x001a0368; 0x02560367; 0x30519e8f;
	0x03670368; 0x02550370; 0x00000002; 0x30519e8f;
	0x00de035b; 0x05450364; 0x03130358; 0x30519e8f;
	0x03580364; 0x03120369; 0x00000002; 0x30519e8f;
	0x05450364; 0x00db0365; 0x03120369; 0x30519e8f;
	0x03690365; 0x0546036b; 0x00000002; 0x30519e8f;
	0x00db0365; 0x0542036d; 0x0546036b; 0x30519e8f;
	0x036b036d; 0x0544036e; 0x00000002; 0x30519e8f;
	0x0542036d; 0x00da036f; 0x0544036e; 0x30519e8f;
	0x036e036f; 0x02680372; 0x00000007; 0x30519e8f;
	0x003a0356; 0x0314036a; 0x03160373; 0x30519e8f;
	0x0373036a; 0x05630374; 0x30519e8f; 0x03740373;
	0x01290375; 0x30519e8f; 0x03750374; 0x05640377;
	0x30519e8f; 0x03770375; 0x032a0378; 0x30519e8f;
	0x03780377; 0x0329032a; 0x30519e8f; 0x032a0378;
	0x003e0329; 0x00000005; 0x30519e8f; 0x0314036a;
	0x00e9036c; 0x05630374; 0x30519e8f; 0x0374036c;
	0x05620376; 0x30519e8f; 0x03760374; 0x05640377;
	0x30519e8f; 0x03770376; 0x00ea032d; 0x30519e8f;
	0x032d0377; 0x0329032a; 0x00000003; 0x30519e8f;
	0x00e9036c; 0x026c0371; 0x05620376; 0x30519e8f;
	0x03760371; 0x026d0332; 0x30519e8f; 0x03320376;
	0x00ea032d; 0x0000000e; 0x300000ff; 0x00390379;
	0x030f037a; 0x030b037b; 0x300000ff; 0x037b037a;
	0x052e037c; 0x300000ff; 0x037c037b; 0x00cf037e;
	0x300000ff; 0x037e037c; 0x052b0380; 0x300000ff;
	0x0380037e; 0x02400385; 0x300000ff; 0x03850380;
	0x023f0386; 0x300000ff; 0x03860385; 0x00160387;
	0x300000ff; 0x03870386; 0x023c049a; 0x300000ff;
	0x049a0387; 0x023d063b; 0x300000ff; 0x063b049a;
	0x04c60639; 0x300000ff; 0x0639063b; 0x00cc0637;
	0x300000ff; 0x06370639; 0x04c90636; 0x300000ff;
	0x06360637; 0x02430634; 0x300000ff; 0x06340636;
	0x02410635; 0x0000000e; 0x300000ff; 0x030f037a;
	0x0124037d; 0x052e037c; 0x300000ff; 0x037c037d;
	0x052c037f; 0x300000ff; 0x037f037c; 0x052b0380;
	0x300000ff; 0x0380037f; 0x00ce0381; 0x300000ff;
	0x03810380; 0x023f0386; 0x300000ff; 0x03860381;
	0x04c70498; 0x300000ff; 0x04980386; 0x023c049a;
	0x300000ff; 0x049a0498; 0x00a10497; 0x300000ff;
	0x0497049a; 0x04c60639; 0x300000ff; 0x06390497;
	0x04c4063a; 0x300000ff; 0x063a0639; 0x04c90636;
	0x300000ff; 0x0636063a; 0x00a20638; 0x300000ff;
	0x06380636; 0x02410635; 0x300000ff; 0x06350638;
	0x04c8063d; 0x0000000e; 0x300000ff; 0x0124037d;
	0x02fe0382; 0x052c037f; 0x300000ff; 0x037f0382;
	0x02fb0383; 0x300000ff; 0x0383037f; 0x00ce0381;
	0x300000ff; 0x03810383; 0x04d00499; 0x300000ff;
	0x04990381; 0x04c70498; 0x300000ff; 0x04980499;
	0x04c50496; 0x300000ff; 0x04960498; 0x00a10497;
	0x300000ff; 0x04970496; 0x01fd0495; 0x300000ff;
	0x04950497; 0x04c4063a; 0x300000ff; 0x063a0495;
	0x01fe063c; 0x300000ff; 0x063c063a; 0x00a20638;
	0x300000ff; 0x0638063c; 0x04c0063e; 0x300000ff;
	0x063e0638; 0x04c8063d; 0x300000ff; 0x063d063e;
	0x04c1063f; 0x00000030; 0x300000ff; 0x00160387;
	0x023e0388; 0x02400385; 0x300000ff; 0x03850388;
	0x05280389; 0x300000ff; 0x03890385; 0x00cf037e;
	0x300000ff; 0x037e0389; 0x052d038c; 0x300000ff;
	0x038c037e; 0x030b037b; 0x300000ff; 0x037b038c;
	0x030c0391; 0x300000ff; 0x0391037b; 0x00390379;
	0x300000ff; 0x03790391; 0x030e03b3; 0x300000ff;
	0x03b30379; 0x030d01df; 0x300000ff; 0x01df03b3;
	0x05c001eb; 0x300000ff; 0x01eb01df; 0x012101fc;
	0x300000ff; 0x01fc01eb; 0x05bc0229; 0x300000ff;
	0x022901fc; 0x02f50236; 0x300000ff; 0x02360229;
	0x02f303c0; 0x300000ff; 0x03c00236; 0x003403bf;
	0x300000ff; 0x03bf03c0; 0x02f103c1; 0x300000ff;
	0x03c103bf; 0x02f003d2; 0x300000ff; 0x03d203c1;
	0x051e03cd; 0x300000ff; 0x03cd03d2; 0x00c803ce;
	0x300000ff; 0x03ce03cd; 0x051503cc; 0x300000ff;
	0x03cc03ce; 0x023703d0; 0x300000ff; 0x03d003cc;
	0x023403cf; 0x300000ff; 0x03cf03d0; 0x001403d1;
	0x300000ff; 0x03d103cf; 0x0236015d; 0x300000ff;
	0x015d03d1; 0x023503d9; 0x300000ff; 0x03d9015d;
	0x051801dc; 0x300000ff; 0x01dc03d9; 0x00c603d8;
	0x300000ff; 0x03d801dc; 0x051a01db; 0x300000ff;
	0x01db03d8; 0x024803db; 0x300000ff; 0x03db01db;
	0x024a01dd; 0x300000ff; 0x01dd03db; 0x0018039d;
	0x300000ff; 0x039d01dd; 0x0249039c; 0x300000ff;
	0x039c039d; 0x024c039b; 0x300000ff; 0x039b039c;
	0x05320398; 0x300000ff; 0x0398039b; 0x00d60396;
	0x300000ff; 0x03960398; 0x05360395; 0x300000ff;
	0x03950396; 0x03070393; 0x300000ff; 0x03930395;
	0x03060394; 0x300000ff; 0x03940393; 0x00380392;
	0x300000ff; 0x03920394; 0x030903a1; 0x300000ff;
	0x03a10392; 0x030a0244; 0x300000ff; 0x024403a1;
	0x05c602ab; 0x300000ff; 0x02ab0244; 0x01270242;
	0x300000ff; 0x024202ab; 0x05c70287; 0x300000ff;
	0x02870242; 0x03110246; 0x300000ff; 0x02460287;
	0x03100284; 0x300000ff; 0x02840246; 0x00390379;
	0x300000ff; 0x03790284; 0x030f037a; 0x00000030;
	0x300000ff; 0x023e0388; 0x00cd038a; 0x05280389;
	0x300000ff; 0x0389038a; 0x052a038b; 0x300000ff;
	0x038b0389; 0x052d038c; 0x300000ff; 0x038c038b;
	0x00d8038d; 0x300000ff; 0x038d038c; 0x030c0391;
	0x300000ff; 0x0391038d; 0x053d03b1; 0x300000ff;
	0x03b10391; 0x030e03b3; 0x300000ff; 0x03b303b1;
	0x012203af; 0x300000ff; 0x03af03b3; 0x05c001eb;
	0x300000ff; 0x01eb03af; 0x05bd021d; 0x300000ff;
	0x021d01eb; 0x05bc0229; 0x300000ff; 0x0229021d;
	0x011f03c3; 0x300000ff; 0x03c30229; 0x02f303c0;
	0x300000ff; 0x03c003c3; 0x052303c2; 0x300000ff;
	0x03c203c0; 0x02f103c1; 0x300000ff; 0x03c103c2;
	0x00ca03c4; 0x300000ff; 0x03c403c1; 0x051e03cd;
	0x300000ff; 0x03cd03c4; 0x051703ca; 0x300000ff;
	0x03ca03cd; 0x051503cc; 0x300000ff; 0x03cc03ca;
	0x00c503cb; 0x300000ff; 0x03cb03cc; 0x023403cf;
	0x300000ff; 0x03cf03cb; 0x0514015f; 0x300000ff;
	0x015f03cf; 0x0236015d; 0x300000ff; 0x015d015f;
	0x00c70171; 0x300000ff; 0x0171015d; 0x051801dc;
	0x300000ff; 0x01dc0171; 0x051d01be; 0x300000ff;
	0x01be01dc; 0x051a01db; 0x300000ff; 0x01db01be;
	0x00d401bf; 0x300000ff; 0x01bf01db; 0x024a01dd;
	0x300000ff; 0x01dd01bf; 0x05310283; 0x300000ff;
	0x028301dd; 0x0249039c; 0x300000ff; 0x039c0283;
	0x00d0039a; 0x300000ff; 0x039a039c; 0x05320398;
	0x300000ff; 0x0398039a; 0x05300399; 0x300000ff;
	0x03990398; 0x05360395; 0x300000ff; 0x03950399;
	0x00d30397; 0x300000ff; 0x03970395; 0x03060394;
	0x300000ff; 0x03940397; 0x053703a2; 0x300000ff;
	0x03a20394; 0x030903a1; 0x300000ff; 0x03a103a2;
	0x012503a3; 0x300000ff; 0x03a303a1; 0x05c602ab;
	0x300000ff; 0x02ab03a3; 0x05c502ac; 0x300000ff;
	0x02ac02ab; 0x05c70287; 0x300000ff; 0x028702ac;
	0x01260288; 0x300000ff; 0x02880287; 0x03100284;
	0x300000ff; 0x02840288; 0x05c402b6; 0x300000ff;
	0x02b60284; 0x030f037a; 0x300000ff; 0x037a02b6;
	0x0124037d; 0x00000030; 0x300000ff; 0x00cd038a;
	0x024f038e; 0x052a038b; 0x300000ff; 0x038b038e;
	0x0253038f; 0x300000ff; 0x038f038b; 0x00d8038d;
	0x300000ff; 0x038d038f; 0x053b03b2; 0x300000ff;
	0x03b2038d; 0x053d03b1; 0x300000ff; 0x03b103b2;
	0x053c03ae; 0x300000ff; 0x03ae03b1; 0x012203af;
	0x300000ff; 0x03af03ae; 0x02f903ac; 0x300000ff;
	0x03ac03af; 0x05bd021d; 0x300000ff; 0x021d03ac;
	0x02f803c7; 0x300000ff; 0x03c7021d; 0x011f03c3;
	0x300000ff; 0x03c303c7; 0x052503c5; 0x300000ff;
	0x03c503c3; 0x052303c2; 0x300000ff; 0x03c203c5;
	0x052203c6; 0x300000ff; 0x03c603c2; 0x00ca03c4;
	0x300000ff; 0x03c403c6; 0x023a03c8; 0x300000ff;
	0x03c803c4; 0x051703ca; 0x300000ff; 0x03ca03c8;
	0x023803c9; 0x300000ff; 0x03c903ca; 0x00c503cb;
	0x300000ff; 0x03cb03c9; 0x051601ac; 0x300000ff;
	0x01ac03cb; 0x0514015f; 0x300000ff; 0x015f01ac;
	0x051c01af; 0x300000ff; 0x01af015f; 0x00c70171;
	0x300000ff; 0x017101af; 0x024d01b6; 0x300000ff;
	0x01b60171; 0x051d01be; 0x300000ff; 0x01be01b6;
	0x025101b9; 0x300000ff; 0x01b901be; 0x00d401bf;
	0x300000ff; 0x01bf01b9; 0x0533027d; 0x300000ff;
	0x027d01bf; 0x05310283; 0x300000ff; 0x0283027d;
	0x052f027f; 0x300000ff; 0x027f0283; 0x00d0039a;
	0x300000ff; 0x039a027f; 0x0244039f; 0x300000ff;
	0x039f039a; 0x05300399; 0x300000ff; 0x0399039f;
	0x0247039e; 0x300000ff; 0x039e0399; 0x00d30397;
	0x300000ff; 0x0397039e; 0x053403a4; 0x300000ff;
	0x03a40397; 0x053703a2; 0x300000ff; 0x03a203a4;
	0x053503a5; 0x300000ff; 0x03a503a2; 0x012503a3;
	0x300000ff; 0x03a303a5; 0x030403a8; 0x300000ff;
	0x03a803a3; 0x05c502ac; 0x300000ff; 0x02ac03a8;
	0x030502b5; 0x300000ff; 0x02b502ac; 0x01260288;
	0x300000ff; 0x028802b5; 0x05c302bb; 0x300000ff;
	0x02bb0288; 0x05c402b6; 0x300000ff; 0x02b602bb;
	0x05c202c5; 0x300000ff; 0x02c502b6; 0x0124037d;
	0x300000ff; 0x037d02c5; 0x02fe0382; 0x00000007;
	0x30519e8f; 0x00190390; 0x024e03b5; 0x025203b4;
	0x30519e8f; 0x03b403b5; 0x052103b6; 0x30519e8f;
	0x03b603b4; 0x00d703b0; 0x30519e8f; 0x03b003b6;
	0x052403b9; 0x30519e8f; 0x03b903b0; 0x02f703ad;
	0x30519e8f; 0x03ad03b9; 0x02f603be; 0x30519e8f;
	0x03be03ad; 0x003503ab; 0x00000005; 0x30519e8f;
	0x024e03b5; 0x00c903b7; 0x052103b6; 0x30519e8f;
	0x03b603b7; 0x052003b8; 0x30519e8f; 0x03b803b6;
	0x052403b9; 0x30519e8f; 0x03b903b8; 0x00cb03ba;
	0x30519e8f; 0x03ba03b9; 0x02f603be; 0x00000003;
	0x30519e8f; 0x00c903b7; 0x023903bb; 0x052003b8;
	0x30519e8f; 0x03b803bb; 0x023b03bc; 0x30519e8f;
	0x03bc03b8; 0x00cb03ba; 0x00000007; 0x30519e8f;
	0x003403bf; 0x02f003d2; 0x02f203d3; 0x30519e8f;
	0x03d303d2; 0x051f03d4; 0x30519e8f; 0x03d403d3;
	0x00d503d5; 0x30519e8f; 0x03d503d4; 0x051b03d7;
	0x30519e8f; 0x03d703d5; 0x024b03da; 0x30519e8f;
	0x03da03d7; 0x024803db; 0x30519e8f; 0x03db03da;
	0x0018039d; 0x00000005; 0x30519e8f; 0x02f003d2;
	0x00c803ce; 0x051f03d4; 0x30519e8f; 0x03d403ce;
	0x051903d6; 0x30519e8f; 0x03d603d4; 0x051b03d7;
	0x30519e8f; 0x03d703d6; 0x00c603d8; 0x30519e8f;
	0x03d803d7; 0x024803db; 0x00000003; 0x30519e8f;
	0x00c803ce; 0x023703d0; 0x051903d6; 0x30519e8f;
	0x03d603d0; 0x023503d9; 0x30519e8f; 0x03d903d6;
	0x00c603d8; 0x00000007; 0x30519e8f; 0x003403bf;
	0x02f203d3; 0x02f403dc; 0x30519e8f; 0x03dc03d3;
	0x053903dd; 0x30519e8f; 0x03dd03dc; 0x012003de;
	0x30519e8f; 0x03de03dd; 0x053a03e0; 0x30519e8f;
	0x03e003de; 0x030803e1; 0x30519e8f; 0x03e103e0;
	0x03070393; 0x30519e8f; 0x039303e1; 0x00380392;
	0x00000005; 0x30519e8f; 0x02f203d3; 0x00d503d5;
	0x053903dd; 0x30519e8f; 0x03dd03d5; 0x053803df;
	0x30519e8f; 0x03df03dd; 0x053a03e0; 0x30519e8f;
	0x03e003df; 0x00d60396; 0x30519e8f; 0x039603e0;
	0x03070393; 0x00000003; 0x30519e8f; 0x00d503d5;
	0x024b03da; 0x053803df; 0x30519e8f; 0x03df03da;
	0x024c039b; 0x30519e8f; 0x039b03df; 0x00d60396;
	0x00000030; 0x300000ff; 0x003303e2; 0x02eb03e3;
	0x02ea03e4; 0x300000ff; 0x03e403e3; 0x050f03e5;
	0x300000ff; 0x03e503e4; 0x00c203e7; 0x300000ff;
	0x03e703e5; 0x050b03e9; 0x300000ff; 0x03e903e7;
	0x022d03ee; 0x300000ff; 0x03ee03e9; 0x022b03ef;
	0x300000ff; 0x03ef03ee; 0x001203f0; 0x300000ff;
	0x03f003ef; 0x022a061c; 0x300000ff; 0x061c03f0;
	0x0228061d; 0x300000ff; 0x061d061c; 0x04b1061e;
	0x300000ff; 0x061e061d; 0x00980620; 0x300000ff;
	0x0620061e; 0x04ac0622; 0x300000ff; 0x06220620;
	0x01f00624; 0x300000ff; 0x06240622; 0x01ef04bd;
	0x300000ff; 0x04bd0624; 0x000804bc; 0x300000ff;
	0x04bc04bd; 0x01f304ba; 0x300000ff; 0x04ba04bc;
	0x01f104bb; 0x300000ff; 0x04bb04ba; 0x04b304b5;
	0x300000ff; 0x04b504bb; 0x009904b6; 0x300000ff;
	0x04b604b5; 0x04b504b4; 0x300000ff; 0x04b404b6;
	0x02aa04b8; 0x300000ff; 0x04b804b4; 0x02ae04b7;
	0x300000ff; 0x04b704b8; 0x002804b9; 0x300000ff;
	0x04b904b7; 0x02af062d; 0x300000ff; 0x062d04b9;
	0x02ac0610; 0x300000ff; 0x0610062d; 0x059e062c;
	0x300000ff; 0x062c0610; 0x01080613; 0x300000ff;
	0x0613062c; 0x059f062b; 0x300000ff; 0x062b0613;
	0x02b30617; 0x300000ff; 0x0617062b; 0x02b404ac;
	0x300000ff; 0x04ac0617; 0x002904ae; 0x300000ff;
	0x04ae04ac; 0x02b104ad; 0x300000ff; 0x04ad04ae;
	0x02b004c3; 0x300000ff; 0x04c304ad; 0x04a604c4;
	0x300000ff; 0x04c404c3; 0x009404c5; 0x300000ff;
	0x04c504c4; 0x049d04c7; 0x300000ff; 0x04c704c5;
	0x01eb04ca; 0x300000ff; 0x04ca04c7; 0x01e704cb;
	0x300000ff; 0x04cb04ca; 0x000704cc; 0x300000ff;
	0x04cc04cb; 0x01e60609; 0x300000ff; 0x060904cc;
	0x01e905ec; 0x300000ff; 0x05ec0609; 0x049a0608;
	0x300000ff; 0x060805ec; 0x009205ee; 0x300000ff;
	0x05ee0608; 0x04a20607; 0x300000ff; 0x060705ee;
	0x020205f2; 0x300000ff; 0x05f20607; 0x020304dd;
	0x300000ff; 0x04dd05f2; 0x000b047c; 0x300000ff;
	0x047c04dd; 0x02060483; 0x00000030; 0x300000ff;
	0x02eb03e3; 0x00c403e6; 0x050f03e5; 0x300000ff;
	0x03e503e6; 0x050c03e8; 0x300000ff; 0x03e803e5;
	0x050b03e9; 0x300000ff; 0x03e903e8; 0x00c003ea;
	0x300000ff; 0x03ea03e9; 0x022b03ef; 0x300000ff;
	0x03ef03ea; 0x05060022; 0x300000ff; 0x002203ef;
	0x022a061c; 0x300000ff; 0x061c0022; 0x00bc061f;
	0x300000ff; 0x061f061c; 0x04b1061e; 0x300000ff;
	0x061e061f; 0x04ae0621; 0x300000ff; 0x0621061e;
	0x04ac0622; 0x300000ff; 0x06220621; 0x009704bf;
	0x300000ff; 0x04bf0622; 0x01ef04bd; 0x300000ff;
	0x04bd04bf; 0x04ad04be; 0x300000ff; 0x04be04bd;
	0x01f304ba; 0x300000ff; 0x04ba04be; 0x009b04b3;
	0x300000ff; 0x04b304ba; 0x04b304b5; 0x300000ff;
	0x04b504b3; 0x04b904b1; 0x300000ff; 0x04b104b5;
	0x04b504b4; 0x300000ff; 0x04b404b1; 0x010a04b2;
	0x300000ff; 0x04b204b4; 0x02ae04b7; 0x300000ff;
	0x04b704b2; 0x05a00631; 0x300000ff; 0x063104b7;
	0x02af062d; 0x300000ff; 0x062d0631; 0x010b062a;
	0x300000ff; 0x062a062d; 0x059e062c; 0x300000ff;
	0x062c062a; 0x05a20629; 0x300000ff; 0x0629062c;
	0x059f062b; 0x300000ff; 0x062b0629; 0x010c04a7;
	0x300000ff; 0x04a7062b; 0x02b404ac; 0x300000ff;
	0x04ac04a7; 0x04bd04a9; 0x300000ff; 0x04a904ac;
	0x02b104ad; 0x300000ff; 0x04ad04a9; 0x009d04aa;
	0x300000ff; 0x04aa04ad; 0x04a604c4; 0x300000ff;
	0x04c404aa; 0x049f04c6; 0x300000ff; 0x04c604c4;
	0x049d04c7; 0x300000ff; 0x04c704c6; 0x009004c8;
	0x300000ff; 0x04c804c7; 0x01e704cb; 0x300000ff;
	0x04cb04c8; 0x0499060a; 0x300000ff; 0x060a04cb;
	0x01e60609; 0x300000ff; 0x0609060a; 0x008f0606;
	0x300000ff; 0x06060609; 0x049a0608; 0x300000ff;
	0x06080606; 0x049c0605; 0x300000ff; 0x06050608;
	0x04a20607; 0x300000ff; 0x06070605; 0x009604dc;
	0x300000ff; 0x04dc0607; 0x020304dd; 0x300000ff;
	0x04dd04dc; 0x04ab04da; 0x300000ff; 0x04da04dd;
	0x02060483; 0x300000ff; 0x048304da; 0x00a70482;
	0x00000030; 0x300000ff; 0x00c403e6; 0x023303eb;
	0x050c03e8; 0x300000ff; 0x03e803eb; 0x023103ec;
	0x300000ff; 0x03ec03e8; 0x00c003ea; 0x300000ff;
	0x03ea03ec; 0x050701e9; 0x300000ff; 0x01e903ea;
	0x05060022; 0x300000ff; 0x002201e9; 0x050501ea;
	0x300000ff; 0x01ea0022; 0x00bc061f; 0x300000ff;
	0x061f01ea; 0x02240623; 0x300000ff; 0x0623061f;
	0x04ae0621; 0x300000ff; 0x06210623; 0x022204c2;
	0x300000ff; 0x04c20621; 0x009704bf; 0x300000ff;
	0x04bf04c2; 0x04af04c0; 0x300000ff; 0x04c004bf;
	0x04ad04be; 0x300000ff; 0x04be04c0; 0x04b804c1;
	0x300000ff; 0x04c104be; 0x009b04b3; 0x300000ff;
	0x04b304c1; 0x02de04b0; 0x300000ff; 0x04b004b3;
	0x04b904b1; 0x300000ff; 0x04b104b0; 0x02e004af;
	0x300000ff; 0x04af04b1; 0x010a04b2; 0x300000ff;
	0x04b204af; 0x05a10632; 0x300000ff; 0x063204b2;
	0x05a00631; 0x300000ff; 0x06310632; 0x05a3062f;
	0x300000ff; 0x062f0631; 0x010b062a; 0x300000ff;
	0x062a062f; 0x02e60628; 0x300000ff; 0x0628062a;
	0x05a20629; 0x300000ff; 0x06290628; 0x02e704a5;
	0x300000ff; 0x04a50629; 0x010c04a7; 0x300000ff;
	0x04a704a5; 0x04bf04a6; 0x300000ff; 0x04a604a7;
	0x04bd04a9; 0x300000ff; 0x04a904a6; 0x04bc04a8;
	0x300000ff; 0x04a804a9; 0x009d04aa; 0x300000ff;
	0x04aa04a8; 0x01f704ab; 0x300000ff; 0x04ab04aa;
	0x049f04c6; 0x300000ff; 0x04c604ab; 0x01f404c9;
	0x300000ff; 0x04c904c6; 0x009004c8; 0x300000ff;
	0x04c804c9; 0x049e060b; 0x300000ff; 0x060b04c8;
	0x0499060a; 0x300000ff; 0x060a060b; 0x049b060c;
	0x300000ff; 0x060c060a; 0x008f0606; 0x300000ff;
	0x0606060c; 0x01ec0604; 0x300000ff; 0x06040606;
	0x049c0605; 0x300000ff; 0x06050604; 0x01ee04df;
	0x300000ff; 0x04df0605; 0x009604dc; 0x300000ff;
	0x04dc04df; 0x04aa04db; 0x300000ff; 0x04db04dc;
	0x04ab04da; 0x300000ff; 0x04da04db; 0x04b604d8;
	0x300000ff; 0x04d804da; 0x00a70482; 0x300000ff;
	0x048204d8; 0x02bd0485; 0x00000030; 0x300000ff;
	0x023303eb; 0x001303ed; 0x023103ec; 0x300000ff;
	0x03ec03ed; 0x0230008b; 0x300000ff; 0x008b03ec;
	0x050701e9; 0x300000ff; 0x01e9008b; 0x00bd01e3;
	0x300000ff; 0x01e301e9; 0x050501ea; 0x300000ff;
	0x01ea01e3; 0x022501e8; 0x300000ff; 0x01e801ea;
	0x02240623; 0x300000ff; 0x062301e8; 0x00110409;
	0x300000ff; 0x04090623; 0x022204c2; 0x300000ff;
	0x04c20409; 0x02270408; 0x300000ff; 0x040804c2;
	0x04af04c0; 0x300000ff; 0x04c00408; 0x00bf0403;
	0x300000ff; 0x040304c0; 0x04b804c1; 0x300000ff;
	0x04c10403; 0x02df0405; 0x300000ff; 0x040504c1;
	0x02de04b0; 0x300000ff; 0x04b00405; 0x00310406;
	0x300000ff; 0x040604b0; 0x02e004af; 0x300000ff;
	0x04af0406; 0x02e20633; 0x300000ff; 0x063304af;
	0x05a10632; 0x300000ff; 0x06320633; 0x011c0630;
	0x300000ff; 0x06300632; 0x05a3062f; 0x300000ff;
	0x062f0630; 0x02e8062e; 0x300000ff; 0x062e062f;
	0x02e60628; 0x300000ff; 0x0628062e; 0x003203fa;
	0x300000ff; 0x03fa0628; 0x02e704a5; 0x300000ff;
	0x04a503fa; 0x02e4049b; 0x300000ff; 0x049b04a5;
	0x04bf04a6; 0x300000ff; 0x04a6049b; 0x009e049d;
	0x300000ff; 0x049d04a6; 0x04bc04a8; 0x300000ff;
	0x04a8049d; 0x01f804a2; 0x300000ff; 0x04a204a8;
	0x01f704ab; 0x300000ff; 0x04ab04a2; 0x000904a4;
	0x300000ff; 0x04a404ab; 0x01f404c9; 0x300000ff;
	0x04c904a4; 0x01f5060e; 0x300000ff; 0x060e04c9;
	0x049e060b; 0x300000ff; 0x060b060e; 0x0095060d;
	0x300000ff; 0x060d060b; 0x049b060c; 0x300000ff;
	0x060c060d; 0x01ed060f; 0x300000ff; 0x060f060c;
	0x01ec0604; 0x300000ff; 0x0604060f; 0x000804bc;
	0x300000ff; 0x04bc0604; 0x01ee04df; 0x300000ff;
	0x04df04bc; 0x01f204de; 0x300000ff; 0x04de04df;
	0x04aa04db; 0x300000ff; 0x04db04de; 0x009a04d9;
	0x300000ff; 0x04d904db; 0x04b604d8; 0x300000ff;
	0x04d804d9; 0x02bc04d7; 0x300000ff; 0x04d704d8;
	0x02bd0485; 0x300000ff; 0x048504d7; 0x002b0486;
	0x00000008; 0x30519e8f; 0x003303e2; 0x02ea03e4;
	0x02ef03f1; 0x30519e8f; 0x03f103e4; 0x051003f2;
	0x30519e8f; 0x03f203f1; 0x011e03f3; 0x30519e8f;
	0x03f303f2; 0x050e03f5; 0x30519e8f; 0x03f503f3;
	0x02e903f8; 0x30519e8f; 0x03f803f5; 0x02e503f9;
	0x30519e8f; 0x03f903f8; 0x003203fa; 0x30519e8f;
	0x03fa03f9; 0x02e4049b; 0x00000008; 0x30519e8f;
	0x02ea03e4; 0x00c203e7; 0x051003f2; 0x30519e8f;
	0x03f203e7; 0x050d03f4; 0x30519e8f; 0x03f403f2;
	0x050e03f5; 0x30519e8f; 0x03f503f4; 0x00c103f6;
	0x30519e8f; 0x03f603f5; 0x02e503f9; 0x30519e8f;
	0x03f903f6; 0x04be049c; 0x30519e8f; 0x049c03f9;
	0x02e4049b; 0x30519e8f; 0x049b049c; 0x009e049d;
	0x00000008; 0x30519e8f; 0x00c203e7; 0x022d03ee;
	0x050d03f4; 0x30519e8f; 0x03f403ee; 0x022c03f7;
	0x30519e8f; 0x03f703f4; 0x00c103f6; 0x30519e8f;
	0x03f603f7; 0x04bb049e; 0x30519e8f; 0x049e03f6;
	0x04be049c; 0x30519e8f; 0x049c049e; 0x04ba049f;
	0x30519e8f; 0x049f049c; 0x009e049d; 0x30519e8f;
	0x049d049f; 0x01f804a2; 0x00000008; 0x30519e8f;
	0x022d03ee; 0x001203f0; 0x022c03f7; 0x30519e8f;
	0x03f703f0; 0x022904a1; 0x30519e8f; 0x04a103f7;
	0x04bb049e; 0x30519e8f; 0x049e04a1; 0x009c04a0;
	0x30519e8f; 0x04a0049e; 0x04ba049f; 0x30519e8f;
	0x049f04a0; 0x01f604a3; 0x30519e8f; 0x04a3049f;
	0x01f804a2; 0x30519e8f; 0x04a204a3; 0x000904a4;
	0x00000007; 0x30519e8f; 0x003003fb; 0x02dc03fc;
	0x02d903fd; 0x30519e8f; 0x03fd03fc; 0x050903fe;
	0x30519e8f; 0x03fe03fd; 0x00be0400; 0x30519e8f;
	0x040003fe; 0x05080402; 0x30519e8f; 0x04020400;
	0x02260407; 0x30519e8f; 0x04070402; 0x02270408;
	0x30519e8f; 0x04080407; 0x00110409; 0x00000005;
	0x30519e8f; 0x02dc03fc; 0x011a03ff; 0x050903fe;
	0x30519e8f; 0x03fe03ff; 0x050a0401; 0x30519e8f;
	0x040103fe; 0x05080402; 0x30519e8f; 0x04020401;
	0x00bf0403; 0x30519e8f; 0x04030402; 0x02270408;
	0x00000003; 0x30519e8f; 0x011a03ff; 0x02e10404;
	0x050a0401; 0x30519e8f; 0x04010404; 0x02df0405;
	0x30519e8f; 0x04050401; 0x00bf0403; 0x0000001f;
	0x300000ff; 0x00110409; 0x0223040a; 0x02260407;
	0x300000ff; 0x0407040a; 0x04ff040b; 0x300000ff;
	0x040b0407; 0x00be0400; 0x300000ff; 0x0400040b;
	0x0503040e; 0x300000ff; 0x040e0400; 0x02d903fd;
	0x300000ff; 0x03fd040e; 0x02d80413; 0x300000ff;
	0x041303fd; 0x003003fb; 0x300000ff; 0x03fb0413;
	0x02da0443; 0x300000ff; 0x044303fb; 0x02db0065;
	0x300000ff; 0x00650443; 0x05b20087; 0x300000ff;
	0x00870065; 0x01180046; 0x300000ff; 0x00460087;
	0x05b10073; 0x300000ff; 0x00730046; 0x02d60029;
	0x300000ff; 0x00290073; 0x02d5042a; 0x300000ff;
	0x042a0029; 0x002f042c; 0x300000ff; 0x042c042a;
	0x02d3042b; 0x300000ff; 0x042b042c; 0x02d4042d;
	0x300000ff; 0x042d042b; 0x04fa042e; 0x300000ff;
	0x042e042d; 0x00c3042f; 0x300000ff; 0x042f042e;
	0x04f70431; 0x300000ff; 0x0431042f; 0x02320434;
	0x300000ff; 0x04340431; 0x022e0435; 0x300000ff;
	0x04350434; 0x001303ed; 0x300000ff; 0x03ed0435;
	0x022f0025; 0x300000ff; 0x002503ed; 0x0230008b;
	0x300000ff; 0x008b0025; 0x0500015e; 0x300000ff;
	0x015e008b; 0x00bd01e3; 0x300000ff; 0x01e3015e;
	0x04fe01e7; 0x300000ff; 0x01e701e3; 0x022501e8;
	0x300000ff; 0x01e801e7; 0x0223040a; 0x300000ff;
	0x040a01e8; 0x00110409; 0x0000001d; 0x300000ff;
	0x0223040a; 0x00b8040c; 0x04ff040b; 0x300000ff;
	0x040b040c; 0x04fd040d; 0x300000ff; 0x040d040b;
	0x0503040e; 0x300000ff; 0x040e040d; 0x00bb040f;
	0x300000ff; 0x040f040e; 0x02d80413; 0x300000ff;
	0x0413040f; 0x05040441; 0x300000ff; 0x04410413;
	0x02da0443; 0x300000ff; 0x04430441; 0x0117043f;
	0x300000ff; 0x043f0443; 0x05b20087; 0x300000ff;
	0x0087043f; 0x05b00088; 0x300000ff; 0x00880087;
	0x05b10073; 0x300000ff; 0x00730088; 0x01160425;
	0x300000ff; 0x04250073; 0x02d5042a; 0x300000ff;
	0x042a0425; 0x04fb0427; 0x300000ff; 0x0427042a;
	0x02d3042b; 0x300000ff; 0x042b0427; 0x00b70428;
	0x300000ff; 0x0428042b; 0x04fa042e; 0x300000ff;
	0x042e0428; 0x04f50430; 0x300000ff; 0x0430042e;
	0x04f70431; 0x300000ff; 0x04310430; 0x00b50432;
	0x300000ff; 0x04320431; 0x022e0435; 0x300000ff;
	0x04350432; 0x04f60020; 0x300000ff; 0x00200435;
	0x022f0025; 0x300000ff; 0x00250020; 0x00b90021;
	0x300000ff; 0x00210025; 0x0500015e; 0x300000ff;
	0x015e0021; 0x04fc01e6; 0x300000ff; 0x01e6015e;
	0x04fe01e7; 0x300000ff; 0x01e701e6; 0x00b8040c;
	0x300000ff; 0x040c01e7; 0x0223040a; 0x0000001b;
	0x300000ff; 0x00b8040c; 0x021e0410; 0x04fd040d;
	0x300000ff; 0x040d0410; 0x02210411; 0x300000ff;
	0x0411040d; 0x00bb040f; 0x300000ff; 0x040f0411;
	0x05010442; 0x300000ff; 0x0442040f; 0x05040441;
	0x300000ff; 0x04410442; 0x0502043e; 0x300000ff;
	0x043e0441; 0x0117043f; 0x300000ff; 0x043f043e;
	0x02d2043c; 0x300000ff; 0x043c043f; 0x05b00088;
	0x300000ff; 0x0088043c; 0x02d10423; 0x300000ff;
	0x04230088; 0x01160425; 0x300000ff; 0x04250423;
	0x04f90424; 0x300000ff; 0x04240425; 0x04fb0427;
	0x300000ff; 0x04270424; 0x04f80426; 0x300000ff;
	0x04260427; 0x00b70428; 0x300000ff; 0x04280426;
	0x021b0429; 0x300000ff; 0x04290428; 0x04f50430;
	0x300000ff; 0x04300429; 0x02190433; 0x300000ff;
	0x04330430; 0x00b50432; 0x300000ff; 0x04320433;
	0x04f3066a; 0x300000ff; 0x066a0432; 0x04f60020;
	0x300000ff; 0x0020066a; 0x04f4066b; 0x300000ff;
	0x066b0020; 0x00b90021; 0x300000ff; 0x0021066b;
	0x021f0023; 0x300000ff; 0x00230021; 0x04fc01e6;
	0x300000ff; 0x01e60023; 0x021e0410; 0x300000ff;
	0x041001e6; 0x00b8040c; 0x00000019; 0x300000ff;
	0x021e0410; 0x00100412; 0x02210411; 0x300000ff;
	0x04110412; 0x02200444; 0x300000ff; 0x04440411;
	0x05010442; 0x300000ff; 0x04420444; 0x00ba0440;
	0x300000ff; 0x04400442; 0x0502043e; 0x300000ff;
	0x043e0440; 0x02d0043d; 0x300000ff; 0x043d043e;
	0x02d2043c; 0x300000ff; 0x043c043d; 0x002e0414;
	0x300000ff; 0x0414043c; 0x02d10423; 0x300000ff;
	0x04230414; 0x02cf0416; 0x300000ff; 0x04160423;
	0x04f90424; 0x300000ff; 0x04240416; 0x00b60419;
	0x300000ff; 0x04190424; 0x04f80426; 0x300000ff;
	0x04260419; 0x021a0420; 0x300000ff; 0x04200426;
	0x021b0429; 0x300000ff; 0x04290420; 0x000f0422;
	0x300000ff; 0x04220429; 0x02190433; 0x300000ff;
	0x04330422; 0x02180664; 0x300000ff; 0x06640433;
	0x04f3066a; 0x300000ff; 0x066a0664; 0x00b40666;
	0x300000ff; 0x0666066a; 0x04f4066b; 0x300000ff;
	0x066b0666; 0x021d0669; 0x300000ff; 0x0669066b;
	0x021f0023; 0x300000ff; 0x00230669; 0x00100412;
	0x300000ff; 0x04120023; 0x021e0410; 0x00000008;
	0x30519e8f; 0x002e0414; 0x02ce0415; 0x02cf0416;
	0x30519e8f; 0x04160415; 0x04f10417; 0x30519e8f;
	0x04170416; 0x00b60419; 0x30519e8f; 0x04190417;
	0x04ed041b; 0x30519e8f; 0x041b0419; 0x021a0420;
	0x30519e8f; 0x0420041b; 0x02170421; 0x30519e8f;
	0x04210420; 0x000f0422; 0x30519e8f; 0x04220421;
	0x02180664; 0x00000008; 0x30519e8f; 0x02ce0415;
	0x00b30418; 0x04f10417; 0x30519e8f; 0x04170418;
	0x04eb041a; 0x30519e8f; 0x041a0417; 0x04ed041b;
	0x30519e8f; 0x041b041a; 0x00b1041c; 0x30519e8f;
	0x041c041b; 0x02170421; 0x30519e8f; 0x0421041c;
	0x04ec0665; 0x30519e8f; 0x06650421; 0x02180664;
	0x30519e8f; 0x06640665; 0x00b40666; 0x00000008;
	0x30519e8f; 0x00b30418; 0x0216041d; 0x04eb041a;
	0x30519e8f; 0x041a041d; 0x0214041e; 0x30519e8f;
	0x041e041a; 0x00b1041c; 0x30519e8f; 0x041c041e;
	0x04ea0667; 0x30519e8f; 0x0667041c; 0x04ec0665;
	0x30519e8f; 0x06650667; 0x04ef0668; 0x30519e8f;
	0x06680665; 0x00b40666; 0x30519e8f; 0x06660668;
	0x021d0669; 0x00000008; 0x30519e8f; 0x0216041d;
	0x000e041f; 0x0214041e; 0x30519e8f; 0x041e041f;
	0x0215044a; 0x30519e8f; 0x044a041e; 0x04ea0667;
	0x30519e8f; 0x0667044a; 0x00b20447; 0x30519e8f;
	0x04470667; 0x04ef0668; 0x30519e8f; 0x06680447;
	0x021c0445; 0x30519e8f; 0x04450668; 0x021d0669;
	0x30519e8f; 0x06690445; 0x00100412; 0x00000007;
	0x30519e8f; 0x002f042c; 0x02d4042d; 0x02d70436;
	0x30519e8f; 0x0436042d; 0x05120437; 0x30519e8f;
	0x04370436; 0x01190438; 0x30519e8f; 0x04380437;
	0x0513043a; 0x30519e8f; 0x043a0438; 0x02ec043b;
	0x30519e8f; 0x043b043a; 0x02eb03e3; 0x30519e8f;
	0x03e3043b; 0x003303e2; 0x00000005; 0x30519e8f;
	0x02d4042d; 0x00c3042f; 0x05120437; 0x30519e8f;
	0x0437042f; 0x05110439; 0x30519e8f; 0x04390437;
	0x0513043a; 0x30519e8f; 0x043a0439; 0x00c403e6;
	0x30519e8f; 0x03e6043a; 0x02eb03e3; 0x00000003;
	0x30519e8f; 0x00c3042f; 0x02320434; 0x05110439;
	0x30519e8f; 0x04390434; 0x023303eb; 0x30519e8f;
	0x03eb0439; 0x00c403e6; 0x00000007; 0x30519e8f;
	0x00100412; 0x021c0445; 0x02200444; 0x30519e8f;
	0x04440445; 0x04f00446; 0x30519e8f; 0x04460444;
	0x00ba0440; 0x30519e8f; 0x04400446; 0x04f20449;
	0x30519e8f; 0x04490440; 0x02d0043d; 0x30519e8f;
	0x043d0449; 0x02ce0415; 0x30519e8f; 0x0415043d;
	0x002e0414; 0x00000005; 0x30519e8f; 0x021c0445;
	0x00b20447; 0x04f00446; 0x30519e8f; 0x04460447;
	0x04ee0448; 0x30519e8f; 0x04480446; 0x04f20449;
	0x30519e8f; 0x04490448; 0x00b30418; 0x30519e8f;
	0x04180449; 0x02ce0415; 0x00000003; 0x30519e8f;
	0x00b20447; 0x0215044a; 0x04ee0448; 0x30519e8f;
	0x0448044a; 0x0216041d; 0x30519e8f; 0x041d0448;
	0x00b30418; 0x00000002; 0x30519e8f; 0x031c044c;
	0x04e0044d; 0x00ac044f; 0x30519e8f; 0x044f044d;
	0x04dd0451; 0x00000002; 0x30519e8f; 0x04de0450;
	0x02c30454; 0x00ab0452; 0x30519e8f; 0x04520454;
	0x049704f8; 0x00000002; 0x30519e8f; 0x00ac044f;
	0x04df045d; 0x031c044c; 0x30519e8f; 0x044c045d;
	0x031d031a; 0x00000010; 0x300000ff; 0x002904ae;
	0x02b004c3; 0x02b204cd; 0x300000ff; 0x04cd04c3;
	0x04a704ce; 0x300000ff; 0x04ce04cd; 0x010504cf;
	0x300000ff; 0x04cf04ce; 0x04a504d1; 0x300000ff;
	0x04d104cf; 0x02a704d4; 0x300000ff; 0x04d404d1;
	0x02a304d5; 0x300000ff; 0x04d504d4; 0x002704d6;
	0x300000ff; 0x04d604d5; 0x02a2051c; 0x300000ff;
	0x051c04d6; 0x02a40526; 0x300000ff; 0x0526051c;
	0x04800527; 0x300000ff; 0x05270526; 0x00f90528;
	0x300000ff; 0x05280527; 0x047e052a; 0x300000ff;
	0x052a0528; 0x0290052d; 0x300000ff; 0x052d052a;
	0x028c052e; 0x300000ff; 0x052e052d; 0x002402fd;
	0x300000ff; 0x02fd052e; 0x028d0304; 0x00000010;
	0x300000ff; 0x02b004c3; 0x009404c5; 0x04a704ce;
	0x300000ff; 0x04ce04c5; 0x04a404d0; 0x300000ff;
	0x04d004ce; 0x04a504d1; 0x300000ff; 0x04d104d0;
	0x009304d2; 0x300000ff; 0x04d204d1; 0x02a304d5;
	0x300000ff; 0x04d504d2; 0x047f051d; 0x300000ff;
	0x051d04d5; 0x02a2051c; 0x300000ff; 0x051c051d;
	0x0084051e; 0x300000ff; 0x051e051c; 0x04800527;
	0x300000ff; 0x0527051e; 0x047c0529; 0x300000ff;
	0x05290527; 0x047e052a; 0x300000ff; 0x052a0529;
	0x0083052b; 0x300000ff; 0x052b052a; 0x028c052e;
	0x300000ff; 0x052e052b; 0x047d0542; 0x300000ff;
	0x0542052e; 0x028d0304; 0x300000ff; 0x03040542;
	0x00f20307; 0x00000010; 0x300000ff; 0x009404c5;
	0x01eb04ca; 0x04a404d0; 0x300000ff; 0x04d004ca;
	0x01ea04d3; 0x300000ff; 0x04d304d0; 0x009304d2;
	0x300000ff; 0x04d204d3; 0x0479051f; 0x300000ff;
	0x051f04d2; 0x047f051d; 0x300000ff; 0x051d051f;
	0x04770520; 0x300000ff; 0x0520051d; 0x0084051e;
	0x300000ff; 0x051e0520; 0x01d50523; 0x300000ff;
	0x0523051e; 0x047c0529; 0x300000ff; 0x05290523;
	0x01d4052c; 0x300000ff; 0x052c0529; 0x0083052b;
	0x300000ff; 0x052b052c; 0x047a0543; 0x300000ff;
	0x0543052b; 0x047d0542; 0x300000ff; 0x05420543;
	0x047b0540; 0x300000ff; 0x05400542; 0x00f20307;
	0x300000ff; 0x03070540; 0x0282030b; 0x00000010;
	0x300000ff; 0x01eb04ca; 0x000704cc; 0x01ea04d3;
	0x300000ff; 0x04d304cc; 0x01e40522; 0x300000ff;
	0x052204d3; 0x0479051f; 0x300000ff; 0x051f0522;
	0x00810521; 0x300000ff; 0x0521051f; 0x04770520;
	0x300000ff; 0x05200521; 0x01d20524; 0x300000ff;
	0x05240520; 0x01d50523; 0x300000ff; 0x05230524;
	0x00040525; 0x300000ff; 0x05250523; 0x01d4052c;
	0x300000ff; 0x052c0525; 0x01d30544; 0x300000ff;
	0x0544052c; 0x047a0543; 0x300000ff; 0x05430544;
	0x00820541; 0x300000ff; 0x05410543; 0x047b0540;
	0x300000ff; 0x05400541; 0x027f053f; 0x300000ff;
	0x053f0540; 0x0282030b; 0x300000ff; 0x030b053f;
	0x002202d0; 0x00000007; 0x30519e8f; 0x002b0486;
	0x02bc04d7; 0x02bf04e0; 0x30519e8f; 0x04e004d7;
	0x04b704e1; 0x30519e8f; 0x04e104e0; 0x010904e2;
	0x30519e8f; 0x04e204e1; 0x04b404e4; 0x30519e8f;
	0x04e404e2; 0x02ad04e5; 0x30519e8f; 0x04e504e4;
	0x02aa04b8; 0x30519e8f; 0x04b804e5; 0x002804b9;
	0x00000005; 0x30519e8f; 0x02bc04d7; 0x009a04d9;
	0x04b704e1; 0x30519e8f; 0x04e104d9; 0x04b204e3;
	0x30519e8f; 0x04e304e1; 0x04b404e4; 0x30519e8f;
	0x04e404e3; 0x009904b6; 0x30519e8f; 0x04b604e4;
	0x02aa04b8; 0x00000003; 0x30519e8f; 0x009a04d9;
	0x01f204de; 0x04b204e3; 0x30519e8f; 0x04e304de;
	0x01f104bb; 0x30519e8f; 0x04bb04e3; 0x009904b6;
	0x00000002; 0x30519e8f; 0x02c204e7; 0x049804e8;
	0x008e04ea; 0x30519e8f; 0x04ea04e8; 0x049504ec;
	0x00000002; 0x30519e8f; 0x049604eb; 0x029b04ef;
	0x008d04ed; 0x30519e8f; 0x04ed04ef; 0x0488051a;
	0x00000002; 0x30519e8f; 0x008e04ea; 0x049704f8;
	0x02c204e7; 0x30519e8f; 0x04e704f8; 0x02c30454;
	0x00000002; 0x30519e8f; 0x029a050a; 0x0489050b;
	0x0088050d; 0x30519e8f; 0x050d050b; 0x0485050f;
	0x00000002; 0x30519e8f; 0x0487050e; 0x02940512;
	0x00870510; 0x30519e8f; 0x05100512; 0x04860532;
	0x00000002; 0x30519e8f; 0x0088050d; 0x0488051a;
	0x029a050a; 0x30519e8f; 0x050a051a; 0x029b04ef;
	0x00000002; 0x30519e8f; 0x02940512; 0x029502ec;
	0x04860532; 0x30519e8f; 0x053202ec; 0x00f502e9;
	0x00000018; 0x300000ff; 0x002302db; 0x02850535;
	0x02860534; 0x300000ff; 0x05340535; 0x04700536;
	0x300000ff; 0x05360534; 0x00860531; 0x300000ff;
	0x05310536; 0x046d0539; 0x300000ff; 0x05390531;
	0x01d9052f; 0x300000ff; 0x052f0539; 0x01d6053e;
	0x300000ff; 0x053e052f; 0x00050515; 0x300000ff;
	0x0515053e; 0x01d705a6; 0x300000ff; 0x05a60515;
	0x01d80516; 0x300000ff; 0x051605a6; 0x047305b3;
	0x300000ff; 0x05b30516; 0x00850518; 0x300000ff;
	0x051805b3; 0x047505b1; 0x300000ff; 0x05b10518;
	0x01dd051b; 0x300000ff; 0x051b05b1; 0x01dc05b0;
	0x300000ff; 0x05b0051b; 0x000604f3; 0x300000ff;
	0x04f305b0; 0x01de05bb; 0x300000ff; 0x05bb04f3;
	0x01df05c8; 0x300000ff; 0x05c805bb; 0x048a05e9;
	0x300000ff; 0x05e905c8; 0x008a05cb; 0x300000ff;
	0x05cb05e9; 0x048d05e7; 0x300000ff; 0x05e705cb;
	0x01f905cf; 0x300000ff; 0x05cf05e7; 0x01fa05e6;
	0x300000ff; 0x05e605cf; 0x000a0494; 0x300000ff;
	0x049405e6; 0x01fb05f4; 0x00000018; 0x300000ff;
	0x02850535; 0x007e0537; 0x04700536; 0x300000ff;
	0x05360537; 0x046b0538; 0x300000ff; 0x05380536;
	0x046d0539; 0x300000ff; 0x05390538; 0x007c053a;
	0x300000ff; 0x053a0539; 0x01d6053e; 0x300000ff;
	0x053e053a; 0x046c05a3; 0x300000ff; 0x05a3053e;
	0x01d705a6; 0x300000ff; 0x05a605a3; 0x007f05a4;
	0x300000ff; 0x05a405a6; 0x047305b3; 0x300000ff;
	0x05b305a4; 0x047205b4; 0x300000ff; 0x05b405b3;
	0x047505b1; 0x300000ff; 0x05b105b4; 0x008005b2;
	0x300000ff; 0x05b205b1; 0x01dc05b0; 0x300000ff;
	0x05b005b2; 0x047605b8; 0x300000ff; 0x05b805b0;
	0x01de05bb; 0x300000ff; 0x05bb05b8; 0x008905b9;
	0x300000ff; 0x05b905bb; 0x048a05e9; 0x300000ff;
	0x05e905b9; 0x048b05ea; 0x300000ff; 0x05ea05e9;
	0x048d05e7; 0x300000ff; 0x05e705ea; 0x009105e8;
	0x300000ff; 0x05e805e7; 0x01fa05e6; 0x300000ff;
	0x05e605e8; 0x04a105f0; 0x300000ff; 0x05f005e6;
	0x01fb05f4; 0x300000ff; 0x05f405f0; 0x009f05f1;
	0x00000018; 0x300000ff; 0x007e0537; 0x01cd053b;
	0x046b0538; 0x300000ff; 0x0538053b; 0x01cb053c;
	0x300000ff; 0x053c0538; 0x007c053a; 0x300000ff;
	0x053a053c; 0x046905a1; 0x300000ff; 0x05a1053a;
	0x046c05a3; 0x300000ff; 0x05a305a1; 0x046a05a2;
	0x300000ff; 0x05a205a3; 0x007f05a4; 0x300000ff;
	0x05a405a2; 0x01d005a5; 0x300000ff; 0x05a505a4;
	0x047205b4; 0x300000ff; 0x05b405a5; 0x01d105b5;
	0x300000ff; 0x05b505b4; 0x008005b2; 0x300000ff;
	0x05b205b5; 0x047405b6; 0x300000ff; 0x05b605b2;
	0x047605b8; 0x300000ff; 0x05b805b6; 0x047805b7;
	0x300000ff; 0x05b705b8; 0x008905b9; 0x300000ff;
	0x05b905b7; 0x01e505ba; 0x300000ff; 0x05ba05b9;
	0x048b05ea; 0x300000ff; 0x05ea05ba; 0x01e805eb;
	0x300000ff; 0x05eb05ea; 0x009105e8; 0x300000ff;
	0x05e805eb; 0x04a005ed; 0x300000ff; 0x05ed05e8;
	0x04a105f0; 0x300000ff; 0x05f005ed; 0x04a305ef;
	0x300000ff; 0x05ef05f0; 0x009f05f1; 0x300000ff;
	0x05f105ef; 0x020405f3; 0x00000018; 0x300000ff;
	0x01cd053b; 0x0003053d; 0x01cb053c; 0x300000ff;
	0x053c053d; 0x01ca059b; 0x300000ff; 0x059b053c;
	0x046905a1; 0x300000ff; 0x05a1059b; 0x007b059d;
	0x300000ff; 0x059d05a1; 0x046a05a2; 0x300000ff;
	0x05a2059d; 0x01cf05a0; 0x300000ff; 0x05a005a2;
	0x01d005a5; 0x300000ff; 0x05a505a0; 0x00040525;
	0x300000ff; 0x052505a5; 0x01d105b5; 0x300000ff;
	0x05b50525; 0x01d20524; 0x300000ff; 0x052405b5;
	0x047405b6; 0x300000ff; 0x05b60524; 0x00810521;
	0x300000ff; 0x052105b6; 0x047805b7; 0x300000ff;
	0x05b70521; 0x01e40522; 0x300000ff; 0x052205b7;
	0x01e505ba; 0x300000ff; 0x05ba0522; 0x000704cc;
	0x300000ff; 0x04cc05ba; 0x01e805eb; 0x300000ff;
	0x05eb04cc; 0x01e905ec; 0x300000ff; 0x05ec05eb;
	0x04a005ed; 0x300000ff; 0x05ed05ec; 0x009205ee;
	0x300000ff; 0x05ee05ed; 0x04a305ef; 0x300000ff;
	0x05ef05ee; 0x020205f2; 0x300000ff; 0x05f205ef;
	0x020405f3; 0x300000ff; 0x05f305f2; 0x000b047c;
	0x0000002d; 0x300000ff; 0x00040525; 0x01ce0545;
	0x01d30544; 0x300000ff; 0x05440545; 0x04640546;
	0x300000ff; 0x05460544; 0x00820541; 0x300000ff;
	0x05410546; 0x04670549; 0x300000ff; 0x05490541;
	0x027f053f; 0x300000ff; 0x053f0549; 0x027e054e;
	0x300000ff; 0x054e053f; 0x002202d0; 0x300000ff;
	0x02d0054e; 0x0280056b; 0x300000ff; 0x056b02d0;
	0x028102d1; 0x300000ff; 0x02d1056b; 0x056c0595;
	0x300000ff; 0x059502d1; 0x00f102d4; 0x300000ff;
	0x02d40595; 0x056d0593; 0x300000ff; 0x059302d4;
	0x028902d9; 0x300000ff; 0x02d90593; 0x02880592;
	0x300000ff; 0x059202d9; 0x002302db; 0x300000ff;
	0x02db0592; 0x02870562; 0x300000ff; 0x056202db;
	0x02850535; 0x300000ff; 0x05350562; 0x04710561;
	0x300000ff; 0x05610535; 0x007e0537; 0x300000ff;
	0x05370561; 0x046e0560; 0x300000ff; 0x05600537;
	0x01cd053b; 0x300000ff; 0x053b0560; 0x01cc055b;
	0x300000ff; 0x055b053b; 0x0003053d; 0x300000ff;
	0x053d055b; 0x01c7055c; 0x300000ff; 0x055c053d;
	0x01c80586; 0x300000ff; 0x0586055c; 0x04530587;
	0x300000ff; 0x05870586; 0x00740588; 0x300000ff;
	0x05880587; 0x0450058a; 0x300000ff; 0x058a0588;
	0x01bf058b; 0x300000ff; 0x058b058a; 0x01bd0580;
	0x300000ff; 0x0580058b; 0x00010575; 0x300000ff;
	0x05750580; 0x01c0057f; 0x300000ff; 0x057f0575;
	0x01c10574; 0x300000ff; 0x0574057f; 0x045c057d;
	0x300000ff; 0x057d0574; 0x00760572; 0x300000ff;
	0x0572057d; 0x045f057c; 0x300000ff; 0x057c0572;
	0x02790576; 0x300000ff; 0x0576057c; 0x027b057e;
	0x300000ff; 0x057e0576; 0x00210563; 0x300000ff;
	0x0563057e; 0x027d0597; 0x300000ff; 0x05970563;
	0x027c0564; 0x300000ff; 0x05640597; 0x056b0596;
	0x300000ff; 0x05960564; 0x00ef0567; 0x300000ff;
	0x05670596; 0x056c0595; 0x300000ff; 0x05950567;
	0x0280056b; 0x00000008; 0x30519e8f; 0x01ce0545;
	0x00780547; 0x04640546; 0x30519e8f; 0x05460547;
	0x04620548; 0x30519e8f; 0x05480546; 0x04670549;
	0x30519e8f; 0x05490548; 0x007a054a; 0x30519e8f;
	0x054a0549; 0x027e054e; 0x30519e8f; 0x054e054a;
	0x04680569; 0x30519e8f; 0x0569054e; 0x0280056b;
	0x30519e8f; 0x056b0569; 0x00ef0567; 0x00000008;
	0x30519e8f; 0x00780547; 0x01c4054b; 0x04620548;
	0x30519e8f; 0x0548054b; 0x01c6054c; 0x30519e8f;
	0x054c0548; 0x007a054a; 0x30519e8f; 0x054a054c;
	0x0465056a; 0x30519e8f; 0x056a054a; 0x04680569;
	0x30519e8f; 0x0569056a; 0x04660566; 0x30519e8f;
	0x05660569; 0x00ef0567; 0x30519e8f; 0x05670566;
	0x027c0564; 0x00000008; 0x30519e8f; 0x01c4054b;
	0x0002054d; 0x01c6054c; 0x30519e8f; 0x054c054d;
	0x01c5056c; 0x30519e8f; 0x056c054c; 0x0465056a;
	0x30519e8f; 0x056a056c; 0x00790568; 0x30519e8f;
	0x0568056a; 0x04660566; 0x30519e8f; 0x05660568;
	0x027a0565; 0x30519e8f; 0x05650566; 0x027c0564;
	0x30519e8f; 0x05640565; 0x00210563; 0x00000006;
	0x30519e8f; 0x0020054f; 0x02740550; 0x02760551;
	0x30519e8f; 0x05510550; 0x04560552; 0x30519e8f;
	0x05520551; 0x007d0554; 0x30519e8f; 0x05540552;
	0x04540556; 0x30519e8f; 0x05560554; 0x01cc055b;
	0x30519e8f; 0x055b0556; 0x01c7055c; 0x00000006;
	0x30519e8f; 0x02740550; 0x00720553; 0x04560552;
	0x30519e8f; 0x05520553; 0x04520555; 0x30519e8f;
	0x05550552; 0x04540556; 0x30519e8f; 0x05560555;
	0x00710557; 0x30519e8f; 0x05570556; 0x01c7055c;
	0x30519e8f; 0x055c0557; 0x04530587; 0x00000006;
	0x30519e8f; 0x00720553; 0x01bc0558; 0x04520555;
	0x30519e8f; 0x05550558; 0x01bb0559; 0x30519e8f;
	0x05590555; 0x00710557; 0x30519e8f; 0x05570559;
	0x044e0589; 0x30519e8f; 0x05890557; 0x04530587;
	0x30519e8f; 0x05870589; 0x0450058a; 0x00000006;
	0x30519e8f; 0x01bc0558; 0x0000055a; 0x01bb0559;
	0x30519e8f; 0x0559055a; 0x01ba0585; 0x30519e8f;
	0x05850559; 0x044e0589; 0x30519e8f; 0x05890585;
	0x00700582; 0x30519e8f; 0x05820589; 0x0450058a;
	0x30519e8f; 0x058a0582; 0x01bd0580; 0x00000005;
	0x30519e8f; 0x0020054f; 0x02760551; 0x0278055d;
	0x30519e8f; 0x055d0551; 0x046f055e; 0x30519e8f;
	0x055e055d; 0x00ee055f; 0x30519e8f; 0x055f055e;
	0x04710561; 0x30519e8f; 0x0561055f; 0x02870562;
	0x00000003; 0x30519e8f; 0x02760551; 0x007d0554;
	0x046f055e; 0x30519e8f; 0x055e0554; 0x046e0560;
	0x30519e8f; 0x0560055e; 0x04710561; 0x00000007;
	0x30519e8f; 0x0002054d; 0x01c2056d; 0x01c5056c;
	0x30519e8f; 0x056c056d; 0x045a056e; 0x30519e8f;
	0x056e056c; 0x00790568; 0x30519e8f; 0x0568056e;
	0x045e0571; 0x30519e8f; 0x05710568; 0x027a0565;
	0x30519e8f; 0x05650571; 0x02790576; 0x30519e8f;
	0x05760565; 0x00210563; 0x00000005; 0x30519e8f;
	0x01c2056d; 0x0073056f; 0x045a056e; 0x30519e8f;
	0x056e056f; 0x04580570; 0x30519e8f; 0x0570056e;
	0x045e0571; 0x30519e8f; 0x05710570; 0x00760572;
	0x30519e8f; 0x05720571; 0x02790576; 0x00000003;
	0x30519e8f; 0x0073056f; 0x01be0573; 0x04580570;
	0x30519e8f; 0x05700573; 0x01c10574; 0x30519e8f;
	0x05740570; 0x00760572; 0x00000005; 0x30519e8f;
	0x0020054f; 0x02770577; 0x02750578; 0x30519e8f;
	0x05780577; 0x045d0579; 0x30519e8f; 0x05790578;
	0x0075057b; 0x30519e8f; 0x057b0579; 0x045c057d;
	0x30519e8f; 0x057d057b; 0x01c0057f; 0x00000003;
	0x30519e8f; 0x02770577; 0x00ed057a; 0x045d0579;
	0x30519e8f; 0x0579057a; 0x045f057c; 0x30519e8f;
	0x057c0579; 0x045c057d; 0x00000002; 0x30519e8f;
	0x01bd0580; 0x04510581; 0x01c0057f; 0x30519e8f;
	0x057f0581; 0x0075057b; 0x00000005; 0x30519e8f;
	0x01bd0580; 0x00700582; 0x04510581; 0x30519e8f;
	0x05810582; 0x044f0583; 0x30519e8f; 0x05830581;
	0x04550584; 0x30519e8f; 0x05840583; 0x00720553;
	0x30519e8f; 0x05530584; 0x02740550; 0x00000002;
	0x30519e8f; 0x04510581; 0x04550584; 0x0075057b;
	0x30519e8f; 0x057b0584; 0x02750578; 0x00000003;
	0x30519e8f; 0x00700582; 0x01ba0585; 0x044f0583;
	0x30519e8f; 0x05830585; 0x01bc0558; 0x30519e8f;
	0x05580583; 0x00720553; 0x00000002; 0x30519e8f;
	0x04550584; 0x02740550; 0x02750578; 0x30519e8f;
	0x05780550; 0x0020054f; 0x00000007; 0x30519e8f;
	0x0003053d; 0x01c80586; 0x01c9058c; 0x30519e8f;
	0x058c0586; 0x045b058d; 0x30519e8f; 0x058d058c;
	0x0077058e; 0x30519e8f; 0x058e058d; 0x04590590;
	0x30519e8f; 0x0590058e; 0x01c30591; 0x30519e8f;
	0x05910590; 0x01c2056d; 0x30519e8f; 0x056d0591;
	0x0002054d; 0x00000005; 0x30519e8f; 0x01c80586;
	0x00740588; 0x045b058d; 0x30519e8f; 0x058d0588;
	0x0457058f; 0x30519e8f; 0x058f058d; 0x04590590;
	0x30519e8f; 0x0590058f; 0x0073056f; 0x30519e8f;
	0x056f0590; 0x01c2056d; 0x00000003; 0x30519e8f;
	0x00740588; 0x01bf058b; 0x0457058f; 0x30519e8f;
	0x058f058b; 0x01be0573; 0x30519e8f; 0x0573058f;
	0x0073056f; 0x00000002; 0x30519e8f; 0x01bf058b;
	0x00010575; 0x01be0573; 0x30519e8f; 0x05730575;
	0x01c10574; 0x00000003; 0x30519e8f; 0x02880592;
	0x056d0593; 0x00f00594; 0x30519e8f; 0x05940593;
	0x056b0596; 0x30519e8f; 0x05960594; 0x027d0597;
	0x00000002; 0x30519e8f; 0x02880592; 0x056a0598;
	0x02870562; 0x30519e8f; 0x05620598; 0x00ee055f;
	0x00000005; 0x30519e8f; 0x02880592; 0x00f00594;
	0x056a0598; 0x30519e8f; 0x05980594; 0x05690599;
	0x30519e8f; 0x05990598; 0x0568059a; 0x30519e8f;
	0x059a0599; 0x00ed057a; 0x30519e8f; 0x057a059a;
	0x02770577; 0x00000002; 0x30519e8f; 0x056a0598;
	0x0568059a; 0x00ee055f; 0x30519e8f; 0x055f059a;
	0x0278055d; 0x00000004; 0x30519e8f; 0x00f00594;
	0x027d0597; 0x05690599; 0x30519e8f; 0x05990597;
	0x027b057e; 0x30519e8f; 0x057e0599; 0x00ed057a;
	0x30519e8f; 0x057a057e; 0x045f057c; 0x00000002;
	0x30519e8f; 0x0568059a; 0x02770577; 0x0278055d;
	0x30519e8f; 0x055d0577; 0x0020054f; 0x00000007;
	0x30519e8f; 0x0003053d; 0x01c9058c; 0x01ca059b;
	0x30519e8f; 0x059b058c; 0x0461059c; 0x30519e8f;
	0x059c059b; 0x007b059d; 0x30519e8f; 0x059d059c;
	0x0463059f; 0x30519e8f; 0x059f059d; 0x01cf05a0;
	0x30519e8f; 0x05a0059f; 0x01ce0545; 0x30519e8f;
	0x054505a0; 0x00040525; 0x00000005; 0x30519e8f;
	0x01c9058c; 0x0077058e; 0x0461059c; 0x30519e8f;
	0x059c058e; 0x0460059e; 0x30519e8f; 0x059e059c;
	0x0463059f; 0x30519e8f; 0x059f059e; 0x00780547;
	0x30519e8f; 0x0547059f; 0x01ce0545; 0x00000003;
	0x30519e8f; 0x0077058e; 0x01c30591; 0x0460059e;
	0x30519e8f; 0x059e0591; 0x01c4054b; 0x30519e8f;
	0x054b059e; 0x00780547; 0x00000007; 0x30519e8f;
	0x000604f3; 0x01df05c8; 0x01e105c9; 0x30519e8f;
	0x05c905c8; 0x048c05ca; 0x30519e8f; 0x05ca05c9;
	0x008c05cc; 0x30519e8f; 0x05cc05ca; 0x049305ce;
	0x30519e8f; 0x05ce05cc; 0x020d05d0; 0x30519e8f;
	0x05d005ce; 0x020e0500; 0x30519e8f; 0x050005d0;
	0x000d0468; 0x00000005; 0x30519e8f; 0x01df05c8;
	0x008a05cb; 0x048c05ca; 0x30519e8f; 0x05ca05cb;
	0x048e05cd; 0x30519e8f; 0x05cd05ca; 0x049305ce;
	0x30519e8f; 0x05ce05cd; 0x00a004ff; 0x30519e8f;
	0x04ff05ce; 0x020e0500; 0x00000003; 0x30519e8f;
	0x008a05cb; 0x01f905cf; 0x048e05cd; 0x30519e8f;
	0x05cd05cf; 0x01fc0502; 0x30519e8f; 0x050205cd;
	0x00a004ff; 0x00000008; 0x30519e8f; 0x000604f3;
	0x01e105c9; 0x01e004f4; 0x30519e8f; 0x04f405c9;
	0x048f05d1; 0x30519e8f; 0x05d104f4; 0x008b04f6;
	0x30519e8f; 0x04f605d1; 0x049105d3; 0x30519e8f;
	0x05d304f6; 0x020804f9; 0x30519e8f; 0x04f905d3;
	0x020905d6; 0x30519e8f; 0x05d604f9; 0x000c0458;
	0x30519e8f; 0x045805d6; 0x020a0459; 0x00000008;
	0x30519e8f; 0x01e105c9; 0x008c05cc; 0x048f05d1;
	0x30519e8f; 0x05d105cc; 0x049405d2; 0x30519e8f;
	0x05d205d1; 0x049105d3; 0x30519e8f; 0x05d305d2;
	0x00a905d4; 0x30519e8f; 0x05d405d3; 0x020905d6;
	0x30519e8f; 0x05d605d4; 0x04d8064f; 0x30519e8f;
	0x064f05d6; 0x020a0459; 0x30519e8f; 0x0459064f;
	0x00aa045b; 0x00000008; 0x30519e8f; 0x008c05cc;
	0x020d05d0; 0x049405d2; 0x30519e8f; 0x05d205d0;
	0x020f05d5; 0x30519e8f; 0x05d505d2; 0x00a905d4;
	0x30519e8f; 0x05d405d5; 0x04d90650; 0x30519e8f;
	0x065005d4; 0x04d8064f; 0x30519e8f; 0x064f0650;
	0x04db064d; 0x30519e8f; 0x064d064f; 0x00aa045b;
	0x30519e8f; 0x045b064d; 0x025c045e; 0x00000008;
	0x30519e8f; 0x020d05d0; 0x000d0468; 0x020f05d5;
	0x30519e8f; 0x05d50468; 0x02100651; 0x30519e8f;
	0x065105d5; 0x04d90650; 0x30519e8f; 0x06500651;
	0x00ad064e; 0x30519e8f; 0x064e0650; 0x04db064d;
	0x30519e8f; 0x064d064e; 0x025d064c; 0x30519e8f;
	0x064c064d; 0x025c045e; 0x30519e8f; 0x045e064c;
	0x001c031e; 0x0000001f; 0x300000ff; 0x002604f0;
	0x02a004ee; 0x02a105d7; 0x300000ff; 0x05d704ee;
	0x059105d8; 0x300000ff; 0x05d805d7; 0x010305d9;
	0x300000ff; 0x05d905d8; 0x059405db; 0x300000ff;
	0x05db05d9; 0x02c905de; 0x300000ff; 0x05de05db;
	0x02cb05df; 0x300000ff; 0x05df05de; 0x002d0472;
	0x300000ff; 0x047205df; 0x02cc0660; 0x300000ff;
	0x06600472; 0x02cd0470; 0x300000ff; 0x04700660;
	0x05ad065e; 0x300000ff; 0x065e0470; 0x0115046b;
	0x300000ff; 0x046b065e; 0x05af065d; 0x300000ff;
	0x065d046b; 0x03240469; 0x300000ff; 0x0469065d;
	0x0325065f; 0x300000ff; 0x065f0469; 0x003d0341;
	0x300000ff; 0x0341065f; 0x032702e2; 0x300000ff;
	0x02e20341; 0x0326033f; 0x300000ff; 0x033f02e2;
	0x05d102df; 0x300000ff; 0x02df033f; 0x012e033a;
	0x300000ff; 0x033a02df; 0x05d202d8; 0x300000ff;
	0x02d8033a; 0x032c0338; 0x300000ff; 0x033802d8;
	0x032d0266; 0x300000ff; 0x02660338; 0x003e0329;
	0x300000ff; 0x03290266; 0x032b024c; 0x300000ff;
	0x024c0329; 0x032a0378; 0x300000ff; 0x0378024c;
	0x05ca024a; 0x300000ff; 0x024a0378; 0x01290375;
	0x300000ff; 0x0375024a; 0x05c80240; 0x300000ff;
	0x02400375; 0x03160373; 0x300000ff; 0x03730240;
	0x03150357; 0x300000ff; 0x03570373; 0x003a0356;
	0x0000001d; 0x300000ff; 0x02a004ee; 0x010204e9;
	0x059105d8; 0x300000ff; 0x05d804e9; 0x059205da;
	0x300000ff; 0x05da05d8; 0x059405db; 0x300000ff;
	0x05db05da; 0x011205dc; 0x300000ff; 0x05dc05db;
	0x02cb05df; 0x300000ff; 0x05df05dc; 0x05ab0662;
	0x300000ff; 0x066205df; 0x02cc0660; 0x300000ff;
	0x06600662; 0x0114065c; 0x300000ff; 0x065c0660;
	0x05ad065e; 0x300000ff; 0x065e065c; 0x05ae065a;
	0x300000ff; 0x065a065e; 0x05af065d; 0x300000ff;
	0x065d065a; 0x012c065b; 0x300000ff; 0x065b065d;
	0x0325065f; 0x300000ff; 0x065f065b; 0x05cf02e4;
	0x300000ff; 0x02e4065f; 0x032702e2; 0x300000ff;
	0x02e202e4; 0x012f02d7; 0x300000ff; 0x02d702e2;
	0x05d102df; 0x300000ff; 0x02df02d7; 0x05d302d5;
	0x300000ff; 0x02d502df; 0x05d202d8; 0x300000ff;
	0x02d802d5; 0x0130025f; 0x300000ff; 0x025f02d8;
	0x032d0266; 0x300000ff; 0x0266025f; 0x05cc025d;
	0x300000ff; 0x025d0266; 0x032b024c; 0x300000ff;
	0x024c025d; 0x012a023f; 0x300000ff; 0x023f024c;
	0x05ca024a; 0x300000ff; 0x024a023f; 0x05c9023e;
	0x300000ff; 0x023e024a; 0x05c80240; 0x300000ff;
	0x0240023e; 0x0128035a; 0x300000ff; 0x035a0240;
	0x03150357; 0x0000001b; 0x300000ff; 0x010204e9;
	0x02c404e6; 0x059205da; 0x300000ff; 0x05da04e6;
	0x02c505dd; 0x300000ff; 0x05dd05da; 0x011205dc;
	0x300000ff; 0x05dc05dd; 0x05aa0663; 0x300000ff;
	0x066305dc; 0x05ab0662; 0x300000ff; 0x06620663;
	0x05ac0661; 0x300000ff; 0x06610662; 0x0114065c;
	0x300000ff; 0x065c0661; 0x031f0659; 0x300000ff;
	0x0659065c; 0x05ae065a; 0x300000ff; 0x065a0659;
	0x03200658; 0x300000ff; 0x0658065a; 0x012c065b;
	0x300000ff; 0x065b0658; 0x05ce02e5; 0x300000ff;
	0x02e5065b; 0x05cf02e4; 0x300000ff; 0x02e402e5;
	0x05d002e3; 0x300000ff; 0x02e302e4; 0x012f02d7;
	0x300000ff; 0x02d702e3; 0x033202c7; 0x300000ff;
	0x02c702d7; 0x05d302d5; 0x300000ff; 0x02d502c7;
	0x0333026f; 0x300000ff; 0x026f02d5; 0x0130025f;
	0x300000ff; 0x025f026f; 0x05cd025e; 0x300000ff;
	0x025e025f; 0x05cc025d; 0x300000ff; 0x025d025e;
	0x05cb024e; 0x300000ff; 0x024e025d; 0x012a023f;
	0x300000ff; 0x023f024e; 0x031a023a; 0x300000ff;
	0x023a023f; 0x05c9023e; 0x300000ff; 0x023e023a;
	0x0319035e; 0x300000ff; 0x035e023e; 0x0128035a;
	0x00000019; 0x300000ff; 0x02c404e6; 0x002c0455;
	0x02c505dd; 0x300000ff; 0x05dd0455; 0x02c60453;
	0x300000ff; 0x045305dd; 0x05aa0663; 0x300000ff;
	0x06630453; 0x0113044e; 0x300000ff; 0x044e0663;
	0x05ac0661; 0x300000ff; 0x0661044e; 0x031e044b;
	0x300000ff; 0x044b0661; 0x031f0659; 0x300000ff;
	0x0659044b; 0x003c031b; 0x300000ff; 0x031b0659;
	0x03200658; 0x300000ff; 0x0658031b; 0x03210319;
	0x300000ff; 0x03190658; 0x05ce02e5; 0x300000ff;
	0x02e50319; 0x012d0314; 0x300000ff; 0x031402e5;
	0x05d002e3; 0x300000ff; 0x02e30314; 0x03310311;
	0x300000ff; 0x031102e3; 0x033202c7; 0x300000ff;
	0x02c70311; 0x003f0310; 0x300000ff; 0x031002c7;
	0x0333026f; 0x300000ff; 0x026f0310; 0x0330034a;
	0x300000ff; 0x034a026f; 0x05cd025e; 0x300000ff;
	0x025e034a; 0x012b0346; 0x300000ff; 0x0346025e;
	0x05cb024e; 0x300000ff; 0x024e0346; 0x031b0343;
	0x300000ff; 0x0343024e; 0x031a023a; 0x300000ff;
	0x023a0343; 0x003b0342; 0x300000ff; 0x0342023a;
	0x0319035e; 0x00000007; 0x30519e8f; 0x002604f0;
	0x02a105d7; 0x029f05e0; 0x30519e8f; 0x05e005d7;
	0x058e05e1; 0x30519e8f; 0x05e105e0; 0x010105e2;
	0x30519e8f; 0x05e205e1; 0x059005e4; 0x30519e8f;
	0x05e405e2; 0x02b605e5; 0x30519e8f; 0x05e505e4;
	0x02b90508; 0x30519e8f; 0x050805e5; 0x002a0491;
	0x00000005; 0x30519e8f; 0x02a105d7; 0x010305d9;
	0x058e05e1; 0x30519e8f; 0x05e105d9; 0x059305e3;
	0x30519e8f; 0x05e305e1; 0x059005e4; 0x30519e8f;
	0x05e405e3; 0x010e0505; 0x30519e8f; 0x050505e4;
	0x02b90508; 0x00000003; 0x30519e8f; 0x010305d9;
	0x02c905de; 0x059305e3; 0x30519e8f; 0x05e305de;
	0x02ca0503; 0x30519e8f; 0x050305e3; 0x010e0505;
	0x00000007; 0x30519e8f; 0x002804b9; 0x02ac0610;
	0x02ab0611; 0x30519e8f; 0x06110610; 0x05970612;
	0x30519e8f; 0x06120611; 0x01040614; 0x30519e8f;
	0x06140612; 0x05950616; 0x30519e8f; 0x06160614;
	0x02a60618; 0x30519e8f; 0x06180616; 0x02a704d4;
	0x30519e8f; 0x04d40618; 0x002704d6; 0x00000005;
	0x30519e8f; 0x02ac0610; 0x01080613; 0x05970612;
	0x30519e8f; 0x06120613; 0x05990615; 0x30519e8f;
	0x06150612; 0x05950616; 0x30519e8f; 0x06160615;
	0x010504cf; 0x30519e8f; 0x04cf0616; 0x02a704d4;
	0x00000003; 0x30519e8f; 0x01080613; 0x02b30617;
	0x05990615; 0x30519e8f; 0x06150617; 0x02b204cd;
	0x30519e8f; 0x04cd0615; 0x010504cf; 0x00000007;
	0x30519e8f; 0x002704d6; 0x02a90603; 0x02a60618;
	0x30519e8f; 0x06180603; 0x05960619; 0x30519e8f;
	0x06190618; 0x01040614; 0x30519e8f; 0x06140619;
	0x0598061b; 0x30519e8f; 0x061b0614; 0x02ab0611;
	0x30519e8f; 0x0611061b; 0x02ad04e5; 0x30519e8f;
	0x04e50611; 0x002804b9; 0x00000005; 0x30519e8f;
	0x02a90603; 0x01070600; 0x05960619; 0x30519e8f;
	0x06190600; 0x059c061a; 0x30519e8f; 0x061a0619;
	0x0598061b; 0x30519e8f; 0x061b061a; 0x010904e2;
	0x30519e8f; 0x04e2061b; 0x02ad04e5; 0x00000003;
	0x30519e8f; 0x01070600; 0x02be0602; 0x059c061a;
	0x30519e8f; 0x061a0602; 0x02bf04e0; 0x30519e8f;
	0x04e0061a; 0x010904e2; 0x00000007; 0x30519e8f;
	0x001203f0; 0x0228061d; 0x022904a1; 0x30519e8f;
	0x04a1061d; 0x04b00625; 0x30519e8f; 0x062504a1;
	0x009c04a0; 0x30519e8f; 0x04a00625; 0x04a90627;
	0x30519e8f; 0x062704a0; 0x01f604a3; 0x30519e8f;
	0x04a30627; 0x01f5060e; 0x30519e8f; 0x060e04a3;
	0x000904a4; 0x00000005; 0x30519e8f; 0x0228061d;
	0x00980620; 0x04b00625; 0x30519e8f; 0x06250620;
	0x04a80626; 0x30519e8f; 0x06260625; 0x04a90627;
	0x30519e8f; 0x06270626; 0x0095060d; 0x30519e8f;
	0x060d0627; 0x01f5060e; 0x00000003; 0x30519e8f;
	0x00980620; 0x01f00624; 0x04a80626; 0x30519e8f;
	0x06260624; 0x01ed060f; 0x30519e8f; 0x060f0626;
	0x0095060d; 0x00000007; 0x30519e8f; 0x001c031e;
	0x025d064c; 0x025e0652; 0x30519e8f; 0x0652064c;
	0x04e20653; 0x30519e8f; 0x06530652; 0x00e00654;
	0x30519e8f; 0x06540653; 0x04e40656; 0x30519e8f;
	0x06560654; 0x02630657; 0x30519e8f; 0x06570656;
	0x02620465; 0x30519e8f; 0x04650657; 0x001d0337;
	0x00000005; 0x30519e8f; 0x025d064c; 0x00ad064e;
	0x04e20653; 0x30519e8f; 0x0653064e; 0x04e10655;
	0x30519e8f; 0x06550653; 0x04e40656; 0x30519e8f;
	0x06560655; 0x00ae0464; 0x30519e8f; 0x04640656;
	0x02620465; 0x00000003; 0x30519e8f; 0x00ad064e;
	0x02100651; 0x04e10655; 0x30519e8f; 0x06550651;
	0x02110467; 0x30519e8f; 0x04670655; 0x00ae0464;
	0x00000008; 0x30519e8f; 0x002f042c; 0x02d70436;
	0x02d60029; 0x30519e8f; 0x00290436; 0x05b3002a;
	0x30519e8f; 0x002a0029; 0x01180046; 0x30519e8f;
	0x0046002a; 0x05b4004b; 0x30519e8f; 0x004b0046;
	0x02db0065; 0x30519e8f; 0x0065004b; 0x02dd0066;
	0x30519e8f; 0x00660065; 0x003003fb; 0x30519e8f;
	0x03fb0066; 0x02dc03fc; 0x00000008; 0x30519e8f;
	0x02d70436; 0x01190438; 0x05b3002a; 0x30519e8f;
	0x002a0438; 0x05b5004a; 0x30519e8f; 0x004a002a;
	0x05b4004b; 0x30519e8f; 0x004b004a; 0x011b004f;
	0x30519e8f; 0x004f004b; 0x02dd0066; 0x30519e8f;
	0x0066004f; 0x05b6015c; 0x30519e8f; 0x015c0066;
	0x02dc03fc; 0x30519e8f; 0x03fc015c; 0x011a03ff;
	0x00000008; 0x30519e8f; 0x01190438; 0x02ec043b;
	0x05b5004a; 0x30519e8f; 0x004a043b; 0x02ed0050;
	0x30519e8f; 0x0050004a; 0x011b004f; 0x30519e8f;
	0x004f0050; 0x05b80150; 0x30519e8f; 0x0150004f;
	0x05b6015c; 0x30519e8f; 0x015c0150; 0x05b7015b;
	0x30519e8f; 0x015b015c; 0x011a03ff; 0x30519e8f;
	0x03ff015b; 0x02e10404; 0x00000009; 0x30519e8f;
	0x02ec043b; 0x003303e2; 0x02ed0050; 0x30519e8f;
	0x005003e2; 0x02ee002b; 0x30519e8f; 0x002b0050;
	0x05b80150; 0x30519e8f; 0x0150002b; 0x011d004d;
	0x30519e8f; 0x004d0150; 0x05b7015b; 0x30519e8f;
	0x015b004d; 0x02e3008c; 0x30519e8f; 0x008c015b;
	0x02e10404; 0x30519e8f; 0x0404008c; 0x00310406;
	0x30519e8f; 0x04060404; 0x02df0405; 0x00000007;
	0x30519e8f; 0x003303e2; 0x02ef03f1; 0x02ee002b;
	0x30519e8f; 0x002b03f1; 0x05bb004c; 0x30519e8f;
	0x004c002b; 0x011d004d; 0x30519e8f; 0x004d004c;
	0x05b9008a; 0x30519e8f; 0x008a004d; 0x02e3008c;
	0x30519e8f; 0x008c008a; 0x02e20633; 0x30519e8f;
	0x0633008c; 0x00310406; 0x00000005; 0x30519e8f;
	0x02ef03f1; 0x011e03f3; 0x05bb004c; 0x30519e8f;
	0x004c03f3; 0x05ba0089; 0x30519e8f; 0x0089004c;
	0x05b9008a; 0x30519e8f; 0x008a0089; 0x011c0630;
	0x30519e8f; 0x0630008a; 0x02e20633; 0x00000003;
	0x30519e8f; 0x011e03f3; 0x02e903f8; 0x05ba0089;
	0x30519e8f; 0x008903f8; 0x02e8062e; 0x30519e8f;
	0x062e0089; 0x011c0630; 0x00000007; 0x30519e8f;
	0x003403bf; 0x02f403dc; 0x02f50236; 0x30519e8f;
	0x023603dc; 0x05be0237; 0x30519e8f; 0x02370236;
	0x012101fc; 0x30519e8f; 0x01fc0237; 0x05c10241;
	0x30519e8f; 0x024101fc; 0x030d01df; 0x30519e8f;
	0x01df0241; 0x03110246; 0x30519e8f; 0x024601df;
	0x00390379; 0x00000005; 0x30519e8f; 0x02f403dc;
	0x012003de; 0x05be0237; 0x30519e8f; 0x023703de;
	0x05bf0239; 0x30519e8f; 0x02390237; 0x05c10241;
	0x30519e8f; 0x02410239; 0x01270242; 0x30519e8f;
	0x02420241; 0x03110246; 0x00000003; 0x30519e8f;
	0x012003de; 0x030803e1; 0x05bf0239; 0x30519e8f;
	0x023903e1; 0x030a0244; 0x30519e8f; 0x02440239;
	0x01270242; 0x00000005; 0x30519e8f; 0x024f038e;
	0x00cd038a; 0x0529025b; 0x30519e8f; 0x025b038a;
	0x0526026a; 0x30519e8f; 0x026a025b; 0x0527026c;
	0x30519e8f; 0x026c026a; 0x00cc0637; 0x30519e8f;
	0x0637026c; 0x02430634; 0x00000003; 0x30519e8f;
	0x00cd038a; 0x023e0388; 0x0526026a; 0x30519e8f;
	0x026a0388; 0x023d063b; 0x30519e8f; 0x063b026a;
	0x00cc0637; 0x00000007; 0x30519e8f; 0x00dd034e;
	0x054a02ca; 0x054702c8; 0x30519e8f; 0x02c802ca;
	0x054802cd; 0x30519e8f; 0x02cd02c8; 0x00dc02c9;
	0x30519e8f; 0x02c902cd; 0x026902e1; 0x30519e8f;
	0x02e102c9; 0x0543022c; 0x30519e8f; 0x022c02e1;
	0x02680372; 0x30519e8f; 0x0372022c; 0x00da036f;
	0x00000007; 0x30519e8f; 0x001b0354; 0x025802c6;
	0x02570360; 0x30519e8f; 0x036002c6; 0x0540022a;
	0x30519e8f; 0x022a0360; 0x00d90362; 0x30519e8f;
	0x0362022a; 0x053e0233; 0x30519e8f; 0x02330362;
	0x02540366; 0x30519e8f; 0x03660233; 0x02550370;
	0x30519e8f; 0x03700366; 0x001a0368;

Poly_0005:	// 0x0000a9a0
	0x30519e8f; 0x0342023c; 0x06c406c6; 0x06db06c5;
	0x30519e8f; 0x03750234; 0x06d106ca; 0x00490235;
	0x30519e8f; 0x03820267; 0x013f0262; 0x05f60274;
	0x30519e8f; 0x01410275; 0x05fb0281; 0x03830273;
	0x30519e8f; 0x004c0268; 0x06d306d5; 0x06d406d9;
	0x30519e8f; 0x033f02f3; 0x00410232; 0x03400230;
	0x30519e8f; 0x034c030c; 0x06cd06df; 0x06c006d1;
	0x30519e8f; 0x034c030c; 0x06c006d1; 0x034e027b;
	0x30519e8f; 0x05560316; 0x05550317; 0x05580313;
	0x30519e8f; 0x05560316; 0x00e20318; 0x05550317;
	0x30519e8f; 0x05670348; 0x05650349; 0x05660345;
	0x30519e8f; 0x05670348; 0x00ec0324; 0x05650349;
	0x30519e8f; 0x02590352; 0x025b0353; 0x0549034f;
	0x30519e8f; 0x054f035c; 0x054c035d; 0x054d0359;
	0x30519e8f; 0x054f035c; 0x00df0351; 0x054c035d;
	0x30519e8f; 0x026c0371; 0x001e0334; 0x026d0332;
	0x30519e8f; 0x023903bb; 0x001503bd; 0x023b03bc;
	0x30519e8f; 0x023703d0; 0x001403d1; 0x023503d9;
	0x30519e8f; 0x024b03da; 0x0018039d; 0x024c039b;
	0x30519e8f; 0x02320434; 0x001303ed; 0x023303eb;
	0x30519e8f; 0x0215044a; 0x000e041f; 0x0216041d;
	0x30519e8f; 0x04de0450; 0x04dd0451; 0x04e0044d;
	0x30519e8f; 0x04de0450; 0x00ab0452; 0x04dd0451;
	0x30519e8f; 0x01f204de; 0x000804bc; 0x01f104bb;
	0x30519e8f; 0x049604eb; 0x049504ec; 0x049804e8;
	0x30519e8f; 0x049604eb; 0x008d04ed; 0x049504ec;
	0x30519e8f; 0x0487050e; 0x0485050f; 0x0489050b;
	0x30519e8f; 0x0487050e; 0x00870510; 0x0485050f;
	0x30519e8f; 0x007d0554; 0x01cc055b; 0x046e0560;
	0x30519e8f; 0x01ba0585; 0x0000055a; 0x01bc0558;
	0x30519e8f; 0x056c0595; 0x056b0596; 0x056d0593;
	0x30519e8f; 0x01c30591; 0x0002054d; 0x01c4054b;
	0x30519e8f; 0x01f905cf; 0x000a0494; 0x01fc0502;
	0x30519e8f; 0x02c905de; 0x002d0472; 0x02ca0503;
	0x30519e8f; 0x02b30617; 0x002904ae; 0x02b204cd;
	0x30519e8f; 0x02be0602; 0x002b0486; 0x02bf04e0;
	0x30519e8f; 0x01f00624; 0x000804bc; 0x01ed060f;
	0x30519e8f; 0x02100651; 0x000d0468; 0x02110467;
	0x30519e8f; 0x02e903f8; 0x003203fa; 0x02e8062e;
	0x30519e8f; 0x030803e1; 0x00380392; 0x030a0244;
	0x30519e8f; 0x023e0388; 0x00160387; 0x023d063b;
	0x30519e8f; 0x001b0354; 0x02590352; 0x025802c6;
	0x30519e8f; 0x00dd034e; 0x026e034c; 0x054a02ca;

SharedPoly_0000:	// 0x0000ac50
	0x30519e8f; 0x000c0000; 0x000b0001; 0x001a0018;
	0x30519e8f; 0x001a0018; 0x000a0002; 0x000c0000;
	0x30519e8f; 0x00030004; 0x00190019; 0x00040005;
	0x30519e8f; 0x00050006; 0x00040005; 0x00190019;
	0x30519e8f; 0x00150007; 0x0021001a; 0x00160008;
	0x30519e8f; 0x00050006; 0x0036001b; 0x00150007;
	0x30519e8f; 0x00050006; 0x00190019; 0x0036001b;
	0x30519e8f; 0x00150007; 0x0036001b; 0x0021001a;
	0x30519e8f; 0x00160008; 0x0021001a; 0x00060009;
	0x30519e8f; 0x0011000e; 0x0023001c; 0x0012000f;
	0x30519e8f; 0x0009000c; 0x003b001d; 0x0011000e;
	0x30519e8f; 0x0009000c; 0x0001000b; 0x003b001d;
	0x30519e8f; 0x0011000e; 0x003b001d; 0x0023001c;
	0x30519e8f; 0x0012000f; 0x003e001e; 0x000d0010;
	0x30519e8f; 0x0012000f; 0x0023001c; 0x003e001e;
	0x30519e8f; 0x000d0010; 0x003e001e; 0x001a0018;
	0x30519e8f; 0x000d0010; 0x001a0018; 0x000b0001;
	0x30519e8f; 0x00400022; 0x00170011; 0x00520020;
	0x30519e8f; 0x00400022; 0x00020003; 0x00170011;
	0x30519e8f; 0x00520020; 0x00170011; 0x00250021;
	0x30519e8f; 0x0037001f; 0x00030004; 0x00400022;
	0x30519e8f; 0x0037001f; 0x00190019; 0x00030004;
	0x30519e8f; 0x00400022; 0x00030004; 0x00020003;
	0x30519e8f; 0x00250021; 0x00170011; 0x003f0023;
	0x30519e8f; 0x00170011; 0x000a0002; 0x003f0023;
	0x30519e8f; 0x003f0023; 0x000a0002; 0x001a0018;
	0x30519e8f; 0x00390029; 0x0000000a; 0x0038002a;
	0x30519e8f; 0x003c002b; 0x003a002c; 0x0001000b;
	0x30519e8f; 0x0001000b; 0x003d002d; 0x003c002b;
	0x30519e8f; 0x000f0013; 0x00220028; 0x00100014;
	0x30519e8f; 0x0007000d; 0x00390029; 0x000f0013;
	0x30519e8f; 0x0007000d; 0x0000000a; 0x00390029;
	0x30519e8f; 0x000f0013; 0x00390029; 0x00220028;
	0x30519e8f; 0x00100014; 0x00410027; 0x000e0015;
	0x30519e8f; 0x00100014; 0x00220028; 0x00410027;
	0x30519e8f; 0x000e0015; 0x00410027; 0x001b0024;
	0x30519e8f; 0x0001000b; 0x00080012; 0x003d002d;
	0x30519e8f; 0x00080012; 0x00130016; 0x003d002d;
	0x30519e8f; 0x003d002d; 0x00130016; 0x0024002e;
	0x30519e8f; 0x00140017; 0x0053002f; 0x00130016;
	0x30519e8f; 0x00140017; 0x00260025; 0x0053002f;
	0x30519e8f; 0x00130016; 0x0053002f; 0x0024002e;
	0x30519e8f; 0x000e0015; 0x00420026; 0x00140017;
	0x30519e8f; 0x000e0015; 0x001b0024; 0x00420026;
	0x30519e8f; 0x00140017; 0x00420026; 0x00260025;
	0x30519e8f; 0x0038002a; 0x00060009; 0x00510030;
	0x30519e8f; 0x0038002a; 0x0000000a; 0x00060009;
	0x30519e8f; 0x00510030; 0x00060009; 0x0021001a;
	0x30519e8f; 0x003a002c; 0x003b001d; 0x0001000b;
	0x30519e8f; 0x00180031; 0x00600054; 0x00290032;
	0x30519e8f; 0x00600054; 0x006e0055; 0x00290032;
	0x30519e8f; 0x00290032; 0x006e0055; 0x00570056;
	0x30519e8f; 0x00290032; 0x00570056; 0x00440033;
	0x30519e8f; 0x00570056; 0x00450034; 0x00440033;
	0x30519e8f; 0x00570056; 0x00630057; 0x00450034;
	0x30519e8f; 0x00630057; 0x00640058; 0x00450034;
	0x30519e8f; 0x00450034; 0x00640058; 0x001e0035;
	0x30519e8f; 0x0058005a; 0x00460036; 0x006f0059;
	0x30519e8f; 0x00460036; 0x00470037; 0x006f0059;
	0x30519e8f; 0x006f0059; 0x00470037; 0x0059005b;
	0x30519e8f; 0x0058005a; 0x002e0038; 0x00460036;
	0x30519e8f; 0x0059005b; 0x00470037; 0x00320039;
	0x30519e8f; 0x0059005b; 0x00320039; 0x0071005c;
	0x30519e8f; 0x00320039; 0x0033003a; 0x0071005c;
	0x30519e8f; 0x0071005c; 0x0033003a; 0x005d005d;
	0x30519e8f; 0x0030003b; 0x0073005f; 0x0031003c;
	0x30519e8f; 0x0030003b; 0x005b0060; 0x0073005f;
	0x30519e8f; 0x0031003c; 0x0073005f; 0x005c0061;
	0x30519e8f; 0x0031003c; 0x005c0061; 0x004a003d;
	0x30519e8f; 0x005c0061; 0x004b003e; 0x004a003d;
	0x30519e8f; 0x005c0061; 0x00660062; 0x004b003e;
	0x30519e8f; 0x00660062; 0x00690063; 0x004b003e;
	0x30519e8f; 0x004b003e; 0x00690063; 0x0020003f;
	0x30519e8f; 0x00540065; 0x002c0040; 0x00620064;
	0x30519e8f; 0x002c0040; 0x00740066; 0x00620064;
	0x30519e8f; 0x002c0040; 0x001d0041; 0x00740066;
	0x30519e8f; 0x001d0041; 0x00750067; 0x00740066;
	0x30519e8f; 0x001d0041; 0x00340042; 0x00750067;
	0x30519e8f; 0x00340042; 0x00350043; 0x00750067;
	0x30519e8f; 0x00750067; 0x00350043; 0x005e0068;
	0x30519e8f; 0x00540065; 0x002b0044; 0x002d0045;
	0x30519e8f; 0x00540065; 0x002d0045; 0x002c0040;
	0x30519e8f; 0x002b0044; 0x00540065; 0x002a0047;
	0x30519e8f; 0x004c0048; 0x005d005d; 0x004d0049;
	0x30519e8f; 0x001e0035; 0x00640058; 0x004c0048;
	0x30519e8f; 0x00640058; 0x0065005e; 0x004c0048;
	0x30519e8f; 0x004c0048; 0x0065005e; 0x005d005d;
	0x30519e8f; 0x004d0049; 0x005d005d; 0x0033003a;
	0x30519e8f; 0x002e0038; 0x0070006a; 0x002f004a;
	0x30519e8f; 0x002e0038; 0x0058005a; 0x0070006a;
	0x30519e8f; 0x002f004a; 0x0070006a; 0x005a006b;
	0x30519e8f; 0x005b0060; 0x0049004b; 0x0072006c;
	0x30519e8f; 0x0049004b; 0x0048004c; 0x0072006c;
	0x30519e8f; 0x0072006c; 0x0048004c; 0x005a006b;
	0x30519e8f; 0x005b0060; 0x0030003b; 0x0049004b;
	0x30519e8f; 0x005a006b; 0x0048004c; 0x002f004a;
	0x30519e8f; 0x00670069; 0x004e004d; 0x0068006d;
	0x30519e8f; 0x00670069; 0x005e0068; 0x004e004d;
	0x30519e8f; 0x0068006d; 0x004e004d; 0x001f004e;
	0x30519e8f; 0x005e0068; 0x004f004f; 0x004e004d;
	0x30519e8f; 0x005e0068; 0x00350043; 0x004f004f;
	0x30519e8f; 0x0068006d; 0x00500050; 0x00690063;
	0x30519e8f; 0x0068006d; 0x001f004e; 0x00500050;
	0x30519e8f; 0x00690063; 0x00500050; 0x0020003f;
	0x30519e8f; 0x0055006e; 0x006b006f; 0x00270051;
	0x30519e8f; 0x006b006f; 0x00280052; 0x00270051;
	0x30519e8f; 0x006b006f; 0x00560070; 0x00280052;
	0x30519e8f; 0x0055006e; 0x00430053; 0x006a0071;
	0x30519e8f; 0x00430053; 0x006c0072; 0x006a0071;
	0x30519e8f; 0x00430053; 0x001c0046; 0x006c0072;
	0x30519e8f; 0x0055006e; 0x00270051; 0x00430053;
	0x30519e8f; 0x006c0072; 0x002a0047; 0x00610073;
	0x30519e8f; 0x006c0072; 0x001c0046; 0x002a0047;
	0x30519e8f; 0x00610073; 0x002a0047; 0x00540065;
	0x30519e8f; 0x00180031; 0x00280052; 0x005f0074;
	0x30519e8f; 0x00280052; 0x006d0075; 0x005f0074;
	0x30519e8f; 0x00280052; 0x00560070; 0x006d0075;
	0x30519e8f; 0x005f0074; 0x00600054; 0x00180031;

Vert_0000:	// 0x0000b3b0
	SVECTOR(   59,    38,    75);	// vert[0]
	SVECTOR(   28,    38,    71);	// vert[1]
	SVECTOR(    1,    37,    37);	// vert[2]
	SVECTOR(   73,    44,    49);	// vert[3]
	SVECTOR(   18,     6,   -40);	// vert[4]
	SVECTOR(   87,    20,   -34);	// vert[5]
	SVECTOR(  109,    47,  -109);	// vert[6]
	SVECTOR(  -49,    47,  -124);	// vert[7]
	SVECTOR(  -23,    38,  -186);	// vert[8]
	SVECTOR(  -67,    35,  -177);	// vert[9]
	SVECTOR(   57,    42,  -177);	// vert[10]
	SVECTOR(    8,    40,  -183);	// vert[11]
	SVECTOR(  120,    41,  -159);	// vert[12]
	SVECTOR(   93,    43,  -172);	// vert[13]
	SVECTOR(  -25,    46,  -280);	// vert[14]
	SVECTOR(  -60,    47,  -278);	// vert[15]
	SVECTOR(  -12,    49,  -246);	// vert[16]
	SVECTOR(  -15,    39,  -214);	// vert[17]
	SVECTOR(  -73,    38,  -206);	// vert[18]
	SVECTOR(  -77,    47,  -235);	// vert[19]
	SVECTOR(   37,    51,  -256);	// vert[20]
	SVECTOR(   60,    44,  -258);	// vert[21]
	SVECTOR(   65,    39,  -210);	// vert[22]
	SVECTOR(   20,    42,  -217);	// vert[23]
	SVECTOR(   19,    47,  -239);	// vert[24]
	SVECTOR(   66,    51,  -230);	// vert[25]
	SVECTOR(  101,    48,  -227);	// vert[26]
	SVECTOR(  115,    49,  -225);	// vert[27]
	SVECTOR(  126,    42,  -186);	// vert[28]
	SVECTOR(   92,    43,  -195);	// vert[29]
	SVECTOR(   93,    50,  -213);	// vert[30]
	SVECTOR(  127,    50,  -204);	// vert[31]
	SVECTOR(   59,    11,    77);	// vert[32]
	SVECTOR(   20,     4,    69);	// vert[33]
	SVECTOR(   -3,   -20,    36);	// vert[34]
	SVECTOR(   76,   -17,    55);	// vert[35]
	SVECTOR(   21,   -37,   -50);	// vert[36]
	SVECTOR(   80,   -34,   -37);	// vert[37]
	SVECTOR(  107,   -13,  -105);	// vert[38]
	SVECTOR(  -46,   -12,  -119);	// vert[39]
	SVECTOR(  -28,     1,  -183);	// vert[40]
	SVECTOR(  -67,     6,  -168);	// vert[41]
	SVECTOR(   53,     5,  -174);	// vert[42]
	SVECTOR(    6,     9,  -180);	// vert[43]
	SVECTOR(  120,    16,  -151);	// vert[44]
	SVECTOR(   92,    13,  -170);	// vert[45]
	SVECTOR(  -24,    19,  -280);	// vert[46]
	SVECTOR(  -67,    13,  -271);	// vert[47]
	SVECTOR(  -11,     8,  -240);	// vert[48]
	SVECTOR(  -17,     6,  -210);	// vert[49]
	SVECTOR(  -71,     5,  -201);	// vert[50]
	SVECTOR(  -77,     8,  -229);	// vert[51]
	SVECTOR(   34,    20,  -259);	// vert[52]
	SVECTOR(   67,    23,  -252);	// vert[53]
	SVECTOR(   64,    14,  -205);	// vert[54]
	SVECTOR(   20,    11,  -213);	// vert[55]
	SVECTOR(   18,    16,  -233);	// vert[56]
	SVECTOR(   66,    13,  -226);	// vert[57]
	SVECTOR(  101,    27,  -227);	// vert[58]
	SVECTOR(  119,    22,  -221);	// vert[59]
	SVECTOR(  125,    17,  -182);	// vert[60]
	SVECTOR(   92,    18,  -192);	// vert[61]
	SVECTOR(   92,    19,  -209);	// vert[62]
	SVECTOR(  128,    19,  -200);	// vert[63]
	SVECTOR(   23,   540,  -133);	// vert[64]
	SVECTOR(   58,   -58,   -40);	// vert[65]
	SVECTOR(   15,   -60,   -43);	// vert[66]
	SVECTOR(   63,     3,   -82);	// vert[67]
	SVECTOR(   49,   307,    32);	// vert[68]
	SVECTOR(   49,   329,   -24);	// vert[69]
	SVECTOR(   14,   318,   -28);	// vert[70]
	SVECTOR(   -3,   324,    20);	// vert[71]
	SVECTOR(   72,   371,    18);	// vert[72]
	SVECTOR(   69,   -65,    -7);	// vert[73]
	SVECTOR(   68,   354,    -4);	// vert[74]
	SVECTOR(   69,   356,    25);	// vert[75]
	SVECTOR(   -8,   -68,   -18);	// vert[76]
	SVECTOR(  -19,   376,    15);	// vert[77]
	SVECTOR(  -19,   359,    14);	// vert[78]
	SVECTOR(   -7,   351,    -7);	// vert[79]
	SVECTOR(   60,    25,    63);	// vert[80]
	SVECTOR(   72,    43,   -57);	// vert[81]
	SVECTOR(  -28,    48,   -61);	// vert[82]
	SVECTOR(  -29,    33,    37);	// vert[83]
	SVECTOR(   25,   531,  -131);	// vert[84]
	SVECTOR(   -2,    75,   -65);	// vert[85]
	SVECTOR(   18,    94,   -65);	// vert[86]
	SVECTOR(   26,    38,   -81);	// vert[87]
	SVECTOR(   94,   167,   132);	// vert[88]
	SVECTOR(  122,   202,   -82);	// vert[89]
	SVECTOR(  -57,   178,  -115);	// vert[90]
	SVECTOR(  -87,   179,    83);	// vert[91]
	SVECTOR(   55,    31,   -79);	// vert[92]
	SVECTOR(  -13,    30,   -82);	// vert[93]
	SVECTOR(  -11,   -30,   -88);	// vert[94]
	SVECTOR(   45,   522,  -126);	// vert[95]
	SVECTOR(   42,    15,   -84);	// vert[96]
	SVECTOR(   10,    26,   -85);	// vert[97]
	SVECTOR(    5,   -16,   -91);	// vert[98]
	SVECTOR(   52,   -11,   -87);	// vert[99]
	SVECTOR(   -7,    12,    48);	// vert[100]
	SVECTOR(   29,     7,    59);	// vert[101]
	SVECTOR(   33,   -21,    57);	// vert[102]
	SVECTOR(   -4,   -16,    45);	// vert[103]
	SVECTOR(  -45,   435,     4);	// vert[104]
	SVECTOR(   75,   470,    12);	// vert[105]
	SVECTOR(   62,   471,  -122);	// vert[106]
	SVECTOR(  -38,   478,  -120);	// vert[107]
	SVECTOR(  -24,   102,    25);	// vert[108]
	SVECTOR(   54,    76,    47);	// vert[109]
	SVECTOR(   57,   125,   -48);	// vert[110]
	SVECTOR(  -14,   133,   -46);	// vert[111]
	SVECTOR(   48,    39,    76);	// vert[112]
	SVECTOR(   66,    42,    71);	// vert[113]
	SVECTOR(   60,    29,    77);	// vert[114]
	SVECTOR(   13,    43,    57);	// vert[115]
	SVECTOR(   45,    49,    63);	// vert[116]
	SVECTOR(   40,    22,    78);	// vert[117]
	SVECTOR(   18,    23,    71);	// vert[118]
	SVECTOR(   31,    46,    37);	// vert[119]
	SVECTOR(    9,    24,     8);	// vert[120]
	SVECTOR(    0,    23,    55);	// vert[121]
	SVECTOR(   -7,    12,    33);	// vert[122]
	SVECTOR(   48,    31,     4);	// vert[123]
	SVECTOR(   78,    29,     9);	// vert[124]
	SVECTOR(   75,    24,    69);	// vert[125]
	SVECTOR(   84,    15,    51);	// vert[126]
	SVECTOR(   65,    25,   -35);	// vert[127]
	SVECTOR(   57,    31,   -74);	// vert[128]
	SVECTOR(  -12,    25,   -86);	// vert[129]
	SVECTOR(    0,    -6,    -1);	// vert[130]
	SVECTOR(    3,   -19,   -44);	// vert[131]
	SVECTOR(  -24,    -5,   -79);	// vert[132]
	SVECTOR(   97,    30,   -71);	// vert[133]
	SVECTOR(   86,     3,    12);	// vert[134]
	SVECTOR(   90,    -8,   -35);	// vert[135]
	SVECTOR(  105,     5,   -71);	// vert[136]
	SVECTOR(   30,    47,  -109);	// vert[137]
	SVECTOR(   72,    50,  -141);	// vert[138]
	SVECTOR(  119,    45,  -140);	// vert[139]
	SVECTOR(  103,    49,  -145);	// vert[140]
	SVECTOR(  120,    18,  -102);	// vert[141]
	SVECTOR(  123,    29,  -130);	// vert[142]
	SVECTOR(  -41,    47,  -158);	// vert[143]
	SVECTOR(  -64,    41,  -155);	// vert[144]
	SVECTOR(   12,    50,  -145);	// vert[145]
	SVECTOR(  -16,    48,  -157);	// vert[146]
	SVECTOR(  -58,    13,  -113);	// vert[147]
	SVECTOR(  -69,    23,  -145);	// vert[148]
	SVECTOR(  -52,    43,  -177);	// vert[149]
	SVECTOR(   -9,    40,  -176);	// vert[150]
	SVECTOR(  -20,    37,  -202);	// vert[151]
	SVECTOR(  -48,    42,  -196);	// vert[152]
	SVECTOR(  -15,    16,  -189);	// vert[153]
	SVECTOR(   -4,    23,  -184);	// vert[154]
	SVECTOR(  -13,    21,  -199);	// vert[155]
	SVECTOR(  -69,    36,  -192);	// vert[156]
	SVECTOR(  -70,    22,  -172);	// vert[157]
	SVECTOR(  -75,    21,  -190);	// vert[158]
	SVECTOR(   20,    46,  -177);	// vert[159]
	SVECTOR(   82,    42,  -166);	// vert[160]
	SVECTOR(   59,    39,  -199);	// vert[161]
	SVECTOR(   37,    44,  -198);	// vert[162]
	SVECTOR(   64,    21,  -180);	// vert[163]
	SVECTOR(   75,    27,  -174);	// vert[164]
	SVECTOR(   65,    26,  -194);	// vert[165]
	SVECTOR(   17,    39,  -200);	// vert[166]
	SVECTOR(    9,    25,  -187);	// vert[167]
	SVECTOR(   13,    26,  -201);	// vert[168]
	SVECTOR(  111,    47,  -161);	// vert[169]
	SVECTOR(  122,    41,  -174);	// vert[170]
	SVECTOR(  122,    30,  -154);	// vert[171]
	SVECTOR(  126,    29,  -171);	// vert[172]
	SVECTOR(  109,    46,  -179);	// vert[173]
	SVECTOR(   93,    42,  -186);	// vert[174]
	SVECTOR(   86,    29,  -175);	// vert[175]
	SVECTOR(   88,    29,  -184);	// vert[176]
	SVECTOR(  -37,    49,  -282);	// vert[177]
	SVECTOR(  -18,    49,  -270);	// vert[178]
	SVECTOR(  -22,    37,  -283);	// vert[179]
	SVECTOR(  -41,    56,  -262);	// vert[180]
	SVECTOR(  -72,    49,  -259);	// vert[181]
	SVECTOR(  -46,    31,  -287);	// vert[182]
	SVECTOR(  -70,    30,  -279);	// vert[183]
	SVECTOR(  -12,    44,  -228);	// vert[184]
	SVECTOR(  -44,    54,  -238);	// vert[185]
	SVECTOR(   -8,    31,  -264);	// vert[186]
	SVECTOR(   -2,    28,  -241);	// vert[187]
	SVECTOR(  -46,    43,  -209);	// vert[188]
	SVECTOR(  -46,    49,  -222);	// vert[189]
	SVECTOR(   -2,    24,  -225);	// vert[190]
	SVECTOR(   -6,    21,  -212);	// vert[191]
	SVECTOR(  -76,    42,  -219);	// vert[192]
	SVECTOR(  -81,    21,  -204);	// vert[193]
	SVECTOR(  -86,    23,  -217);	// vert[194]
	SVECTOR(  -83,    30,  -257);	// vert[195]
	SVECTOR(  -88,    27,  -233);	// vert[196]
	SVECTOR(   50,    50,  -259);	// vert[197]
	SVECTOR(   27,    51,  -250);	// vert[198]
	SVECTOR(   49,    56,  -246);	// vert[199]
	SVECTOR(   31,    39,  -261);	// vert[200]
	SVECTOR(   67,    50,  -248);	// vert[201]
	SVECTOR(   49,    34,  -263);	// vert[202]
	SVECTOR(   66,    33,  -257);	// vert[203]
	SVECTOR(   47,    45,  -211);	// vert[204]
	SVECTOR(   65,    44,  -218);	// vert[205]
	SVECTOR(   69,    26,  -207);	// vert[206]
	SVECTOR(   72,    27,  -216);	// vert[207]
	SVECTOR(   19,    46,  -228);	// vert[208]
	SVECTOR(   42,    50,  -222);	// vert[209]
	SVECTOR(   12,    26,  -216);	// vert[210]
	SVECTOR(   11,    28,  -227);	// vert[211]
	SVECTOR(   37,    55,  -234);	// vert[212]
	SVECTOR(   20,    34,  -250);	// vert[213]
	SVECTOR(   13,    31,  -237);	// vert[214]
	SVECTOR(   73,    34,  -243);	// vert[215]
	SVECTOR(   74,    31,  -227);	// vert[216]
	SVECTOR(  106,    51,  -228);	// vert[217]
	SVECTOR(   97,    51,  -223);	// vert[218]
	SVECTOR(  101,    41,  -228);	// vert[219]
	SVECTOR(  107,    56,  -219);	// vert[220]
	SVECTOR(  122,    51,  -216);	// vert[221]
	SVECTOR(  110,    36,  -229);	// vert[222]
	SVECTOR(  120,    36,  -225);	// vert[223]
	SVECTOR(  110,    47,  -190);	// vert[224]
	SVECTOR(  128,    46,  -195);	// vert[225]
	SVECTOR(  131,    29,  -184);	// vert[226]
	SVECTOR(  134,    31,  -193);	// vert[227]
	SVECTOR(   92,    47,  -203);	// vert[228]
	SVECTOR(  110,    51,  -198);	// vert[229]
	SVECTOR(   86,    30,  -194);	// vert[230]
	SVECTOR(   86,    31,  -202);	// vert[231]
	SVECTOR(  109,    55,  -207);	// vert[232]
	SVECTOR(   93,    36,  -221);	// vert[233]
	SVECTOR(   87,    34,  -211);	// vert[234]
	SVECTOR(  128,    36,  -214);	// vert[235]
	SVECTOR(  133,    34,  -202);	// vert[236]
	SVECTOR(   42,     3,    76);	// vert[237]
	SVECTOR(   69,    -1,    72);	// vert[238]
	SVECTOR(    8,    -4,    57);	// vert[239]
	SVECTOR(   44,   -11,    69);	// vert[240]
	SVECTOR(   36,   -24,    57);	// vert[241]
	SVECTOR(    0,   -29,    -5);	// vert[242]
	SVECTOR(   61,   -12,   -83);	// vert[243]
	SVECTOR(   -2,   -40,    26);	// vert[244]
	SVECTOR(   83,   -27,     8);	// vert[245]
	SVECTOR(   41,    32,   -81);	// vert[246]
	SVECTOR(   61,   -38,   -56);	// vert[247]
	SVECTOR(   57,   -29,   -79);	// vert[248]
	SVECTOR(   -1,   -24,   -81);	// vert[249]
	SVECTOR(   42,   -47,   -50);	// vert[250]
	SVECTOR(   17,   -48,   -42);	// vert[251]
	SVECTOR(    1,   -44,   -11);	// vert[252]
	SVECTOR(   92,   -23,   -68);	// vert[253]
	SVECTOR(   74,   -45,     3);	// vert[254]
	SVECTOR(   65,   -47,   -36);	// vert[255]
	SVECTOR(   31,   -18,  -110);	// vert[256]
	SVECTOR(   72,    -6,  -141);	// vert[257]
	SVECTOR(  119,     5,  -132);	// vert[258]
	SVECTOR(  103,     0,  -145);	// vert[259]
	SVECTOR(  -41,    -6,  -157);	// vert[260]
	SVECTOR(  -64,     0,  -146);	// vert[261]
	SVECTOR(   12,    -6,  -145);	// vert[262]
	SVECTOR(  -16,    -3,  -156);	// vert[263]
	SVECTOR(  -52,    -2,  -175);	// vert[264]
	SVECTOR(  -14,     5,  -176);	// vert[265]
	SVECTOR(  -22,     5,  -198);	// vert[266]
	SVECTOR(  -48,     0,  -194);	// vert[267]
	SVECTOR(  -67,     5,  -187);	// vert[268]
	SVECTOR(   20,     3,  -176);	// vert[269]
	SVECTOR(   78,     9,  -166);	// vert[270]
	SVECTOR(   58,    11,  -194);	// vert[271]
	SVECTOR(   36,     7,  -196);	// vert[272]
	SVECTOR(   18,    12,  -195);	// vert[273]
	SVECTOR(  111,     9,  -159);	// vert[274]
	SVECTOR(  121,    17,  -169);	// vert[275]
	SVECTOR(  109,    13,  -177);	// vert[276]
	SVECTOR(   93,    17,  -182);	// vert[277]
	SVECTOR(  -45,    12,  -280);	// vert[278]
	SVECTOR(  -15,    11,  -263);	// vert[279]
	SVECTOR(  -42,     4,  -260);	// vert[280]
	SVECTOR(  -74,    10,  -251);	// vert[281]
	SVECTOR(  -13,     6,  -223);	// vert[282]
	SVECTOR(  -44,     2,  -236);	// vert[283]
	SVECTOR(  -46,     0,  -207);	// vert[284]
	SVECTOR(  -46,     1,  -220);	// vert[285]
	SVECTOR(  -75,     6,  -214);	// vert[286]
	SVECTOR(   55,    17,  -257);	// vert[287]
	SVECTOR(   25,    16,  -245);	// vert[288]
	SVECTOR(   49,    10,  -245);	// vert[289]
	SVECTOR(   68,    16,  -242);	// vert[290]
	SVECTOR(   47,     8,  -210);	// vert[291]
	SVECTOR(   65,    13,  -215);	// vert[292]
	SVECTOR(   19,    13,  -225);	// vert[293]
	SVECTOR(   42,     8,  -221);	// vert[294]
	SVECTOR(   37,     9,  -232);	// vert[295]
	SVECTOR(  109,    21,  -226);	// vert[296]
	SVECTOR(   95,    21,  -220);	// vert[297]
	SVECTOR(  107,    15,  -217);	// vert[298]
	SVECTOR(  124,    20,  -211);	// vert[299]
	SVECTOR(  110,    13,  -188);	// vert[300]
	SVECTOR(  128,    18,  -191);	// vert[301]
	SVECTOR(   92,    18,  -200);	// vert[302]
	SVECTOR(  110,    14,  -197);	// vert[303]
	SVECTOR(  109,    14,  -206);	// vert[304]
	SVECTOR(   66,   -54,    -6);	// vert[305]
	SVECTOR(   72,   531,   -28);	// vert[306]
	SVECTOR(   52,   355,    43);	// vert[307]
	SVECTOR(   26,   361,    41);	// vert[308]
	SVECTOR(   70,   377,    31);	// vert[309]
	SVECTOR(   58,    17,   -82);	// vert[310]
	SVECTOR(   67,   365,    37);	// vert[311]
	SVECTOR(   36,   -59,   -48);	// vert[312]
	SVECTOR(   40,    27,   -83);	// vert[313]
	SVECTOR(   66,   -63,   -19);	// vert[314]
	SVECTOR(   54,    14,   -83);	// vert[315]
	SVECTOR(    0,   -53,   -18);	// vert[316]
	SVECTOR(   12,    34,   -83);	// vert[317]
	SVECTOR(   28,    30,   -83);	// vert[318]
	SVECTOR(    1,   -63,   -30);	// vert[319]
	SVECTOR(   -3,   366,    32);	// vert[320]
	SVECTOR(  -11,   -58,    -4);	// vert[321]
	SVECTOR(   39,   536,     3);	// vert[322]
	SVECTOR(  -18,   368,    25);	// vert[323]
	SVECTOR(   56,   308,    -2);	// vert[324]
	SVECTOR(   20,   308,    36);	// vert[325]
	SVECTOR(   61,   341,    11);	// vert[326]
	SVECTOR(   63,   348,    29);	// vert[327]
	SVECTOR(   12,   200,    40);	// vert[328]
	SVECTOR(   49,   169,    37);	// vert[329]
	SVECTOR(   61,   210,    -3);	// vert[330]
	SVECTOR(   34,   314,   -33);	// vert[331]
	SVECTOR(   59,   347,   -12);	// vert[332]
	SVECTOR(   54,   245,   -31);	// vert[333]
	SVECTOR(    0,   308,   -11);	// vert[334]
	SVECTOR(   60,    -9,   -85);	// vert[335]
	SVECTOR(    0,   346,   -15);	// vert[336]
	SVECTOR(   35,   217,   -45);	// vert[337]
	SVECTOR(    3,   216,   -40);	// vert[338]
	SVECTOR(  -13,   352,    18);	// vert[339]
	SVECTOR(   -6,   344,     1);	// vert[340]
	SVECTOR(  -13,   207,    20);	// vert[341]
	SVECTOR(  -14,   214,   -15);	// vert[342]
	SVECTOR(  -25,   -21,   -85);	// vert[343]
	SVECTOR(   72,   364,     6);	// vert[344]
	SVECTOR(   72,   364,    22);	// vert[345]
	SVECTOR(   57,     4,   -84);	// vert[346]
	SVECTOR(   70,   352,    12);	// vert[347]
	SVECTOR(  -17,     0,   -87);	// vert[348]
	SVECTOR(  -25,    -4,   -85);	// vert[349]
	SVECTOR(   76,   508,   -27);	// vert[350]
	SVECTOR(  -21,   370,    16);	// vert[351]
	SVECTOR(  -14,   353,     2);	// vert[352]
	SVECTOR(   75,    33,    18);	// vert[353]
	SVECTOR(   16,    34,    57);	// vert[354]
	SVECTOR(   70,    -1,    50);	// vert[355]
	SVECTOR(   21,    24,    58);	// vert[356]
	SVECTOR(   44,    16,    65);	// vert[357]
	SVECTOR(   56,    -2,    65);	// vert[358]
	SVECTOR(   57,    44,    51);	// vert[359]
	SVECTOR(   22,    56,   -71);	// vert[360]
	SVECTOR(   77,     1,    -2);	// vert[361]
	SVECTOR(   77,   -10,   -57);	// vert[362]
	SVECTOR(   60,    35,   -75);	// vert[363]
	SVECTOR(   25,    47,   -76);	// vert[364]
	SVECTOR(   72,     2,   -76);	// vert[365]
	SVECTOR(   73,    58,     2);	// vert[366]
	SVECTOR(   61,    70,   -49);	// vert[367]
	SVECTOR(  -42,    36,    -4);	// vert[368]
	SVECTOR(  -36,     0,   -66);	// vert[369]
	SVECTOR(  -43,     3,   -22);	// vert[370]
	SVECTOR(  -16,    36,   -78);	// vert[371]
	SVECTOR(  -37,    63,   -16);	// vert[372]
	SVECTOR(   19,    75,   -67);	// vert[373]
	SVECTOR(  -19,    78,   -56);	// vert[374]
	SVECTOR(  -42,     7,    23);	// vert[375]
	SVECTOR(  -19,    19,    45);	// vert[376]
	SVECTOR(  -28,    54,    29);	// vert[377]
	SVECTOR(   11,    48,    55);	// vert[378]
	SVECTOR(  -21,   -21,   -86);	// vert[379]
	SVECTOR(  -27,    90,   -37);	// vert[380]
	SVECTOR(   46,   -27,    58);	// vert[381]
	SVECTOR(   60,   534,    -5);	// vert[382]
	SVECTOR(   76,   528,   -58);	// vert[383]
	SVECTOR(   33,   536,  -131);	// vert[384]
	SVECTOR(    9,    36,   -82);	// vert[385]
	SVECTOR(   63,   528,  -112);	// vert[386]
	SVECTOR(   72,   527,   -88);	// vert[387]
	SVECTOR(  -28,    -2,   -83);	// vert[388]
	SVECTOR(   -5,   520,  -131);	// vert[389]
	SVECTOR(   18,   544,  -135);	// vert[390]
	SVECTOR(   19,   520,  -132);	// vert[391]
	SVECTOR(  -25,   522,  -122);	// vert[392]
	SVECTOR(  -30,    -5,    39);	// vert[393]
	SVECTOR(   11,   497,  -136);	// vert[394]
	SVECTOR(  -19,   -24,    40);	// vert[395]
	SVECTOR(  -34,   527,   -23);	// vert[396]
	SVECTOR(   13,   536,     3);	// vert[397]
	SVECTOR(  -44,   528,   -77);	// vert[398]
	SVECTOR(  136,   150,    17);	// vert[399]
	SVECTOR(   26,   101,    28);	// vert[400]
	SVECTOR(  -31,   151,   134);	// vert[401]
	SVECTOR(   30,   303,   118);	// vert[402]
	SVECTOR(  115,   306,    86);	// vert[403]
	SVECTOR(   62,   150,  -113);	// vert[404]
	SVECTOR(  129,   307,   -36);	// vert[405]
	SVECTOR(   95,   303,  -128);	// vert[406]
	SVECTOR( -105,   153,    22);	// vert[407]
	SVECTOR(  -93,   306,   -66);	// vert[408]
	SVECTOR(    7,   303,  -156);	// vert[409]
	SVECTOR(  -53,   354,  -139);	// vert[410]
	SVECTOR(  -94,   257,    68);	// vert[411]
	SVECTOR(   25,    41,   -79);	// vert[412]
	SVECTOR(   66,     2,   -80);	// vert[413]
	SVECTOR(   52,    25,   -82);	// vert[414]
	SVECTOR(   27,    35,   -82);	// vert[415]
	SVECTOR(   61,     4,   -83);	// vert[416]
	SVECTOR(  -21,    -9,   -87);	// vert[417]
	SVECTOR(   -2,    29,   -84);	// vert[418]
	SVECTOR(  -13,     4,   -88);	// vert[419]
	SVECTOR(  -37,   526,  -102);	// vert[420]
	SVECTOR(   -5,   -25,   -90);	// vert[421]
	SVECTOR(   26,   -33,   -89);	// vert[422]
	SVECTOR(   54,   -22,   -86);	// vert[423]
	SVECTOR(   27,    23,   -85);	// vert[424]
	SVECTOR(   26,     1,   -88);	// vert[425]
	SVECTOR(   51,     2,   -86);	// vert[426]
	SVECTOR(    1,    10,   -88);	// vert[427]
	SVECTOR(   35,   -20,   -89);	// vert[428]
	SVECTOR(   16,    13,    55);	// vert[429]
	SVECTOR(  -10,    -4,    44);	// vert[430]
	SVECTOR(   36,    -4,    59);	// vert[431]
	SVECTOR(   12,    -4,    52);	// vert[432]
	SVECTOR(    9,   -22,    49);	// vert[433]
	SVECTOR(   25,   469,    37);	// vert[434]
	SVECTOR(  -56,   465,   -79);	// vert[435]
	SVECTOR(   89,   464,   -59);	// vert[436]
	SVECTOR(   -3,   459,  -141);	// vert[437]
	SVECTOR(   11,    94,    50);	// vert[438]
	SVECTOR(  -29,   113,   -16);	// vert[439]
	SVECTOR(   68,   105,     0);	// vert[440]
	SVECTOR(   14,   122,   -60);	// vert[441]
	SVECTOR(   56,    38,    76);	// vert[442]
	SVECTOR(   62,    39,    74);	// vert[443]
	SVECTOR(   60,    35,    76);	// vert[444]
	SVECTOR(   38,    39,    74);	// vert[445]
	SVECTOR(   21,    41,    65);	// vert[446]
	SVECTOR(   34,    45,    68);	// vert[447]
	SVECTOR(   33,    31,    75);	// vert[448]
	SVECTOR(   22,    32,    71);	// vert[449]
	SVECTOR(    6,    42,    46);	// vert[450]
	SVECTOR(   13,    43,    36);	// vert[451]
	SVECTOR(    4,    32,    24);	// vert[452]
	SVECTOR(   -1,    32,    45);	// vert[453]
	SVECTOR(   -4,    26,    34);	// vert[454]
	SVECTOR(   70,    44,    62);	// vert[455]
	SVECTOR(   59,    49,    57);	// vert[456]
	SVECTOR(   52,    47,    42);	// vert[457]
	SVECTOR(   61,    40,    27);	// vert[458]
	SVECTOR(   76,    36,    30);	// vert[459]
	SVECTOR(   77,    34,    61);	// vert[460]
	SVECTOR(   81,    30,    50);	// vert[461]
	SVECTOR(   16,    14,   -12);	// vert[462]
	SVECTOR(   35,    19,   -17);	// vert[463]
	SVECTOR(   45,    18,   -37);	// vert[464]
	SVECTOR(   36,    19,   -58);	// vert[465]
	SVECTOR(    5,    14,   -66);	// vert[466]
	SVECTOR(    8,     0,   -21);	// vert[467]
	SVECTOR(    6,    -7,   -42);	// vert[468]
	SVECTOR(   -4,     0,   -61);	// vert[469]
	SVECTOR(   82,    24,   -12);	// vert[470]
	SVECTOR(   79,    26,   -34);	// vert[471]
	SVECTOR(   92,    25,   -53);	// vert[472]
	SVECTOR(   86,    13,   -11);	// vert[473]
	SVECTOR(   90,     7,   -34);	// vert[474]
	SVECTOR(   96,    14,   -53);	// vert[475]
	SVECTOR(   82,    41,   -90);	// vert[476]
	SVECTOR(  103,    37,   -88);	// vert[477]
	SVECTOR(   71,    48,  -107);	// vert[478]
	SVECTOR(   89,    50,  -124);	// vert[479]
	SVECTOR(  117,    46,  -126);	// vert[480]
	SVECTOR(  107,    50,  -129);	// vert[481]
	SVECTOR(  117,    34,  -103);	// vert[482]
	SVECTOR(  120,    38,  -119);	// vert[483]
	SVECTOR(  -31,    36,  -104);	// vert[484]
	SVECTOR(  -10,    47,  -114);	// vert[485]
	SVECTOR(  -48,    48,  -142);	// vert[486]
	SVECTOR(  -60,    44,  -140);	// vert[487]
	SVECTOR(  -16,    50,  -133);	// vert[488]
	SVECTOR(  -33,    50,  -141);	// vert[489]
	SVECTOR(  -56,    30,  -116);	// vert[490]
	SVECTOR(  -64,    35,  -133);	// vert[491]
	SVECTOR(  -32,    44,  -173);	// vert[492]
	SVECTOR(  -39,    43,  -181);	// vert[493]
	SVECTOR(  -17,    39,  -179);	// vert[494]
	SVECTOR(  -22,    37,  -195);	// vert[495]
	SVECTOR(  -35,    41,  -191);	// vert[496]
	SVECTOR(  -16,    27,  -189);	// vert[497]
	SVECTOR(  -12,    31,  -185);	// vert[498]
	SVECTOR(  -17,    29,  -193);	// vert[499]
	SVECTOR(  -65,    38,  -167);	// vert[500]
	SVECTOR(  -62,    40,  -176);	// vert[501]
	SVECTOR(  -68,    36,  -185);	// vert[502]
	SVECTOR(  -70,    30,  -174);	// vert[503]
	SVECTOR(  -72,    29,  -184);	// vert[504]
	SVECTOR(   62,    47,  -158);	// vert[505]
	SVECTOR(   37,    47,  -161);	// vert[506]
	SVECTOR(   36,    45,  -176);	// vert[507]
	SVECTOR(   71,    42,  -169);	// vert[508]
	SVECTOR(   57,    40,  -190);	// vert[509]
	SVECTOR(   46,    43,  -188);	// vert[510]
	SVECTOR(   63,    31,  -180);	// vert[511]
	SVECTOR(   68,    34,  -175);	// vert[512]
	SVECTOR(   62,    33,  -186);	// vert[513]
	SVECTOR(   -2,    45,  -171);	// vert[514]
	SVECTOR(    0,    40,  -178);	// vert[515]
	SVECTOR(   12,    44,  -180);	// vert[516]
	SVECTOR(   14,    40,  -191);	// vert[517]
	SVECTOR(    8,    33,  -186);	// vert[518]
	SVECTOR(   11,    33,  -192);	// vert[519]
	SVECTOR(  119,    43,  -151);	// vert[520]
	SVECTOR(  117,    44,  -159);	// vert[521]
	SVECTOR(  121,    41,  -166);	// vert[522]
	SVECTOR(  122,    36,  -156);	// vert[523]
	SVECTOR(  123,    36,  -165);	// vert[524]
	SVECTOR(   98,    47,  -159);	// vert[525]
	SVECTOR(   89,    43,  -167);	// vert[526]
	SVECTOR(  103,    46,  -165);	// vert[527]
	SVECTOR(  101,    45,  -175);	// vert[528]
	SVECTOR(   93,    42,  -179);	// vert[529]
	SVECTOR(   88,    36,  -174);	// vert[530]
	SVECTOR(   89,    36,  -178);	// vert[531]
	SVECTOR(  -28,    48,  -281);	// vert[532]
	SVECTOR(  -22,    48,  -277);	// vert[533]
	SVECTOR(  -24,    43,  -281);	// vert[534]
	SVECTOR(  -49,    49,  -281);	// vert[535]
	SVECTOR(  -53,    53,  -271);	// vert[536]
	SVECTOR(  -66,    49,  -270);	// vert[537]
	SVECTOR(  -55,    40,  -284);	// vert[538]
	SVECTOR(  -66,    40,  -279);	// vert[539]
	SVECTOR(  -15,    49,  -259);	// vert[540]
	SVECTOR(  -26,    54,  -253);	// vert[541]
	SVECTOR(  -12,    47,  -236);	// vert[542]
	SVECTOR(  -26,    53,  -242);	// vert[543]
	SVECTOR(   -7,    40,  -255);	// vert[544]
	SVECTOR(   -5,    39,  -243);	// vert[545]
	SVECTOR(  -17,    37,  -208);	// vert[546]
	SVECTOR(  -14,    41,  -221);	// vert[547]
	SVECTOR(  -30,    42,  -211);	// vert[548]
	SVECTOR(  -29,    45,  -217);	// vert[549]
	SVECTOR(   -6,    32,  -219);	// vert[550]
	SVECTOR(   -8,    30,  -213);	// vert[551]
	SVECTOR(  -61,    41,  -201);	// vert[552]
	SVECTOR(  -71,    37,  -199);	// vert[553]
	SVECTOR(  -61,    42,  -207);	// vert[554]
	SVECTOR(  -75,    39,  -212);	// vert[555]
	SVECTOR(  -79,    30,  -205);	// vert[556]
	SVECTOR(  -82,    31,  -211);	// vert[557]
	SVECTOR(  -75,    49,  -247);	// vert[558]
	SVECTOR(  -62,    52,  -237);	// vert[559]
	SVECTOR(  -63,    50,  -227);	// vert[560]
	SVECTOR(  -77,    45,  -226);	// vert[561]
	SVECTOR(  -83,    40,  -246);	// vert[562]
	SVECTOR(  -85,    38,  -234);	// vert[563]
	SVECTOR(   42,    51,  -258);	// vert[564]
	SVECTOR(   33,    51,  -254);	// vert[565]
	SVECTOR(   41,    54,  -253);	// vert[566]
	SVECTOR(   34,    47,  -259);	// vert[567]
	SVECTOR(   57,    48,  -259);	// vert[568]
	SVECTOR(   64,    48,  -255);	// vert[569]
	SVECTOR(   56,    40,  -261);	// vert[570]
	SVECTOR(   64,    40,  -258);	// vert[571]
	SVECTOR(   62,    39,  -205);	// vert[572]
	SVECTOR(   58,    43,  -210);	// vert[573]
	SVECTOR(   65,    41,  -214);	// vert[574]
	SVECTOR(   68,    33,  -208);	// vert[575]
	SVECTOR(   70,    34,  -213);	// vert[576]
	SVECTOR(   28,    43,  -208);	// vert[577]
	SVECTOR(   18,    40,  -209);	// vert[578]
	SVECTOR(   34,    45,  -214);	// vert[579]
	SVECTOR(   19,    44,  -223);	// vert[580]
	SVECTOR(   30,    47,  -220);	// vert[581]
	SVECTOR(   14,    34,  -216);	// vert[582]
	SVECTOR(   13,    35,  -222);	// vert[583]
	SVECTOR(   23,    49,  -244);	// vert[584]
	SVECTOR(   19,    47,  -233);	// vert[585]
	SVECTOR(   26,    52,  -236);	// vert[586]
	SVECTOR(   18,    41,  -244);	// vert[587]
	SVECTOR(   15,    40,  -238);	// vert[588]
	SVECTOR(   57,    55,  -238);	// vert[589]
	SVECTOR(   67,    51,  -240);	// vert[590]
	SVECTOR(   66,    47,  -223);	// vert[591]
	SVECTOR(   55,    51,  -225);	// vert[592]
	SVECTOR(   51,    54,  -231);	// vert[593]
	SVECTOR(   72,    43,  -236);	// vert[594]
	SVECTOR(   72,    41,  -228);	// vert[595]
	SVECTOR(  103,    49,  -227);	// vert[596]
	SVECTOR(  100,    49,  -226);	// vert[597]
	SVECTOR(  101,    46,  -227);	// vert[598]
	SVECTOR(  111,    51,  -227);	// vert[599]
	SVECTOR(  112,    54,  -222);	// vert[600]
	SVECTOR(  119,    51,  -221);	// vert[601]
	SVECTOR(  114,    43,  -228);	// vert[602]
	SVECTOR(  118,    43,  -225);	// vert[603]
	SVECTOR(  124,    42,  -180);	// vert[604]
	SVECTOR(  118,    45,  -182);	// vert[605]
	SVECTOR(  119,    45,  -188);	// vert[606]
	SVECTOR(  127,    44,  -190);	// vert[607]
	SVECTOR(  130,    36,  -185);	// vert[608]
	SVECTOR(  131,    37,  -189);	// vert[609]
	SVECTOR(   92,    42,  -191);	// vert[610]
	SVECTOR(  100,    46,  -192);	// vert[611]
	SVECTOR(   92,    45,  -199);	// vert[612]
	SVECTOR(  100,    48,  -197);	// vert[613]
	SVECTOR(   88,    37,  -194);	// vert[614]
	SVECTOR(   87,    38,  -199);	// vert[615]
	SVECTOR(   95,    51,  -218);	// vert[616]
	SVECTOR(  100,    55,  -215);	// vert[617]
	SVECTOR(   92,    49,  -208);	// vert[618]
	SVECTOR(  100,    54,  -210);	// vert[619]
	SVECTOR(   91,    44,  -216);	// vert[620]
	SVECTOR(   89,    43,  -211);	// vert[621]
	SVECTOR(  125,    51,  -210);	// vert[622]
	SVECTOR(  128,    48,  -199);	// vert[623]
	SVECTOR(  120,    52,  -200);	// vert[624]
	SVECTOR(  119,    53,  -205);	// vert[625]
	SVECTOR(  129,    44,  -209);	// vert[626]
	SVECTOR(  132,    42,  -203);	// vert[627]
	SVECTOR(   60,    19,    77);	// vert[628]
	SVECTOR(   50,    15,    78);	// vert[629]
	SVECTOR(   68,    15,    75);	// vert[630]
	SVECTOR(   52,     6,    77);	// vert[631]
	SVECTOR(   64,     4,    75);	// vert[632]
	SVECTOR(   18,    13,    70);	// vert[633]
	SVECTOR(    9,    13,    63);	// vert[634]
	SVECTOR(   31,     3,    73);	// vert[635]
	SVECTOR(   14,     0,    64);	// vert[636]
	SVECTOR(   30,    -4,    70);	// vert[637]
	SVECTOR(   -6,    -4,    34);	// vert[638]
	SVECTOR(   -4,   -12,    17);	// vert[639]
	SVECTOR(    2,   -11,    48);	// vert[640]
	SVECTOR(   14,   -23,    49);	// vert[641]
	SVECTOR(   -3,   -25,    15);	// vert[642]
	SVECTOR(   10,   -30,    43);	// vert[643]
	SVECTOR(   -2,   -31,    31);	// vert[644]
	SVECTOR(   82,    -1,    53);	// vert[645]
	SVECTOR(   84,    -7,    34);	// vert[646]
	SVECTOR(   73,    -9,    65);	// vert[647]
	SVECTOR(   60,   -16,    65);	// vert[648]
	SVECTOR(   57,   -23,    58);	// vert[649]
	SVECTOR(   81,   -22,    33);	// vert[650]
	SVECTOR(   70,   -29,    48);	// vert[651]
	SVECTOR(    9,   -28,   -47);	// vert[652]
	SVECTOR(    8,   -33,   -28);	// vert[653]
	SVECTOR(   43,   -38,   -56);	// vert[654]
	SVECTOR(   37,   -33,   -66);	// vert[655]
	SVECTOR(   13,   -30,   -65);	// vert[656]
	SVECTOR(   33,   -42,   -51);	// vert[657]
	SVECTOR(   19,   -43,   -44);	// vert[658]
	SVECTOR(   10,   -40,   -29);	// vert[659]
	SVECTOR(   87,   -22,   -36);	// vert[660]
	SVECTOR(   83,   -31,   -15);	// vert[661]
	SVECTOR(   73,   -37,   -49);	// vert[662]
	SVECTOR(   85,   -28,   -53);	// vert[663]
	SVECTOR(   77,   -40,   -17);	// vert[664]
	SVECTOR(   72,   -41,   -36);	// vert[665]
	SVECTOR(  110,    -4,   -87);	// vert[666]
	SVECTOR(  117,     2,  -103);	// vert[667]
	SVECTOR(   81,   -22,   -91);	// vert[668]
	SVECTOR(   99,   -18,   -84);	// vert[669]
	SVECTOR(   70,   -17,  -108);	// vert[670]
	SVECTOR(   88,   -10,  -123);	// vert[671]
	SVECTOR(  116,    -2,  -119);	// vert[672]
	SVECTOR(  107,    -6,  -127);	// vert[673]
	SVECTOR(  -39,    -9,   -98);	// vert[674]
	SVECTOR(  -56,    -1,  -114);	// vert[675]
	SVECTOR(  -22,   -18,   -98);	// vert[676]
	SVECTOR(   -8,   -17,  -113);	// vert[677]
	SVECTOR(  -47,    -9,  -140);	// vert[678]
	SVECTOR(  -58,    -5,  -132);	// vert[679]
	SVECTOR(  -15,   -11,  -131);	// vert[680]
	SVECTOR(  -31,    -9,  -139);	// vert[681]
	SVECTOR(  -19,     7,  -187);	// vert[682]
	SVECTOR(  -34,    -2,  -172);	// vert[683]
	SVECTOR(  -41,    -1,  -179);	// vert[684]
	SVECTOR(  -21,     3,  -179);	// vert[685]
	SVECTOR(  -25,     3,  -191);	// vert[686]
	SVECTOR(  -37,     0,  -189);	// vert[687]
	SVECTOR(  -69,    13,  -157);	// vert[688]
	SVECTOR(  -69,    13,  -170);	// vert[689]
	SVECTOR(  -66,     3,  -158);	// vert[690]
	SVECTOR(  -61,     0,  -172);	// vert[691]
	SVECTOR(  -66,     5,  -178);	// vert[692]
	SVECTOR(   62,    13,  -178);	// vert[693]
	SVECTOR(   60,     0,  -157);	// vert[694]
	SVECTOR(   36,     0,  -159);	// vert[695]
	SVECTOR(   35,     3,  -174);	// vert[696]
	SVECTOR(   67,     7,  -168);	// vert[697]
	SVECTOR(   55,     9,  -185);	// vert[698]
	SVECTOR(   44,     6,  -186);	// vert[699]
	SVECTOR(    1,    16,  -182);	// vert[700]
	SVECTOR(    8,    17,  -185);	// vert[701]
	SVECTOR(   -3,     2,  -170);	// vert[702]
	SVECTOR(   -4,     7,  -177);	// vert[703]
	SVECTOR(   11,     5,  -178);	// vert[704]
	SVECTOR(   13,    10,  -187);	// vert[705]
	SVECTOR(  122,    21,  -141);	// vert[706]
	SVECTOR(  121,    23,  -152);	// vert[707]
	SVECTOR(  120,    11,  -142);	// vert[708]
	SVECTOR(  117,    11,  -155);	// vert[709]
	SVECTOR(  120,    16,  -160);	// vert[710]
	SVECTOR(   83,    20,  -172);	// vert[711]
	SVECTOR(   87,    21,  -174);	// vert[712]
	SVECTOR(   97,     6,  -159);	// vert[713]
	SVECTOR(   86,    12,  -167);	// vert[714]
	SVECTOR(  102,     9,  -164);	// vert[715]
	SVECTOR(  101,    12,  -173);	// vert[716]
	SVECTOR(   93,    16,  -176);	// vert[717]
	SVECTOR(  -23,    27,  -282);	// vert[718]
	SVECTOR(  -34,    23,  -285);	// vert[719]
	SVECTOR(  -15,    23,  -273);	// vert[720]
	SVECTOR(  -33,    14,  -281);	// vert[721]
	SVECTOR(  -19,    14,  -273);	// vert[722]
	SVECTOR(  -70,    21,  -276);	// vert[723]
	SVECTOR(  -77,    21,  -266);	// vert[724]
	SVECTOR(  -57,    12,  -277);	// vert[725]
	SVECTOR(  -56,     7,  -267);	// vert[726]
	SVECTOR(  -71,    11,  -262);	// vert[727]
	SVECTOR(   -4,    17,  -240);	// vert[728]
	SVECTOR(   -4,    15,  -232);	// vert[729]
	SVECTOR(  -13,     9,  -251);	// vert[730]
	SVECTOR(  -26,     4,  -250);	// vert[731]
	SVECTOR(  -12,     7,  -231);	// vert[732]
	SVECTOR(  -26,     4,  -238);	// vert[733]
	SVECTOR(  -12,    13,  -205);	// vert[734]
	SVECTOR(   -9,    13,  -211);	// vert[735]
	SVECTOR(  -20,     5,  -204);	// vert[736]
	SVECTOR(  -15,     6,  -216);	// vert[737]
	SVECTOR(  -30,     2,  -209);	// vert[738]
	SVECTOR(  -29,     2,  -215);	// vert[739]
	SVECTOR(  -75,    12,  -196);	// vert[740]
	SVECTOR(  -78,    13,  -203);	// vert[741]
	SVECTOR(  -60,     1,  -198);	// vert[742]
	SVECTOR(  -69,     5,  -195);	// vert[743]
	SVECTOR(  -61,     2,  -205);	// vert[744]
	SVECTOR(  -73,     6,  -208);	// vert[745]
	SVECTOR(  -84,    15,  -223);	// vert[746]
	SVECTOR(  -85,    17,  -231);	// vert[747]
	SVECTOR(  -76,     9,  -239);	// vert[748]
	SVECTOR(  -62,     4,  -233);	// vert[749]
	SVECTOR(  -63,     3,  -224);	// vert[750]
	SVECTOR(  -77,     7,  -221);	// vert[751]
	SVECTOR(   31,    29,  -261);	// vert[752]
	SVECTOR(   41,    26,  -262);	// vert[753]
	SVECTOR(   25,    26,  -255);	// vert[754]
	SVECTOR(   45,    17,  -259);	// vert[755]
	SVECTOR(   29,    17,  -252);	// vert[756]
	SVECTOR(   40,    13,  -253);	// vert[757]
	SVECTOR(   67,    27,  -254);	// vert[758]
	SVECTOR(   71,    26,  -248);	// vert[759]
	SVECTOR(   63,    19,  -255);	// vert[760]
	SVECTOR(   68,    19,  -248);	// vert[761]
	SVECTOR(   65,    19,  -200);	// vert[762]
	SVECTOR(   68,    19,  -206);	// vert[763]
	SVECTOR(   61,    13,  -200);	// vert[764]
	SVECTOR(   57,    10,  -207);	// vert[765]
	SVECTOR(   64,    13,  -210);	// vert[766]
	SVECTOR(   14,    18,  -207);	// vert[767]
	SVECTOR(   14,    18,  -215);	// vert[768]
	SVECTOR(   28,     9,  -205);	// vert[769]
	SVECTOR(   19,    12,  -204);	// vert[770]
	SVECTOR(   34,     8,  -212);	// vert[771]
	SVECTOR(   19,    12,  -220);	// vert[772]
	SVECTOR(   30,     9,  -218);	// vert[773]
	SVECTOR(   13,    21,  -230);	// vert[774]
	SVECTOR(   14,    23,  -235);	// vert[775]
	SVECTOR(   21,    16,  -238);	// vert[776]
	SVECTOR(   18,    14,  -229);	// vert[777]
	SVECTOR(   25,    12,  -233);	// vert[778]
	SVECTOR(   71,    20,  -221);	// vert[779]
	SVECTOR(   72,    21,  -227);	// vert[780]
	SVECTOR(   58,    10,  -236);	// vert[781]
	SVECTOR(   67,    14,  -234);	// vert[782]
	SVECTOR(   65,    13,  -220);	// vert[783]
	SVECTOR(   55,    10,  -223);	// vert[784]
	SVECTOR(   51,     9,  -229);	// vert[785]
	SVECTOR(  101,    33,  -228);	// vert[786]
	SVECTOR(  106,    30,  -229);	// vert[787]
	SVECTOR(   97,    30,  -224);	// vert[788]
	SVECTOR(  104,    23,  -227);	// vert[789]
	SVECTOR(   98,    23,  -224);	// vert[790]
	SVECTOR(  120,    28,  -224);	// vert[791]
	SVECTOR(  124,    28,  -219);	// vert[792]
	SVECTOR(  114,    21,  -224);	// vert[793]
	SVECTOR(  114,    18,  -220);	// vert[794]
	SVECTOR(  121,    21,  -217);	// vert[795]
	SVECTOR(  127,    23,  -177);	// vert[796]
	SVECTOR(  129,    23,  -183);	// vert[797]
	SVECTOR(  123,    17,  -176);	// vert[798]
	SVECTOR(  118,    14,  -180);	// vert[799]
	SVECTOR(  119,    14,  -186);	// vert[800]
	SVECTOR(  127,    17,  -187);	// vert[801]
	SVECTOR(   89,    23,  -188);	// vert[802]
	SVECTOR(   88,    23,  -193);	// vert[803]
	SVECTOR(   93,    17,  -187);	// vert[804]
	SVECTOR(  100,    15,  -190);	// vert[805]
	SVECTOR(   92,    18,  -196);	// vert[806]
	SVECTOR(  100,    15,  -195);	// vert[807]
	SVECTOR(   87,    25,  -206);	// vert[808]
	SVECTOR(   88,    26,  -210);	// vert[809]
	SVECTOR(   93,    20,  -214);	// vert[810]
	SVECTOR(   99,    16,  -213);	// vert[811]
	SVECTOR(   92,    18,  -205);	// vert[812]
	SVECTOR(   99,    15,  -208);	// vert[813]
	SVECTOR(  133,    24,  -196);	// vert[814]
	SVECTOR(  132,    25,  -201);	// vert[815]
	SVECTOR(  127,    19,  -205);	// vert[816]
	SVECTOR(  128,    18,  -196);	// vert[817]
	SVECTOR(  120,    15,  -198);	// vert[818]
	SVECTOR(  119,    15,  -203);	// vert[819]
	SVECTOR(  -13,   498,  -133);	// vert[820]
	SVECTOR(  -27,   -17,    38);	// vert[821]
	SVECTOR(  -15,   -16,   -88);	// vert[822]
	SVECTOR(  -10,    18,   -86);	// vert[823]
	SVECTOR(   35,   385,    50);	// vert[824]
	SVECTOR(   55,   370,    47);	// vert[825]
	SVECTOR(   42,   374,    47);	// vert[826]
	SVECTOR(   66,   380,    40);	// vert[827]
	SVECTOR(  -21,    -5,    42);	// vert[828]
	SVECTOR(   64,   373,    44);	// vert[829]
	SVECTOR(   51,   -52,   -46);	// vert[830]
	SVECTOR(   61,   -52,   -37);	// vert[831]
	SVECTOR(   63,   -55,   -25);	// vert[832]
	SVECTOR(   47,   -59,   -46);	// vert[833]
	SVECTOR(   54,   -67,   -41);	// vert[834]
	SVECTOR(   63,   -61,   -29);	// vert[835]
	SVECTOR(   61,   -67,   -35);	// vert[836]
	SVECTOR(   16,   -54,   -42);	// vert[837]
	SVECTOR(   25,   -59,   -47);	// vert[838]
	SVECTOR(    7,   -55,   -33);	// vert[839]
	SVECTOR(   24,   -68,   -44);	// vert[840]
	SVECTOR(   15,   -69,   -42);	// vert[841]
	SVECTOR(    7,   -62,   -36);	// vert[842]
	SVECTOR(   -3,    19,   -87);	// vert[843]
	SVECTOR(   -5,   -48,     5);	// vert[844]
	SVECTOR(  -11,   -30,    41);	// vert[845]
	SVECTOR(   -6,   -53,     0);	// vert[846]
	SVECTOR(    6,   -28,    47);	// vert[847]
	SVECTOR(  -11,   -11,   -89);	// vert[848]
	SVECTOR(  -17,   -14,    41);	// vert[849]
	SVECTOR(   -5,   -25,    44);	// vert[850]
	SVECTOR(   50,   335,    38);	// vert[851]
	SVECTOR(   55,   305,    13);	// vert[852]
	SVECTOR(   34,   307,    37);	// vert[853]
	SVECTOR(   57,   329,    21);	// vert[854]
	SVECTOR(   57,   336,    31);	// vert[855]
	SVECTOR(   31,   255,    38);	// vert[856]
	SVECTOR(   47,   235,    34);	// vert[857]
	SVECTOR(   56,   258,    16);	// vert[858]
	SVECTOR(  -12,   535,    -5);	// vert[859]
	SVECTOR(  -43,   530,   -50);	// vert[860]
	SVECTOR(   53,   316,   -15);	// vert[861]
	SVECTOR(   42,   320,   -29);	// vert[862]
	SVECTOR(   54,   339,   -18);	// vert[863]
	SVECTOR(   51,   293,   -26);	// vert[864]
	SVECTOR(   -9,   508,     5);	// vert[865]
	SVECTOR(   25,   314,   -32);	// vert[866]
	SVECTOR(    6,   311,   -21);	// vert[867]
	SVECTOR(  -47,   503,   -49);	// vert[868]
	SVECTOR(    6,   337,   -21);	// vert[869]
	SVECTOR(   24,   269,   -37);	// vert[870]
	SVECTOR(   10,   269,   -34);	// vert[871]
	SVECTOR(   11,   345,    32);	// vert[872]
	SVECTOR(   -1,   350,    28);	// vert[873]
	SVECTOR(    7,   313,    29);	// vert[874]
	SVECTOR(   -3,   312,     2);	// vert[875]
	SVECTOR(   -8,   343,    19);	// vert[876]
	SVECTOR(   -5,   336,    10);	// vert[877]
	SVECTOR(   -7,   266,    19);	// vert[878]
	SVECTOR(   -9,   269,     3);	// vert[879]
	SVECTOR(   72,   374,    24);	// vert[880]
	SVECTOR(   72,   374,    16);	// vert[881]
	SVECTOR(   73,   368,    13);	// vert[882]
	SVECTOR(   73,   369,    20);	// vert[883]
	SVECTOR(   -7,     7,   -88);	// vert[884]
	SVECTOR(   68,   -64,   -12);	// vert[885]
	SVECTOR(    3,   -34,   -89);	// vert[886]
	SVECTOR(   20,   -37,   -88);	// vert[887]
	SVECTOR(   17,   512,    14);	// vert[888]
	SVECTOR(   65,   348,     2);	// vert[889]
	SVECTOR(   64,   351,    -8);	// vert[890]
	SVECTOR(   70,   359,     0);	// vert[891]
	SVECTOR(  -48,   505,   -78);	// vert[892]
	SVECTOR(   69,   352,     4);	// vert[893]
	SVECTOR(   69,   359,    30);	// vert[894]
	SVECTOR(   68,   353,    27);	// vert[895]
	SVECTOR(   71,   359,    24);	// vert[896]
	SVECTOR(   70,   354,    20);	// vert[897]
	SVECTOR(   -4,   -65,   -24);	// vert[898]
	SVECTOR(   -9,   -62,   -12);	// vert[899]
	SVECTOR(    9,   -31,   -90);	// vert[900]
	SVECTOR(   42,   -30,   -88);	// vert[901]
	SVECTOR(   30,   -27,   -90);	// vert[902]
	SVECTOR(   44,   -24,   -88);	// vert[903]
	SVECTOR(   92,   113,    26);	// vert[904]
	SVECTOR(  137,   219,    62);	// vert[905]
	SVECTOR(  -20,   375,    15);	// vert[906]
	SVECTOR(  -19,   362,    20);	// vert[907]
	SVECTOR(  -17,   356,    16);	// vert[908]
	SVECTOR(  -18,   361,     8);	// vert[909]
	SVECTOR(  -20,   364,    15);	// vert[910]
	SVECTOR(  -17,   356,     8);	// vert[911]
	SVECTOR(   -4,   350,   -10);	// vert[912]
	SVECTOR(   -7,   349,    -3);	// vert[913]
	SVECTOR(   -7,   355,   -10);	// vert[914]
	SVECTOR(  -10,   352,    -3);	// vert[915]
	SVECTOR(   70,    29,    45);	// vert[916]
	SVECTOR(   40,    31,    61);	// vert[917]
	SVECTOR(   68,    13,    56);	// vert[918]
	SVECTOR(   40,    26,    63);	// vert[919]
	SVECTOR(   52,    20,    65);	// vert[920]
	SVECTOR(   61,    11,    65);	// vert[921]
	SVECTOR(   59,    35,    56);	// vert[922]
	SVECTOR(   76,    38,   -16);	// vert[923]
	SVECTOR(   47,    53,   -66);	// vert[924]
	SVECTOR(   77,    21,   -28);	// vert[925]
	SVECTOR(   77,    14,   -55);	// vert[926]
	SVECTOR(   64,    38,   -70);	// vert[927]
	SVECTOR(   48,    47,   -70);	// vert[928]
	SVECTOR(   73,    22,   -69);	// vert[929]
	SVECTOR(   74,    51,   -26);	// vert[930]
	SVECTOR(   65,    57,   -52);	// vert[931]
	SVECTOR(   -3,    54,   -70);	// vert[932]
	SVECTOR(  -39,    41,   -32);	// vert[933]
	SVECTOR(  -34,    24,   -63);	// vert[934]
	SVECTOR(  -38,    25,   -42);	// vert[935]
	SVECTOR(  -21,    41,   -72);	// vert[936]
	SVECTOR(  -35,    55,   -39);	// vert[937]
	SVECTOR(   -4,    62,   -68);	// vert[938]
	SVECTOR(  -23,    63,   -58);	// vert[939]
	SVECTOR(   -8,    33,    49);	// vert[940]
	SVECTOR(  -39,    34,    19);	// vert[941]
	SVECTOR(  -38,    22,    29);	// vert[942]
	SVECTOR(  -25,    25,    42);	// vert[943]
	SVECTOR(  -29,    42,    33);	// vert[944]
	SVECTOR(  -10,    40,    47);	// vert[945]
	SVECTOR(   69,   -17,    46);	// vert[946]
	SVECTOR(   74,   -18,    21);	// vert[947]
	SVECTOR(  102,   131,   -47);	// vert[948]
	SVECTOR(   -2,    95,   -61);	// vert[949]
	SVECTOR(  142,   223,    -6);	// vert[950]
	SVECTOR(  -34,    13,    36);	// vert[951]
	SVECTOR(  -37,    -1,    33);	// vert[952]
	SVECTOR(   -3,   115,    95);	// vert[953]
	SVECTOR(  -27,     8,    41);	// vert[954]
	SVECTOR(  -10,    51,    45);	// vert[955]
	SVECTOR(   46,   114,   -49);	// vert[956]
	SVECTOR(   65,   538,  -113);	// vert[957]
	SVECTOR(  -49,   117,    25);	// vert[958]
	SVECTOR(    6,   537,  -133);	// vert[959]
	SVECTOR(    1,   216,   139);	// vert[960]
	SVECTOR(  -69,   134,    83);	// vert[961]
	SVECTOR(  -62,   207,   115);	// vert[962]
	SVECTOR(  -10,    70,    42);	// vert[963]
	SVECTOR(   -2,   533,  -132);	// vert[964]
	SVECTOR(   11,    66,    52);	// vert[965]
	SVECTOR(  -43,   -16,     0);	// vert[966]
	SVECTOR(  -42,   -11,    22);	// vert[967]
	SVECTOR(   79,   505,   -59);	// vert[968]
	SVECTOR(   80,   308,   113);	// vert[969]
	SVECTOR(  -36,   -18,    33);	// vert[970]
	SVECTOR(  -37,   285,    99);	// vert[971]
	SVECTOR(  -28,   -28,    35);	// vert[972]
	SVECTOR(   15,   546,     0);	// vert[973]
	SVECTOR(   34,   391,    77);	// vert[974]
	SVECTOR(   41,   545,     1);	// vert[975]
	SVECTOR(  122,   152,    86);	// vert[976]
	SVECTOR(   70,   120,    96);	// vert[977]
	SVECTOR(   38,   153,   142);	// vert[978]
	SVECTOR(   70,   226,   142);	// vert[979]
	SVECTOR(  116,   225,   119);	// vert[980]
	SVECTOR(  133,   172,   -45);	// vert[981]
	SVECTOR(  103,   171,   -99);	// vert[982]
	SVECTOR(  132,   239,   -65);	// vert[983]
	SVECTOR(  112,   238,  -109);	// vert[984]
	SVECTOR(  -22,   123,   -50);	// vert[985]
	SVECTOR(    1,   154,  -117);	// vert[986]
	SVECTOR(  -84,   158,   -48);	// vert[987]
	SVECTOR(  -87,   235,   -96);	// vert[988]
	SVECTOR(  -25,   231,  -147);	// vert[989]
	SVECTOR(  -60,   264,  -136);	// vert[990]
	SVECTOR(  -71,   167,   103);	// vert[991]
	SVECTOR(  -96,   168,    65);	// vert[992]
	SVECTOR(  -92,   202,    80);	// vert[993]
	SVECTOR(   57,    33,   -78);	// vert[994]
	SVECTOR(   42,    38,   -79);	// vert[995]
	SVECTOR(   63,    19,   -79);	// vert[996]
	SVECTOR(   54,    29,   -80);	// vert[997]
	SVECTOR(   42,    35,   -80);	// vert[998]
	SVECTOR(   61,    18,   -81);	// vert[999]
	SVECTOR(    4,    41,   -79);	// vert[1000]
	SVECTOR(  -14,    33,   -80);	// vert[1001]
	SVECTOR(  -23,    15,   -83);	// vert[1002]
	SVECTOR(    5,    38,   -80);	// vert[1003]
	SVECTOR(  -20,    10,   -85);	// vert[1004]
	SVECTOR(   -7,    30,   -83);	// vert[1005]
	SVECTOR(  -15,    17,   -85);	// vert[1006]
	SVECTOR(  -13,   -32,   -87);	// vert[1007]
	SVECTOR(  -17,   -22,   -88);	// vert[1008]
	SVECTOR(   -3,   -36,   -88);	// vert[1009]
	SVECTOR(   -9,   -28,   -89);	// vert[1010]
	SVECTOR(   65,   -16,   -81);	// vert[1011]
	SVECTOR(  128,   305,    27);	// vert[1012]
	SVECTOR(   48,   532,  -124);	// vert[1013]
	SVECTOR(   63,   -15,   -82);	// vert[1014]
	SVECTOR(   72,   394,    70);	// vert[1015]
	SVECTOR(   40,   -35,   -87);	// vert[1016]
	SVECTOR(   54,   -27,   -85);	// vert[1017]
	SVECTOR(   47,    21,   -83);	// vert[1018]
	SVECTOR(   36,    19,   -84);	// vert[1019]
	SVECTOR(   36,    10,   -86);	// vert[1020]
	SVECTOR(   47,    11,   -85);	// vert[1021]
	SVECTOR(   16,    30,   -84);	// vert[1022]
	SVECTOR(    4,    27,   -85);	// vert[1023]
	SVECTOR(   16,    25,   -85);	// vert[1024]
	SVECTOR(    5,    20,   -86);	// vert[1025]
	SVECTOR(   -6,    -7,   -90);	// vert[1026]
	SVECTOR(    0,   -21,   -90);	// vert[1027]
	SVECTOR(   14,   -26,   -90);	// vert[1028]
	SVECTOR(   14,    -8,   -90);	// vert[1029]
	SVECTOR(    1,    -2,   -90);	// vert[1030]
	SVECTOR(   20,   -19,   -90);	// vert[1031]
	SVECTOR(   57,    -6,   -85);	// vert[1032]
	SVECTOR(   53,   -17,   -87);	// vert[1033]
	SVECTOR(   52,    -6,   -86);	// vert[1034]
	SVECTOR(   46,   -16,   -88);	// vert[1035]
	SVECTOR(    4,    19,    53);	// vert[1036]
	SVECTOR(  -13,    15,    47);	// vert[1037]
	SVECTOR(  -20,     4,    43);	// vert[1038]
	SVECTOR(    3,    14,    51);	// vert[1039]
	SVECTOR(  -10,     4,    46);	// vert[1040]
	SVECTOR(   36,    11,    62);	// vert[1041]
	SVECTOR(   25,    10,    58);	// vert[1042]
	SVECTOR(   33,     3,    60);	// vert[1043]
	SVECTOR(   23,     2,    56);	// vert[1044]
	SVECTOR(   45,   -13,    61);	// vert[1045]
	SVECTOR(   39,   -24,    58);	// vert[1046]
	SVECTOR(   21,   -28,    52);	// vert[1047]
	SVECTOR(   35,   -13,    58);	// vert[1048]
	SVECTOR(   21,   -23,    53);	// vert[1049]
	SVECTOR(  -11,   -20,    42);	// vert[1050]
	SVECTOR(   -8,   -12,    44);	// vert[1051]
	SVECTOR(    2,   -11,    47);	// vert[1052]
	SVECTOR(    0,   -19,    46);	// vert[1053]
	SVECTOR(  -37,   493,   -13);	// vert[1054]
	SVECTOR(  -12,   378,    64);	// vert[1055]
	SVECTOR(  -76,   378,   -30);	// vert[1056]
	SVECTOR(  -69,   346,    36);	// vert[1057]
	SVECTOR(   -8,   459,    27);	// vert[1058]
	SVECTOR(  -56,   456,   -42);	// vert[1059]
	SVECTOR(   64,   511,     0);	// vert[1060]
	SVECTOR(   43,   513,    11);	// vert[1061]
	SVECTOR(   96,   394,    45);	// vert[1062]
	SVECTOR(  106,   393,    -5);	// vert[1063]
	SVECTOR(   54,   471,    31);	// vert[1064]
	SVECTOR(   86,   467,   -22);	// vert[1065]
	SVECTOR(   73,   505,   -90);	// vert[1066]
	SVECTOR(   62,   510,  -114);	// vert[1067]
	SVECTOR(   41,   501,  -129);	// vert[1068]
	SVECTOR(   76,   389,  -128);	// vert[1069]
	SVECTOR(   38,   388,  -144);	// vert[1070]
	SVECTOR(   81,   464,   -93);	// vert[1071]
	SVECTOR(   27,   460,  -137);	// vert[1072]
	SVECTOR(  -31,   503,  -121);	// vert[1073]
	SVECTOR(  -42,   506,  -101);	// vert[1074]
	SVECTOR(  -44,   428,  -131);	// vert[1075]
	SVECTOR(  -48,   471,  -105);	// vert[1076]
	SVECTOR(  -25,   467,  -134);	// vert[1077]
	SVECTOR(   -7,   147,    36);	// vert[1078]
	SVECTOR(  -19,   151,    22);	// vert[1079]
	SVECTOR(  -34,    77,     5);	// vert[1080]
	SVECTOR(  -27,    73,    27);	// vert[1081]
	SVECTOR(   -9,    99,    40);	// vert[1082]
	SVECTOR(  -30,   107,     4);	// vert[1083]
	SVECTOR(   51,   115,    42);	// vert[1084]
	SVECTOR(   55,    56,    49);	// vert[1085]
	SVECTOR(   66,    66,    27);	// vert[1086]
	SVECTOR(   34,    60,    55);	// vert[1087]
	SVECTOR(   33,    86,    52);	// vert[1088]
	SVECTOR(   64,    92,    25);	// vert[1089]
	SVECTOR(   62,   165,   -25);	// vert[1090]
	SVECTOR(   56,   187,   -38);	// vert[1091]
	SVECTOR(   46,   168,   -49);	// vert[1092]
	SVECTOR(   59,    91,   -48);	// vert[1093]
	SVECTOR(   40,    93,   -60);	// vert[1094]
	SVECTOR(   65,   115,   -26);	// vert[1095]
	SVECTOR(   36,   121,   -58);	// vert[1096]
	SVECTOR(   -5,   169,   -45);	// vert[1097]
	SVECTOR(  -16,   168,   -32);	// vert[1098]
	SVECTOR(  -17,   102,   -52);	// vert[1099]
	SVECTOR(  -23,   122,   -35);	// vert[1100]
	SVECTOR(   -2,   126,   -56);	// vert[1101]
	SVECTOR(   57,    43,    73);	// vert[1102]
	SVECTOR(   53,    33,    77);	// vert[1103]
	SVECTOR(   47,    45,    71);	// vert[1104]
	SVECTOR(   44,    32,    77);	// vert[1105]
	SVECTOR(   66,    35,    74);	// vert[1106]
	SVECTOR(   58,    47,    67);	// vert[1107]
	SVECTOR(   72,    35,    69);	// vert[1108]
	SVECTOR(   51,    25,    78);	// vert[1109]
	SVECTOR(   68,    26,    74);	// vert[1110]
	SVECTOR(   28,    47,    59);	// vert[1111]
	SVECTOR(   13,    34,    64);	// vert[1112]
	SVECTOR(   20,    47,    48);	// vert[1113]
	SVECTOR(    4,    34,    56);	// vert[1114]
	SVECTOR(   39,    49,    52);	// vert[1115]
	SVECTOR(   29,    22,    76);	// vert[1116]
	SVECTOR(   40,    12,    78);	// vert[1117]
	SVECTOR(    9,    24,    64);	// vert[1118]
	SVECTOR(   29,    12,    75);	// vert[1119]
	SVECTOR(   20,    37,    22);	// vert[1120]
	SVECTOR(   41,    39,    23);	// vert[1121]
	SVECTOR(   -1,    18,    19);	// vert[1122]
	SVECTOR(   28,    28,     4);	// vert[1123]
	SVECTOR(    3,     9,     1);	// vert[1124]
	SVECTOR(   -4,    18,    45);	// vert[1125]
	SVECTOR(    2,     9,    56);	// vert[1126]
	SVECTOR(   -4,     2,    17);	// vert[1127]
	SVECTOR(   -3,     3,    46);	// vert[1128]
	SVECTOR(   66,    32,     7);	// vert[1129]
	SVECTOR(   55,    26,   -15);	// vert[1130]
	SVECTOR(   83,    24,    32);	// vert[1131]
	SVECTOR(   71,    28,   -13);	// vert[1132]
	SVECTOR(   84,    18,    11);	// vert[1133]
	SVECTOR(   80,    20,    62);	// vert[1134]
	SVECTOR(   74,    10,    71);	// vert[1135]
	SVECTOR(   85,     9,    33);	// vert[1136]
	SVECTOR(   79,     5,    64);	// vert[1137]
	SVECTOR(   61,    26,   -55);	// vert[1138]
	SVECTOR(   80,    28,   -53);	// vert[1139]
	SVECTOR(   22,    28,   -78);	// vert[1140]
	SVECTOR(   82,    33,   -72);	// vert[1141]
	SVECTOR(   45,    40,   -92);	// vert[1142]
	SVECTOR(  -21,     9,   -80);	// vert[1143]
	SVECTOR(    6,    38,   -96);	// vert[1144]
	SVECTOR(  -40,    20,   -99);	// vert[1145]
	SVECTOR(    4,   -13,   -23);	// vert[1146]
	SVECTOR(    0,   -19,    -3);	// vert[1147]
	SVECTOR(   -7,   -12,   -62);	// vert[1148]
	SVECTOR(    4,   -24,   -25);	// vert[1149]
	SVECTOR(    0,   -22,   -63);	// vert[1150]
	SVECTOR(  -43,     4,   -97);	// vert[1151]
	SVECTOR(  -17,   -16,   -80);	// vert[1152]
	SVECTOR(  104,    20,   -70);	// vert[1153]
	SVECTOR(  111,    26,   -87);	// vert[1154]
	SVECTOR(   88,    -1,   -12);	// vert[1155]
	SVECTOR(   85,   -12,    11);	// vert[1156]
	SVECTOR(   97,     0,   -54);	// vert[1157]
	SVECTOR(   86,   -17,   -13);	// vert[1158]
	SVECTOR(   93,   -15,   -54);	// vert[1159]
	SVECTOR(  113,    11,   -87);	// vert[1160]
	SVECTOR(  101,    -9,   -71);	// vert[1161]
	SVECTOR(   55,    50,  -125);	// vert[1162]
	SVECTOR(   17,    50,  -127);	// vert[1163]
	SVECTOR(   92,    50,  -141);	// vert[1164]
	SVECTOR(   43,    50,  -143);	// vert[1165]
	SVECTOR(   79,    47,  -155);	// vert[1166]
	SVECTOR(  113,    49,  -140);	// vert[1167]
	SVECTOR(  121,    38,  -133);	// vert[1168]
	SVECTOR(  115,    47,  -150);	// vert[1169]
	SVECTOR(  121,    38,  -146);	// vert[1170]
	SVECTOR(   91,    47,  -156);	// vert[1171]
	SVECTOR(  107,    48,  -153);	// vert[1172]
	SVECTOR(  123,    25,  -117);	// vert[1173]
	SVECTOR(  122,    10,  -117);	// vert[1174]
	SVECTOR(  123,    30,  -143);	// vert[1175]
	SVECTOR(  123,    17,  -130);	// vert[1176]
	SVECTOR(  -54,    46,  -154);	// vert[1177]
	SVECTOR(  -31,    48,  -155);	// vert[1178]
	SVECTOR(  -47,    45,  -168);	// vert[1179]
	SVECTOR(  -24,    45,  -168);	// vert[1180]
	SVECTOR(  -67,    34,  -148);	// vert[1181]
	SVECTOR(  -58,    44,  -166);	// vert[1182]
	SVECTOR(  -69,    32,  -163);	// vert[1183]
	SVECTOR(   -7,    50,  -150);	// vert[1184]
	SVECTOR(   16,    48,  -162);	// vert[1185]
	SVECTOR(  -14,    45,  -167);	// vert[1186]
	SVECTOR(    3,    47,  -166);	// vert[1187]
	SVECTOR(  -66,    20,  -129);	// vert[1188]
	SVECTOR(  -64,     5,  -129);	// vert[1189]
	SVECTOR(  -70,    23,  -159);	// vert[1190]
	SVECTOR(  -68,    10,  -144);	// vert[1191]
	SVECTOR(  -49,    42,  -187);	// vert[1192]
	SVECTOR(  -61,    41,  -185);	// vert[1193]
	SVECTOR(   -5,    32,  -182);	// vert[1194]
	SVECTOR(    1,    33,  -182);	// vert[1195]
	SVECTOR(  -33,    40,  -198);	// vert[1196]
	SVECTOR(  -14,    30,  -200);	// vert[1197]
	SVECTOR(  -32,    41,  -205);	// vert[1198]
	SVECTOR(  -11,    30,  -207);	// vert[1199]
	SVECTOR(  -60,    40,  -194);	// vert[1200]
	SVECTOR(  -47,    42,  -203);	// vert[1201]
	SVECTOR(  -10,    20,  -186);	// vert[1202]
	SVECTOR(  -15,    19,  -194);	// vert[1203]
	SVECTOR(  -14,    11,  -183);	// vert[1204]
	SVECTOR(  -18,    10,  -193);	// vert[1205]
	SVECTOR(    2,    24,  -184);	// vert[1206]
	SVECTOR(   -6,    13,  -182);	// vert[1207]
	SVECTOR(   -9,    21,  -205);	// vert[1208]
	SVECTOR(  -15,    12,  -199);	// vert[1209]
	SVECTOR(  -74,    29,  -191);	// vert[1210]
	SVECTOR(  -76,    29,  -198);	// vert[1211]
	SVECTOR(  -72,    21,  -182);	// vert[1212]
	SVECTOR(  -70,    13,  -180);	// vert[1213]
	SVECTOR(  -78,    21,  -197);	// vert[1214]
	SVECTOR(  -72,    12,  -189);	// vert[1215]
	SVECTOR(   31,    44,  -188);	// vert[1216]
	SVECTOR(   20,    43,  -189);	// vert[1217]
	SVECTOR(   77,    35,  -172);	// vert[1218]
	SVECTOR(   84,    36,  -172);	// vert[1219]
	SVECTOR(   49,    43,  -198);	// vert[1220]
	SVECTOR(   63,    33,  -195);	// vert[1221]
	SVECTOR(   53,    43,  -205);	// vert[1222]
	SVECTOR(   66,    33,  -203);	// vert[1223]
	SVECTOR(   25,    43,  -199);	// vert[1224]
	SVECTOR(   41,    44,  -206);	// vert[1225]
	SVECTOR(   69,    25,  -176);	// vert[1226]
	SVECTOR(   63,    24,  -187);	// vert[1227]
	SVECTOR(   70,    16,  -174);	// vert[1228]
	SVECTOR(   61,    16,  -186);	// vert[1229]
	SVECTOR(   82,    28,  -174);	// vert[1230]
	SVECTOR(   77,    18,  -172);	// vert[1231]
	SVECTOR(   67,    26,  -201);	// vert[1232]
	SVECTOR(   63,    18,  -194);	// vert[1233]
	SVECTOR(   13,    33,  -201);	// vert[1234]
	SVECTOR(   14,    33,  -209);	// vert[1235]
	SVECTOR(   12,    26,  -193);	// vert[1236]
	SVECTOR(   13,    18,  -191);	// vert[1237]
	SVECTOR(   12,    26,  -209);	// vert[1238]
	SVECTOR(   15,    18,  -199);	// vert[1239]
	SVECTOR(  116,    45,  -168);	// vert[1240]
	SVECTOR(  109,    46,  -171);	// vert[1241]
	SVECTOR(  125,    36,  -172);	// vert[1242]
	SVECTOR(  117,    44,  -176);	// vert[1243]
	SVECTOR(  128,    36,  -179);	// vert[1244]
	SVECTOR(  124,    29,  -163);	// vert[1245]
	SVECTOR(  122,    23,  -162);	// vert[1246]
	SVECTOR(  128,    29,  -178);	// vert[1247]
	SVECTOR(  124,    23,  -170);	// vert[1248]
	SVECTOR(  101,    45,  -182);	// vert[1249]
	SVECTOR(  110,    46,  -185);	// vert[1250]
	SVECTOR(   89,    36,  -184);	// vert[1251]
	SVECTOR(  101,    45,  -188);	// vert[1252]
	SVECTOR(   88,    36,  -190);	// vert[1253]
	SVECTOR(   88,    29,  -179);	// vert[1254]
	SVECTOR(   89,    22,  -178);	// vert[1255]
	SVECTOR(   87,    29,  -189);	// vert[1256]
	SVECTOR(   89,    23,  -183);	// vert[1257]
	SVECTOR(  -28,    52,  -276);	// vert[1258]
	SVECTOR(  -31,    43,  -285);	// vert[1259]
	SVECTOR(  -39,    54,  -274);	// vert[1260]
	SVECTOR(  -42,    41,  -286);	// vert[1261]
	SVECTOR(  -17,    43,  -276);	// vert[1262]
	SVECTOR(  -27,    54,  -266);	// vert[1263]
	SVECTOR(  -11,    42,  -267);	// vert[1264]
	SVECTOR(  -33,    34,  -286);	// vert[1265]
	SVECTOR(  -14,    34,  -275);	// vert[1266]
	SVECTOR(  -57,    54,  -260);	// vert[1267]
	SVECTOR(  -42,    55,  -250);	// vert[1268]
	SVECTOR(  -74,    41,  -270);	// vert[1269]
	SVECTOR(  -60,    54,  -248);	// vert[1270]
	SVECTOR(  -80,    41,  -258);	// vert[1271]
	SVECTOR(  -59,    30,  -284);	// vert[1272]
	SVECTOR(  -46,    21,  -285);	// vert[1273]
	SVECTOR(  -78,    31,  -269);	// vert[1274]
	SVECTOR(  -59,    20,  -282);	// vert[1275]
	SVECTOR(  -27,    51,  -232);	// vert[1276]
	SVECTOR(   -4,    37,  -234);	// vert[1277]
	SVECTOR(  -28,    48,  -224);	// vert[1278]
	SVECTOR(   -5,    34,  -226);	// vert[1279]
	SVECTOR(  -45,    52,  -229);	// vert[1280]
	SVECTOR(   -4,    29,  -253);	// vert[1281]
	SVECTOR(  -10,    20,  -263);	// vert[1282]
	SVECTOR(   -2,    26,  -232);	// vert[1283]
	SVECTOR(   -6,    18,  -252);	// vert[1284]
	SVECTOR(  -46,    46,  -215);	// vert[1285]
	SVECTOR(  -62,    44,  -213);	// vert[1286]
	SVECTOR(  -63,    47,  -220);	// vert[1287]
	SVECTOR(   -4,    22,  -218);	// vert[1288]
	SVECTOR(   -5,    14,  -224);	// vert[1289]
	SVECTOR(   -7,    13,  -217);	// vert[1290]
	SVECTOR(  -83,    33,  -218);	// vert[1291]
	SVECTOR(  -85,    36,  -225);	// vert[1292]
	SVECTOR(  -83,    22,  -210);	// vert[1293]
	SVECTOR(  -80,    13,  -209);	// vert[1294]
	SVECTOR(  -87,    25,  -224);	// vert[1295]
	SVECTOR(  -83,    14,  -216);	// vert[1296]
	SVECTOR(  -86,    29,  -245);	// vert[1297]
	SVECTOR(  -81,    19,  -255);	// vert[1298]
	SVECTOR(  -84,    18,  -243);	// vert[1299]
	SVECTOR(   50,    54,  -254);	// vert[1300]
	SVECTOR(   40,    45,  -262);	// vert[1301]
	SVECTOR(   59,    52,  -254);	// vert[1302]
	SVECTOR(   49,    43,  -262);	// vert[1303]
	SVECTOR(   37,    55,  -248);	// vert[1304]
	SVECTOR(   27,    45,  -256);	// vert[1305]
	SVECTOR(   32,    54,  -242);	// vert[1306]
	SVECTOR(   22,    43,  -251);	// vert[1307]
	SVECTOR(   59,    54,  -247);	// vert[1308]
	SVECTOR(   44,    56,  -240);	// vert[1309]
	SVECTOR(   40,    36,  -263);	// vert[1310]
	SVECTOR(   25,    36,  -257);	// vert[1311]
	SVECTOR(   69,    42,  -252);	// vert[1312]
	SVECTOR(   71,    43,  -245);	// vert[1313]
	SVECTOR(   59,    33,  -261);	// vert[1314]
	SVECTOR(   52,    24,  -261);	// vert[1315]
	SVECTOR(   71,    34,  -250);	// vert[1316]
	SVECTOR(   61,    25,  -259);	// vert[1317]
	SVECTOR(   56,    46,  -215);	// vert[1318]
	SVECTOR(   44,    47,  -217);	// vert[1319]
	SVECTOR(   71,    36,  -217);	// vert[1320]
	SVECTOR(   55,    48,  -220);	// vert[1321]
	SVECTOR(   71,    39,  -222);	// vert[1322]
	SVECTOR(   71,    26,  -212);	// vert[1323]
	SVECTOR(   69,    19,  -211);	// vert[1324]
	SVECTOR(   73,    29,  -221);	// vert[1325]
	SVECTOR(   70,    19,  -216);	// vert[1326]
	SVECTOR(   29,    49,  -225);	// vert[1327]
	SVECTOR(   14,    37,  -227);	// vert[1328]
	SVECTOR(   28,    51,  -230);	// vert[1329]
	SVECTOR(   14,    39,  -232);	// vert[1330]
	SVECTOR(   41,    53,  -227);	// vert[1331]
	SVECTOR(   11,    27,  -222);	// vert[1332]
	SVECTOR(   14,    19,  -221);	// vert[1333]
	SVECTOR(   12,    30,  -231);	// vert[1334]
	SVECTOR(   13,    20,  -226);	// vert[1335]
	SVECTOR(   16,    32,  -243);	// vert[1336]
	SVECTOR(   21,    24,  -248);	// vert[1337]
	SVECTOR(   17,    23,  -241);	// vert[1338]
	SVECTOR(   74,    33,  -235);	// vert[1339]
	SVECTOR(   72,    24,  -242);	// vert[1340]
	SVECTOR(   72,    23,  -234);	// vert[1341]
	SVECTOR(  102,    53,  -225);	// vert[1342]
	SVECTOR(  104,    46,  -229);	// vert[1343]
	SVECTOR(  106,    54,  -224);	// vert[1344]
	SVECTOR(  109,    45,  -229);	// vert[1345]
	SVECTOR(   98,    46,  -226);	// vert[1346]
	SVECTOR(  101,    54,  -221);	// vert[1347]
	SVECTOR(   95,    45,  -222);	// vert[1348]
	SVECTOR(  105,    38,  -229);	// vert[1349]
	SVECTOR(   97,    38,  -225);	// vert[1350]
	SVECTOR(  114,    55,  -217);	// vert[1351]
	SVECTOR(  108,    56,  -213);	// vert[1352]
	SVECTOR(  122,    44,  -221);	// vert[1353]
	SVECTOR(  117,    54,  -211);	// vert[1354]
	SVECTOR(  126,    44,  -215);	// vert[1355]
	SVECTOR(  115,    36,  -228);	// vert[1356]
	SVECTOR(  110,    28,  -228);	// vert[1357]
	SVECTOR(  124,    36,  -220);	// vert[1358]
	SVECTOR(  115,    28,  -227);	// vert[1359]
	SVECTOR(  120,    47,  -192);	// vert[1360]
	SVECTOR(  110,    49,  -194);	// vert[1361]
	SVECTOR(  132,    39,  -194);	// vert[1362]
	SVECTOR(  120,    49,  -196);	// vert[1363]
	SVECTOR(  133,    41,  -198);	// vert[1364]
	SVECTOR(  133,    30,  -189);	// vert[1365]
	SVECTOR(  131,    23,  -188);	// vert[1366]
	SVECTOR(  134,    32,  -197);	// vert[1367]
	SVECTOR(  132,    24,  -192);	// vert[1368]
	SVECTOR(  100,    50,  -201);	// vert[1369]
	SVECTOR(   87,    39,  -203);	// vert[1370]
	SVECTOR(  100,    52,  -205);	// vert[1371]
	SVECTOR(   88,    41,  -207);	// vert[1372]
	SVECTOR(  110,    53,  -203);	// vert[1373]
	SVECTOR(   86,    30,  -198);	// vert[1374]
	SVECTOR(   88,    23,  -197);	// vert[1375]
	SVECTOR(   86,    33,  -206);	// vert[1376]
	SVECTOR(   87,    24,  -201);	// vert[1377]
	SVECTOR(   90,    35,  -216);	// vert[1378]
	SVECTOR(   93,    28,  -220);	// vert[1379]
	SVECTOR(   90,    27,  -215);	// vert[1380]
	SVECTOR(  131,    35,  -208);	// vert[1381]
	SVECTOR(  127,    27,  -213);	// vert[1382]
	SVECTOR(  130,    26,  -207);	// vert[1383]
	SVECTOR(   56,    -1,    75);	// vert[1384]
	SVECTOR(   44,    -4,    74);	// vert[1385]
	SVECTOR(   59,    -8,    71);	// vert[1386]
	SVECTOR(   26,    -9,    64);	// vert[1387]
	SVECTOR(   20,   -15,    57);	// vert[1388]
	SVECTOR(   41,   -17,    63);	// vert[1389]
	SVECTOR(   30,   -31,    51);	// vert[1390]
	SVECTOR(   52,   -31,    53);	// vert[1391]
	SVECTOR(   -2,   -34,    12);	// vert[1392]
	SVECTOR(    1,   -37,    -8);	// vert[1393]
	SVECTOR(   25,    13,   -86);	// vert[1394]
	SVECTOR(   13,    16,   -87);	// vert[1395]
	SVECTOR(   79,   220,  -134);	// vert[1396]
	SVECTOR(   -3,   -42,     8);	// vert[1397]
	SVECTOR(   39,     0,   -87);	// vert[1398]
	SVECTOR(   76,   -33,    29);	// vert[1399]
	SVECTOR(   78,   -37,     6);	// vert[1400]
	SVECTOR(   12,     4,   -88);	// vert[1401]
	SVECTOR(   60,   -33,   -66);	// vert[1402]
	SVECTOR(   50,   -43,   -52);	// vert[1403]
	SVECTOR(   76,   -32,   -62);	// vert[1404]
	SVECTOR(   63,   -43,   -47);	// vert[1405]
	SVECTOR(   26,   -28,   -80);	// vert[1406]
	SVECTOR(   79,   -27,   -76);	// vert[1407]
	SVECTOR(   46,   -23,   -94);	// vert[1408]
	SVECTOR(   10,   -22,   -96);	// vert[1409]
	SVECTOR(   29,   -47,   -48);	// vert[1410]
	SVECTOR(   55,   -47,   -46);	// vert[1411]
	SVECTOR(   39,   -52,   -49);	// vert[1412]
	SVECTOR(    8,   -46,   -29);	// vert[1413]
	SVECTOR(   27,   -53,   -47);	// vert[1414]
	SVECTOR(    8,   -50,   -30);	// vert[1415]
	SVECTOR(    0,   -49,   -13);	// vert[1416]
	SVECTOR(   71,   -46,   -18);	// vert[1417]
	SVECTOR(   69,   -51,     0);	// vert[1418]
	SVECTOR(   66,   -51,   -21);	// vert[1419]
	SVECTOR(   54,   -12,  -125);	// vert[1420]
	SVECTOR(   18,   -12,  -128);	// vert[1421]
	SVECTOR(   91,    -3,  -141);	// vert[1422]
	SVECTOR(   42,    -6,  -142);	// vert[1423]
	SVECTOR(   78,     1,  -155);	// vert[1424]
	SVECTOR(  113,     0,  -137);	// vert[1425]
	SVECTOR(  115,     6,  -146);	// vert[1426]
	SVECTOR(   90,     3,  -156);	// vert[1427]
	SVECTOR(  107,     4,  -152);	// vert[1428]
	SVECTOR(  -54,    -5,  -150);	// vert[1429]
	SVECTOR(  -31,    -5,  -154);	// vert[1430]
	SVECTOR(  -47,    -4,  -166);	// vert[1431]
	SVECTOR(  -26,    -1,  -167);	// vert[1432]
	SVECTOR(  -58,    -2,  -161);	// vert[1433]
	SVECTOR(   -6,    -5,  -149);	// vert[1434]
	SVECTOR(   16,    -1,  -161);	// vert[1435]
	SVECTOR(  -16,     0,  -166);	// vert[1436]
	SVECTOR(    3,     0,  -165);	// vert[1437]
	SVECTOR(  -50,    -1,  -186);	// vert[1438]
	SVECTOR(  -60,     0,  -182);	// vert[1439]
	SVECTOR(  -35,     1,  -196);	// vert[1440]
	SVECTOR(  -33,     2,  -203);	// vert[1441]
	SVECTOR(  -59,     1,  -191);	// vert[1442]
	SVECTOR(  -47,     0,  -201);	// vert[1443]
	SVECTOR(   31,     5,  -187);	// vert[1444]
	SVECTOR(   20,     7,  -187);	// vert[1445]
	SVECTOR(   48,     8,  -195);	// vert[1446]
	SVECTOR(   52,     9,  -202);	// vert[1447]
	SVECTOR(   25,     8,  -196);	// vert[1448]
	SVECTOR(   41,     8,  -204);	// vert[1449]
	SVECTOR(  116,    12,  -165);	// vert[1450]
	SVECTOR(  109,    11,  -169);	// vert[1451]
	SVECTOR(  116,    14,  -173);	// vert[1452]
	SVECTOR(  101,    14,  -180);	// vert[1453]
	SVECTOR(  110,    13,  -183);	// vert[1454]
	SVECTOR(  101,    14,  -185);	// vert[1455]
	SVECTOR(  -30,     9,  -273);	// vert[1456]
	SVECTOR(  -43,     7,  -271);	// vert[1457]
	SVECTOR(  -27,     6,  -262);	// vert[1458]
	SVECTOR(  -58,     5,  -256);	// vert[1459]
	SVECTOR(  -43,     3,  -248);	// vert[1460]
	SVECTOR(  -61,     4,  -244);	// vert[1461]
	SVECTOR(  -27,     3,  -229);	// vert[1462]
	SVECTOR(  -28,     3,  -222);	// vert[1463]
	SVECTOR(  -45,     2,  -227);	// vert[1464]
	SVECTOR(  -46,     1,  -213);	// vert[1465]
	SVECTOR(  -61,     2,  -211);	// vert[1466]
	SVECTOR(  -62,     2,  -217);	// vert[1467]
	SVECTOR(   52,    13,  -252);	// vert[1468]
	SVECTOR(   61,    15,  -251);	// vert[1469]
	SVECTOR(   36,    12,  -246);	// vert[1470]
	SVECTOR(   31,    11,  -239);	// vert[1471]
	SVECTOR(   60,    12,  -244);	// vert[1472]
	SVECTOR(   44,     9,  -238);	// vert[1473]
	SVECTOR(   56,     9,  -213);	// vert[1474]
	SVECTOR(   44,     8,  -216);	// vert[1475]
	SVECTOR(   55,     9,  -218);	// vert[1476]
	SVECTOR(   29,    10,  -223);	// vert[1477]
	SVECTOR(   28,    10,  -228);	// vert[1478]
	SVECTOR(   41,     9,  -226);	// vert[1479]
	SVECTOR(  102,    19,  -223);	// vert[1480]
	SVECTOR(  108,    17,  -222);	// vert[1481]
	SVECTOR(  100,    17,  -219);	// vert[1482]
	SVECTOR(  116,    16,  -215);	// vert[1483]
	SVECTOR(  108,    15,  -212);	// vert[1484]
	SVECTOR(  117,    16,  -209);	// vert[1485]
	SVECTOR(  119,    15,  -190);	// vert[1486]
	SVECTOR(  110,    14,  -193);	// vert[1487]
	SVECTOR(  120,    15,  -194);	// vert[1488]
	SVECTOR(  100,    15,  -199);	// vert[1489]
	SVECTOR(  100,    15,  -203);	// vert[1490]
	SVECTOR(  110,    14,  -201);	// vert[1491]
	SVECTOR(   29,   -10,   -89);	// vert[1492]
	SVECTOR(   66,   -58,   -14);	// vert[1493]
	SVECTOR(   23,   375,    44);	// vert[1494]
	SVECTOR(    5,   376,    39);	// vert[1495]
	SVECTOR(   40,   359,    44);	// vert[1496]
	SVECTOR(   61,   363,    42);	// vert[1497]
	SVECTOR(   37,   337,    40);	// vert[1498]
	SVECTOR(   59,   350,    37);	// vert[1499]
	SVECTOR(   10,   363,    37);	// vert[1500]
	SVECTOR(   24,   340,    38);	// vert[1501]
	SVECTOR(   29,   217,  -145);	// vert[1502]
	SVECTOR(   69,   372,    36);	// vert[1503]
	SVECTOR(   71,   377,    21);	// vert[1504]
	SVECTOR(   71,   371,    28);	// vert[1505]
	SVECTOR(   67,   -60,    -5);	// vert[1506]
	SVECTOR(  117,   308,   -88);	// vert[1507]
	SVECTOR(   65,   357,    34);	// vert[1508]
	SVECTOR(   71,   365,    30);	// vert[1509]
	SVECTOR(   44,   -68,   -44);	// vert[1510]
	SVECTOR(   34,   -68,   -45);	// vert[1511]
	SVECTOR(   43,    -9,   -88);	// vert[1512]
	SVECTOR(    1,     5,    49);	// vert[1513]
	SVECTOR(  108,   390,   -53);	// vert[1514]
	SVECTOR(   65,   -68,   -27);	// vert[1515]
	SVECTOR(   68,   -68,   -19);	// vert[1516]
	SVECTOR(   55,   300,  -147);	// vert[1517]
	SVECTOR(   13,     4,    53);	// vert[1518]
	SVECTOR(    0,   -57,   -25);	// vert[1519]
	SVECTOR(   -6,   -55,    -9);	// vert[1520]
	SVECTOR(    1,    -3,    48);	// vert[1521]
	SVECTOR(   97,   388,   -96);	// vert[1522]
	SVECTOR(    8,   -70,   -37);	// vert[1523]
	SVECTOR( -109,   219,   -27);	// vert[1524]
	SVECTOR(   24,    -5,    55);	// vert[1525]
	SVECTOR(   -5,   -59,   -17);	// vert[1526]
	SVECTOR(    2,   -71,   -31);	// vert[1527]
	SVECTOR(  -12,   368,    28);	// vert[1528]
	SVECTOR(  -10,   356,    25);	// vert[1529]
	SVECTOR(   23,   -14,    54);	// vert[1530]
	SVECTOR(  -14,   -61,    -2);	// vert[1531]
	SVECTOR(  -19,   376,    24);	// vert[1532]
	SVECTOR(   12,   -13,    50);	// vert[1533]
	SVECTOR(  -20,   375,    19);	// vert[1534]
	SVECTOR(  -16,   360,    23);	// vert[1535]
	SVECTOR(  -20,   369,    21);	// vert[1536]
	SVECTOR(   58,   329,     6);	// vert[1537]
	SVECTOR(   58,   265,    -2);	// vert[1538]
	SVECTOR(   57,   332,    -7);	// vert[1539]
	SVECTOR(   55,   276,   -16);	// vert[1540]
	SVECTOR(   16,   258,    37);	// vert[1541]
	SVECTOR(    2,   261,    30);	// vert[1542]
	SVECTOR(   62,   343,    21);	// vert[1543]
	SVECTOR(   61,   343,    -1);	// vert[1544]
	SVECTOR(   66,   348,    12);	// vert[1545]
	SVECTOR(   67,   349,    20);	// vert[1546]
	SVECTOR(   31,   189,    42);	// vert[1547]
	SVECTOR(   -2,   204,    32);	// vert[1548]
	SVECTOR(   11,   142,    45);	// vert[1549]
	SVECTOR(   58,   194,    18);	// vert[1550]
	SVECTOR(   31,   131,    47);	// vert[1551]
	SVECTOR(   61,   137,    21);	// vert[1552]
	SVECTOR(   59,   224,   -20);	// vert[1553]
	SVECTOR(   64,   153,    -2);	// vert[1554]
	SVECTOR(   45,   278,   -33);	// vert[1555]
	SVECTOR(   36,   270,   -37);	// vert[1556]
	SVECTOR(   47,   226,   -40);	// vert[1557]
	SVECTOR(    1,   332,   -13);	// vert[1558]
	SVECTOR(    0,   266,   -25);	// vert[1559]
	SVECTOR(   -2,   332,    -2);	// vert[1560]
	SVECTOR(   -6,   266,   -12);	// vert[1561]
	SVECTOR( -113,   208,    38);	// vert[1562]
	SVECTOR(  -75,   325,  -112);	// vert[1563]
	SVECTOR(   -3,   344,    -7);	// vert[1564]
	SVECTOR(   -3,   355,   -15);	// vert[1565]
	SVECTOR(   18,   216,   -44);	// vert[1566]
	SVECTOR(   27,   165,   -53);	// vert[1567]
	SVECTOR(   -7,   216,   -29);	// vert[1568]
	SVECTOR(    9,   166,   -52);	// vert[1569]
	SVECTOR(  -10,   347,    11);	// vert[1570]
	SVECTOR(  -14,   352,    10);	// vert[1571]
	SVECTOR(  -10,   349,     2);	// vert[1572]
	SVECTOR(  -16,   211,     2);	// vert[1573]
	SVECTOR(  -23,   155,     3);	// vert[1574]
	SVECTOR(  -22,   161,   -16);	// vert[1575]
	SVECTOR(   72,   370,     7);	// vert[1576]
	SVECTOR( -102,   286,     2);	// vert[1577]
	SVECTOR(   73,   363,    14);	// vert[1578]
	SVECTOR(  -73,   394,   -78);	// vert[1579]
	SVECTOR(   71,   357,     8);	// vert[1580]
	SVECTOR(   72,   358,    16);	// vert[1581]
	SVECTOR(  -29,   321,  -153);	// vert[1582]
	SVECTOR(    1,   390,  -150);	// vert[1583]
	SVECTOR(  -60,   408,  -112);	// vert[1584]
	SVECTOR(  -19,   368,     9);	// vert[1585]
	SVECTOR(  -15,   359,     1);	// vert[1586]
	SVECTOR(  -11,   357,    -5);	// vert[1587]
	SVECTOR(   74,    16,    35);	// vert[1588]
	SVECTOR(   69,    40,    36);	// vert[1589]
	SVECTOR(   77,    19,     5);	// vert[1590]
	SVECTOR(   74,    45,     7);	// vert[1591]
	SVECTOR(   19,    29,    58);	// vert[1592]
	SVECTOR(   38,    38,    58);	// vert[1593]
	SVECTOR(   -4,    28,    52);	// vert[1594]
	SVECTOR(   13,    40,    56);	// vert[1595]
	SVECTOR(   63,    -1,    61);	// vert[1596]
	SVECTOR(   75,     0,    28);	// vert[1597]
	SVECTOR(   61,   -16,    57);	// vert[1598]
	SVECTOR(   36,    22,    62);	// vert[1599]
	SVECTOR(    0,    23,    53);	// vert[1600]
	SVECTOR(   19,    20,    57);	// vert[1601]
	SVECTOR(   52,     8,    66);	// vert[1602]
	SVECTOR(   31,    17,    60);	// vert[1603]
	SVECTOR(   43,     6,    63);	// vert[1604]
	SVECTOR(   53,   -14,    62);	// vert[1605]
	SVECTOR(   46,    -3,    63);	// vert[1606]
	SVECTOR(   68,    51,    30);	// vert[1607]
	SVECTOR(   36,    47,    56);	// vert[1608]
	SVECTOR(   24,    50,   -73);	// vert[1609]
	SVECTOR(   44,    62,   -63);	// vert[1610]
	SVECTOR(    0,    48,   -75);	// vert[1611]
	SVECTOR(   20,    63,   -69);	// vert[1612]
	SVECTOR(   78,    -2,   -33);	// vert[1613]
	SVECTOR(   78,   -19,   -10);	// vert[1614]
	SVECTOR(   75,    -1,   -69);	// vert[1615]
	SVECTOR(  -27,   404,  -145);	// vert[1616]
	SVECTOR(   71,   -23,   -71);	// vert[1617]
	SVECTOR(   45,    43,   -74);	// vert[1618]
	SVECTOR(   69,    21,   -75);	// vert[1619]
	SVECTOR(   43,    40,   -77);	// vert[1620]
	SVECTOR(   65,    20,   -78);	// vert[1621]
	SVECTOR(    3,    44,   -77);	// vert[1622]
	SVECTOR(   25,    44,   -78);	// vert[1623]
	SVECTOR(   68,   -18,   -78);	// vert[1624]
	SVECTOR(   68,     2,   -79);	// vert[1625]
	SVECTOR(   70,    65,   -26);	// vert[1626]
	SVECTOR(   71,    77,     1);	// vert[1627]
	SVECTOR(   42,    74,   -62);	// vert[1628]
	SVECTOR(   68,    85,   -25);	// vert[1629]
	SVECTOR(  -43,    22,   -15);	// vert[1630]
	SVECTOR(  -40,    49,   -12);	// vert[1631]
	SVECTOR(  -44,    21,     9);	// vert[1632]
	SVECTOR(  -38,    45,    12);	// vert[1633]
	SVECTOR(  -40,     3,   -47);	// vert[1634]
	SVECTOR(  -29,    20,   -74);	// vert[1635]
	SVECTOR(  -39,   -19,   -54);	// vert[1636]
	SVECTOR(  -32,    -1,   -77);	// vert[1637]
	SVECTOR(  -44,     4,     3);	// vert[1638]
	SVECTOR(  -43,   -17,   -28);	// vert[1639]
	SVECTOR(  -25,    17,   -80);	// vert[1640]
	SVECTOR(  -31,    69,   -39);	// vert[1641]
	SVECTOR(  -36,    58,     8);	// vert[1642]
	SVECTOR(  -34,    83,   -17);	// vert[1643]

SharedVert_0000:	// 0x0000e710
	SVECTOR(   67,   547,  -116);	// shared vert[0]
	SVECTOR(  -23,   545,  -130);	// shared vert[1]
	SVECTOR(   23,   550,     1);	// shared vert[2]
	SVECTOR(   48,   551,     1);	// shared vert[3]
	SVECTOR(   62,   545,    -6);	// shared vert[4]
	SVECTOR(   73,   543,   -30);	// shared vert[5]
	SVECTOR(   74,   549,   -99);	// shared vert[6]
	SVECTOR(   54,   540,  -125);	// shared vert[7]
	SVECTOR(   -2,   543,  -134);	// shared vert[8]
	SVECTOR(  -23,   535,  -124);	// shared vert[9]
	SVECTOR(   -6,   551,    -7);	// shared vert[10]
	SVECTOR(  -35,   544,   -25);	// shared vert[11]
	SVECTOR(  -13,   547,    -9);	// shared vert[12]
	SVECTOR(  -43,   543,   -51);	// shared vert[13]
	SVECTOR(   37,   549,  -135);	// shared vert[14]
	SVECTOR(   46,   544,  -131);	// shared vert[15]
	SVECTOR(   41,   547,  -133);	// shared vert[16]
	SVECTOR(  -35,   538,  -106);	// shared vert[17]
	SVECTOR(  -42,   541,   -81);	// shared vert[18]
	SVECTOR(   -2,   547,  -136);	// shared vert[19]
	SVECTOR(   15,   547,  -136);	// shared vert[20]
	SVECTOR(   76,   541,   -63);	// shared vert[21]
	SVECTOR(   73,   539,   -92);	// shared vert[22]
	SVECTOR(   10,   554,    -1);	// shared vert[23]

SharedVert_0001:	// 0x0000e7d0
	SVECTOR(   60,   384,    49);	// shared vert[0]
	SVECTOR(   67,   -35,    42);	// shared vert[1]
	SVECTOR(  -38,   -34,    26);	// shared vert[2]
	SVECTOR(   53,   -32,   -84);	// shared vert[3]
	SVECTOR(   15,   386,    45);	// shared vert[4]
	SVECTOR(  -19,   380,    20);	// shared vert[5]
	SVECTOR(   71,   376,    11);	// shared vert[6]
	SVECTOR(  -16,   365,     1);	// shared vert[7]
	SVECTOR(   -8,   360,   -12);	// shared vert[8]
	SVECTOR(   77,   -38,   -23);	// shared vert[9]
	SVECTOR(   60,   -36,   -79);	// shared vert[10]
	SVECTOR(  -41,   -37,   -40);	// shared vert[11]
	SVECTOR(  -16,   -35,   -86);	// shared vert[12]
	SVECTOR(    4,   -33,    47);	// shared vert[13]
	SVECTOR(   11,   -40,   -88);	// shared vert[14]
	SVECTOR(   43,   394,    54);	// shared vert[15]
	SVECTOR(   61,   395,    49);	// shared vert[16]
	SVECTOR(   65,   384,    31);	// shared vert[17]
	SVECTOR(    0,   386,    37);	// shared vert[18]
	SVECTOR(   -7,   377,    32);	// shared vert[19]
	SVECTOR(  -16,   383,    23);	// shared vert[20]
	SVECTOR(  -15,   377,    28);	// shared vert[21]
	SVECTOR(   49,   350,   -27);	// shared vert[22]
	SVECTOR(   41,   346,   -30);	// shared vert[23]
	SVECTOR(   15,   343,   -30);	// shared vert[24]
	SVECTOR(    8,   346,   -26);	// shared vert[25]
	SVECTOR(   66,   359,   -13);	// shared vert[26]
	SVECTOR(   69,   362,    -7);	// shared vert[27]
	SVECTOR(  -20,   378,    17);	// shared vert[28]
	SVECTOR(  -19,   377,    12);	// shared vert[29]
	SVECTOR(   75,   -36,     9);	// shared vert[30]
	SVECTOR(   56,   -30,    54);	// shared vert[31]
	SVECTOR(   73,   -30,   -61);	// shared vert[32]
	SVECTOR(   64,   -39,   -74);	// shared vert[33]
	SVECTOR(  -33,   -22,   -72);	// shared vert[34]
	SVECTOR(  -34,   -40,   -63);	// shared vert[35]
	SVECTOR(  -29,   -23,   -82);	// shared vert[36]
	SVECTOR(  -19,   -38,   -84);	// shared vert[37]
	SVECTOR(  -43,   -35,   -10);	// shared vert[38]
	SVECTOR(  -15,   -35,    39);	// shared vert[39]
	SVECTOR(   35,   -35,    54);	// shared vert[40]
	SVECTOR(   56,   -33,   -82);	// shared vert[41]
	SVECTOR(   31,   -39,   -86);	// shared vert[42]
	SVECTOR(   22,   394,    50);	// shared vert[43]
	SVECTOR(   69,   381,    27);	// shared vert[44]
	SVECTOR(   70,   379,    15);	// shared vert[45]
	SVECTOR(   56,   355,   -22);	// shared vert[46]
	SVECTOR(   62,   357,   -18);	// shared vert[47]
	SVECTOR(   33,   342,   -32);	// shared vert[48]
	SVECTOR(   24,   341,   -32);	// shared vert[49]
	SVECTOR(    2,   352,   -20);	// shared vert[50]
	SVECTOR(   -2,   361,   -18);	// shared vert[51]
	SVECTOR(   71,   372,     1);	// shared vert[52]
	SVECTOR(   71,   366,     0);	// shared vert[53]
	SVECTOR(  -16,   372,     3);	// shared vert[54]
	SVECTOR(  -19,   373,    11);	// shared vert[55]
	SVECTOR(  -12,   363,    -6);	// shared vert[56]
	SVECTOR(   78,   -24,   -39);	// shared vert[57]
	SVECTOR(   26,   -31,    54);	// shared vert[58]
	SVECTOR(   -2,   -40,   -87);	// shared vert[59]

SharedVert_0002:	// 0x0000e9b0
	SVECTOR(  -11,   -55,    19);	// shared vert[0]
	SVECTOR(   26,   -39,    47);	// shared vert[1]
	SVECTOR(   65,   -38,    44);	// shared vert[2]
	SVECTOR(   68,   -60,     9);	// shared vert[3]
	SVECTOR(   51,   -78,   -38);	// shared vert[4]
	SVECTOR(   64,   -76,   -29);	// shared vert[5]
	SVECTOR(   33,   -80,   -42);	// shared vert[6]
	SVECTOR(   15,   -81,   -40);	// shared vert[7]
	SVECTOR(    2,   -81,   -31);	// shared vert[8]
	SVECTOR(   70,   -73,   -15);	// shared vert[9]
	SVECTOR(  -17,   -65,     0);	// shared vert[10]
	SVECTOR(   68,   -50,    23);	// shared vert[11]
	SVECTOR(   65,   -55,    16);	// shared vert[12]
	SVECTOR(   -5,   -47,    22);	// shared vert[13]
	SVECTOR(  -12,   -56,     6);	// shared vert[14]
	SVECTOR(   69,   -62,    -1);	// shared vert[15]
	SVECTOR(   70,   -65,    -2);	// shared vert[16]
	SVECTOR(   70,   -68,   -11);	// shared vert[17]
	SVECTOR(   -3,   -73,   -26);	// shared vert[18]
	SVECTOR(  -13,   -65,    -9);	// shared vert[19]
	SVECTOR(  -12,   -72,   -13);	// shared vert[20]
	SVECTOR(   -8,   -75,   -20);	// shared vert[21]
	SVECTOR(    8,   -39,    38);	// shared vert[22]
	SVECTOR(   47,   -39,    49);	// shared vert[23]
	SVECTOR(    5,   -47,    34);	// shared vert[24]
	SVECTOR(   71,   -42,    26);	// shared vert[25]
	SVECTOR(   66,   -57,     4);	// shared vert[26]
	SVECTOR(   58,   -76,   -34);	// shared vert[27]
	SVECTOR(   42,   -79,   -41);	// shared vert[28]
	SVECTOR(   67,   -75,   -22);	// shared vert[29]
	SVECTOR(   24,   -81,   -42);	// shared vert[30]
	SVECTOR(    8,   -82,   -36);	// shared vert[31]
	SVECTOR(  -15,   -59,     6);	// shared vert[32]
	SVECTOR(  -18,   -62,     5);	// shared vert[33]

CalcedVert_0000:	// 0x0000eac0
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[0]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[1]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[2]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[3]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[4]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[5]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[6]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[7]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[8]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[9]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[10]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[11]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[12]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[13]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[14]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[15]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[16]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[17]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[18]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[19]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[20]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[21]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[22]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[23]

CalcedVert_0001:	// 0x0000eb80
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[0]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[1]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[2]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[3]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[4]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[5]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[6]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[7]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[8]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[9]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[10]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[11]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[12]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[13]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[14]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[15]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[16]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[17]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[18]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[19]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[20]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[21]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[22]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[23]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[24]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[25]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[26]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[27]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[28]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[29]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[30]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[31]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[32]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[33]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[34]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[35]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[36]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[37]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[38]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[39]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[40]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[41]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[42]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[43]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[44]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[45]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[46]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[47]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[48]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[49]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[50]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[51]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[52]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[53]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[54]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[55]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[56]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[57]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[58]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[59]

CalcedVert_0002:	// 0x0000ed60
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[0]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[1]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[2]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[3]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[4]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[5]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[6]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[7]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[8]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[9]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[10]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[11]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[12]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[13]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[14]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[15]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[16]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[17]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[18]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[19]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[20]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[21]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[22]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[23]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[24]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[25]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[26]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[27]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[28]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[29]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[30]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[31]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[32]
	H(0); H(0); H(0); H(0);	// vx, vy, otz, p; calced vert[33]

Norm_0000:	// 0x0000ee70
	SVECTOR( 2035, -1420,  3258);	// norm[0]
	SVECTOR(  246, -1747,  3696);	// norm[1]
	SVECTOR(  740,   575,  3987);	// norm[2]
	SVECTOR( -931,   705,  3925);	// norm[3]
	SVECTOR(-1667, -1507,  3423);	// norm[4]
	SVECTOR( -687,  1497,  3750);	// norm[5]
	SVECTOR(-2449,   528,  3240);	// norm[6]
	SVECTOR(-1927,  1512,  3282);	// norm[7]
	SVECTOR(-3308,  1071,  2164);	// norm[8]
	SVECTOR(-3087,  -803,  2569);	// norm[9]
	SVECTOR(-3365,   -74,  2333);	// norm[10]
	SVECTOR(-3380,  -538,  2249);	// norm[11]
	SVECTOR(-1961,  1643,  3197);	// norm[12]
	SVECTOR(-3161,  1599,  2054);	// norm[13]
	SVECTOR(-3132,  1405,  2233);	// norm[14]
	SVECTOR( 3032,   353,  2730);	// norm[15]
	SVECTOR( 1299,  1535,  3568);	// norm[16]
	SVECTOR( 3318,  1275,  2034);	// norm[17]
	SVECTOR( -522,  1781,  3650);	// norm[18]
	SVECTOR( 1584,  1908,  3259);	// norm[19]
	SVECTOR( -475,  1799,  3648);	// norm[20]
	SVECTOR(-2068,  1481,  3210);	// norm[21]
	SVECTOR( 3334,  1621,  1740);	// norm[22]
	SVECTOR( 1592,  1979,  3213);	// norm[23]
	SVECTOR( 3179,  1625,  2007);	// norm[24]
	SVECTOR( 1256,  1731,  3492);	// norm[25]
	SVECTOR( -460,  1735,  3681);	// norm[26]
	SVECTOR( -584,  1369,  3815);	// norm[27]
	SVECTOR(-2080,  1303,  3278);	// norm[28]
	SVECTOR(-2032,   967,  3421);	// norm[29]
	SVECTOR(-3364,   626,  2250);	// norm[30]
	SVECTOR(-3314,  1049,  2165);	// norm[31]
	SVECTOR( -809,  4013,   128);	// norm[32]
	SVECTOR(   42,  4029,   732);	// norm[33]
	SVECTOR( -630,  3727,  1576);	// norm[34]
	SVECTOR(  821,  3963,   625);	// norm[35]
	SVECTOR( -665,   665,  3986);	// norm[36]
	SVECTOR( -761,  3971,   649);	// norm[37]
	SVECTOR(  710,  -242,  4026);	// norm[38]
	SVECTOR(  852,  1077,  3858);	// norm[39]
	SVECTOR( 2822,   508,  2924);	// norm[40]
	SVECTOR( -989, -3773, -1249);	// norm[41]
	SVECTOR( -900, -3940,  -661);	// norm[42]
	SVECTOR( -810, -4002,  -317);	// norm[43]
	SVECTOR( 2942,  1339,  2515);	// norm[44]
	SVECTOR( 3622,  -629, -1805);	// norm[45]
	SVECTOR( 3743, -1122, -1224);	// norm[46]
	SVECTOR( 3924,    54, -1170);	// norm[47]
	SVECTOR( 4090,   128,  -175);	// norm[48]
	SVECTOR( 3781, -1571,   -71);	// norm[49]
	SVECTOR( 4011,   748,  -349);	// norm[50]
	SVECTOR( 4001,   133,   864);	// norm[51]
	SVECTOR( 3964,   907,   484);	// norm[52]
	SVECTOR( 3409, -1760,  1433);	// norm[53]
	SVECTOR( 3894,  1180,   465);	// norm[54]
	SVECTOR( 3848,  1181,   753);	// norm[55]
	SVECTOR( 3957,   994,  -359);	// norm[56]
	SVECTOR( 3966,   963,  -338);	// norm[57]
	SVECTOR( 3683,   830, -1587);	// norm[58]
	SVECTOR( 3810,   630, -1365);	// norm[59]
	SVECTOR( 2851,   314, -2923);	// norm[60]
	SVECTOR( 3714,   834, -1511);	// norm[61]
	SVECTOR( 2739,   664, -2972);	// norm[62]
	SVECTOR( 2755,   599, -2970);	// norm[63]
	SVECTOR( 3342,  -267, -2352);	// norm[64]
	SVECTOR( 3874,   515, -1226);	// norm[65]
	SVECTOR( 4018,   770,  -195);	// norm[66]
	SVECTOR( 4085,   245,  -147);	// norm[67]
	SVECTOR( 3895,   926,   863);	// norm[68]
	SVECTOR( 3950,   283,  1044);	// norm[69]
	SVECTOR(  -28, -4038,  -684);	// norm[70]
	SVECTOR( 3164,   293, -2583);	// norm[71]
	SVECTOR( 3977,  -126,  -968);	// norm[72]
	SVECTOR( 3265,  -484, -2424);	// norm[73]
	SVECTOR( -829, -3986,  -441);	// norm[74]
	SVECTOR(  -42, -4082,  -325);	// norm[75]
	SVECTOR( -798, -4011,  -211);	// norm[76]
	SVECTOR(  -21, -4089,  -234);	// norm[77]
	SVECTOR( 3233, -1291, -2157);	// norm[78]
	SVECTOR(  -39, -4086,  -272);	// norm[79]
	SVECTOR( -842, -3988,  -402);	// norm[80]
	SVECTOR(  911,   465, -3965);	// norm[81]
	SVECTOR( 1131,   434, -3912);	// norm[82]
	SVECTOR(  112,   410, -4073);	// norm[83]
	SVECTOR( -334,   599, -4038);	// norm[84]
	SVECTOR(  243,   -42, -4088);	// norm[85]
	SVECTOR(-1287,   562, -3847);	// norm[86]
	SVECTOR(-1040,    74, -3961);	// norm[87]
	SVECTOR(-2571,   433, -3158);	// norm[88]
	SVECTOR(-1890,   778, -3549);	// norm[89]
	SVECTOR(-2903,   795, -2777);	// norm[90]
	SVECTOR(-3150,   863, -2471);	// norm[91]
	SVECTOR( -839,  -908, -3904);	// norm[92]
	SVECTOR(-2616,  -302, -3137);	// norm[93]
	SVECTOR(-2272, -2016, -2747);	// norm[94]
	SVECTOR( 2870, -1562, -2469);	// norm[95]
	SVECTOR( 1829,  -745, -3588);	// norm[96]
	SVECTOR( 1084, -2575, -2994);	// norm[97]
	SVECTOR( 1265,    53, -3895);	// norm[98]
	SVECTOR(  422,  -991, -3951);	// norm[99]
	SVECTOR( -506, -2735, -3006);	// norm[100]
	SVECTOR(  855, -3982,  -432);	// norm[101]
	SVECTOR(  686, -4030,  -248);	// norm[102]
	SVECTOR( -537,  -439, -4036);	// norm[103]
	SVECTOR( -965,   205, -3975);	// norm[104]
	SVECTOR(-2761,   254, -3014);	// norm[105]
	SVECTOR(  440,   231, -4065);	// norm[106]
	SVECTOR(-1316,   673, -3819);	// norm[107]
	SVECTOR(  148,   512, -4061);	// norm[108]
	SVECTOR(-2906,   774, -2780);	// norm[109]
	SVECTOR( 1360,   392, -3843);	// norm[110]
	SVECTOR( 1757,    46, -3699);	// norm[111]
	SVECTOR( 1869, -1060, -3486);	// norm[112]
	SVECTOR(  645,  -415, -4023);	// norm[113]
	SVECTOR(  809, -1321, -3791);	// norm[114]
	SVECTOR(  -53, -3815, -1489);	// norm[115]
	SVECTOR( -119,  -908, -3992);	// norm[116]
	SVECTOR(-3882,  1176,   566);	// norm[117]
	SVECTOR(-3951,  1002,   397);	// norm[118]
	SVECTOR(-3981,   621,  -734);	// norm[119]
	SVECTOR(-3990,   158,   911);	// norm[120]
	SVECTOR(-4032,  -122,  -710);	// norm[121]
	SVECTOR(-3545, -2048,    81);	// norm[122]
	SVECTOR(-3536,  -987,  1815);	// norm[123]
	SVECTOR(-3697,  -349, -1727);	// norm[124]
	SVECTOR(-3005, -2391, -1422);	// norm[125]
	SVECTOR(-3641,   379, -1837);	// norm[126]
	SVECTOR(-3693,   775, -1592);	// norm[127]
	SVECTOR(-3962,   891,  -531);	// norm[128]
	SVECTOR(-3990,   831,  -400);	// norm[129]
	SVECTOR(-3727,   826, -1484);	// norm[130]
	SVECTOR(-3909,   975,   735);	// norm[131]
	SVECTOR(-3701,   814, -1553);	// norm[132]
	SVECTOR(-3727,   455, -1634);	// norm[133]
	SVECTOR(-4024,   529,  -544);	// norm[134]
	SVECTOR(  881, -3882,  -962);	// norm[135]
	SVECTOR( 1015, -3489, -1889);	// norm[136]
	SVECTOR( -765, -4022,  -106);	// norm[137]
	SVECTOR(   -4, -4090,  -209);	// norm[138]
	SVECTOR( -780,  3839,  1194);	// norm[139]
	SVECTOR(  639, -4044,   -94);	// norm[140]
	SVECTOR(-3996,   735,  -512);	// norm[141]
	SVECTOR(-4015,   354,   727);	// norm[142]
	SVECTOR(-3959,   710,   768);	// norm[143]
	SVECTOR(-2760,   923,  2881);	// norm[144]
	SVECTOR(-3051,  1043,  2524);	// norm[145]
	SVECTOR(-1830,   738,  3589);	// norm[146]
	SVECTOR(-2050,   676,  3480);	// norm[147]
	SVECTOR(-3241,   756,  2386);	// norm[148]
	SVECTOR( -882,   503,  3967);	// norm[149]
	SVECTOR(-2176,   456,  3439);	// norm[150]
	SVECTOR( -979,   441,  3952);	// norm[151]
	SVECTOR( -999,   399,  3952);	// norm[152]
	SVECTOR(-3367,   516,  2273);	// norm[153]
	SVECTOR(-2246,   390,  3402);	// norm[154]
	SVECTOR(-3465,   470,  2131);	// norm[155]
	SVECTOR(  493,   466,  4039);	// norm[156]
	SVECTOR(  494,   458,  4040);	// norm[157]
	SVECTOR( 2387,   504,  3289);	// norm[158]
	SVECTOR(-1602,   563,  3727);	// norm[159]
	SVECTOR( -816,   608,  3967);	// norm[160]
	SVECTOR( -862,   679,  3946);	// norm[161]
	SVECTOR(  438,   728,  4006);	// norm[162]
	SVECTOR(  231,  1393,  3844);	// norm[163]
	SVECTOR( 2096,  1380,  3236);	// norm[164]
	SVECTOR( 2495,   693,  3172);	// norm[165]
	SVECTOR(  -86,  1397,  3849);	// norm[166]
	SVECTOR( 2001,  2050,  2926);	// norm[167]
	SVECTOR( 1744,  1490,  3392);	// norm[168]
	SVECTOR(-3565,   490,  1954);	// norm[169]
	SVECTOR(-2362,   402,  3321);	// norm[170]
	SVECTOR(-2465,   396,  3246);	// norm[171]
	SVECTOR(-3610,   461,  1878);	// norm[172]
	SVECTOR(-1075,   323,  3939);	// norm[173]
	SVECTOR(-2435,   308,  3278);	// norm[174]
	SVECTOR(-1121,   233,  3932);	// norm[175]
	SVECTOR(-1165,    -7,  3926);	// norm[176]
	SVECTOR(-3606,   352,  1908);	// norm[177]
	SVECTOR(-2286,    71,  3397);	// norm[178]
	SVECTOR(-3627,  -333,  1871);	// norm[179]
	SVECTOR(  512,   154,  4060);	// norm[180]
	SVECTOR(  382,  -239,  4071);	// norm[181]
	SVECTOR( 3098,  -427,  2644);	// norm[182]
	SVECTOR( 2586,   470,  3140);	// norm[183]
	SVECTOR(  532,   414,  4040);	// norm[184]
	SVECTOR( 2624,   338,  3126);	// norm[185]
	SVECTOR(-1009,   371,  3952);	// norm[186]
	SVECTOR(  547,   303,  4047);	// norm[187]
	SVECTOR( 2691,   151,  3084);	// norm[188]
	SVECTOR( 3454,  1567, -1545);	// norm[189]
	SVECTOR( 4076,   389,   -63);	// norm[190]
	SVECTOR( 3963,   952,  -397);	// norm[191]
	SVECTOR( 4008,   713,   449);	// norm[192]
	SVECTOR( 4022,   556,   535);	// norm[193]
	SVECTOR( 4028,   651,   347);	// norm[194]
	SVECTOR( 3611,  1276,  1449);	// norm[195]
	SVECTOR( 3693,   891,  1529);	// norm[196]
	SVECTOR( 3606,  1170,  1548);	// norm[197]
	SVECTOR( 3784,   538,  1471);	// norm[198]
	SVECTOR( 3024,  1701, -2176);	// norm[199]
	SVECTOR( 3936,   853,  -746);	// norm[200]
	SVECTOR( 3271,   930, -2282);	// norm[201]
	SVECTOR( 4059,   468,   278);	// norm[202]
	SVECTOR( 3981,   405,  -872);	// norm[203]
	SVECTOR( 4073,   345,   252);	// norm[204]
	SVECTOR( 3811,   428,  1437);	// norm[205]
	SVECTOR( 3325,   317, -2370);	// norm[206]
	SVECTOR( 3997,   277,  -848);	// norm[207]
	SVECTOR( 3128,   343, -2620);	// norm[208]
	SVECTOR( 4014,   273,  -767);	// norm[209]
	SVECTOR( 4077,   289,   256);	// norm[210]
	SVECTOR( 4087,   235,   134);	// norm[211]
	SVECTOR( 3823,   352,  1427);	// norm[212]
	SVECTOR( 3853,   229,  1369);	// norm[213]
	SVECTOR( 3950,   120,  1075);	// norm[214]
	SVECTOR( 4049,  -186,   588);	// norm[215]
	SVECTOR( 4090,   182,    94);	// norm[216]
	SVECTOR( 4088,   -38,  -241);	// norm[217]
	SVECTOR( 3982,   278,  -916);	// norm[218]
	SVECTOR( 4026,   293,  -689);	// norm[219]
	SVECTOR( 3485,   430, -2107);	// norm[220]
	SVECTOR( 3895,     4, -1265);	// norm[221]
	SVECTOR( 3385,   350, -2279);	// norm[222]
	SVECTOR( 2972,  -134, -2814);	// norm[223]
	SVECTOR( 3456,   412, -2159);	// norm[224]
	SVECTOR(-3078,  1275, -2381);	// norm[225]
	SVECTOR( -850,  1753, -3602);	// norm[226]
	SVECTOR( -991,  1041, -3835);	// norm[227]
	SVECTOR(  363,   996, -3956);	// norm[228]
	SVECTOR(  388,  1687, -3711);	// norm[229]
	SVECTOR(  276,   595, -4042);	// norm[230]
	SVECTOR( 1593,  1324, -3533);	// norm[231]
	SVECTOR( 1673,   554, -3697);	// norm[232]
	SVECTOR( 1473,  1940, -3292);	// norm[233]
	SVECTOR( 1459,   424, -3803);	// norm[234]
	SVECTOR(-2727,  1217, -2802);	// norm[235]
	SVECTOR(-1130,   794, -3856);	// norm[236]
	SVECTOR(-2775,   869, -2884);	// norm[237]
	SVECTOR(   59,   593, -4052);	// norm[238]
	SVECTOR(-1315,   682, -3818);	// norm[239]
	SVECTOR( -283,   643, -4035);	// norm[240]
	SVECTOR(  968,   537, -3943);	// norm[241]
	SVECTOR(-2862,   735, -2836);	// norm[242]
	SVECTOR(-1669,   727, -3668);	// norm[243]
	SVECTOR(-2968,   752, -2719);	// norm[244]
	SVECTOR(-2158,   119, -3479);	// norm[245]
	SVECTOR(-1960,   616, -3543);	// norm[246]
	SVECTOR( -582,   533, -4019);	// norm[247]
	SVECTOR( -612,   667, -3994);	// norm[248]
	SVECTOR(-2096,   751, -3437);	// norm[249]
	SVECTOR(  472,   584, -4026);	// norm[250]
	SVECTOR( -958,   725, -3915);	// norm[251]
	SVECTOR(  257,   621, -4040);	// norm[252]
	SVECTOR(-2481,   787, -3161);	// norm[253]
	SVECTOR( 1558,   521, -3751);	// norm[254]
	SVECTOR( 1910,   543, -3582);	// norm[255]
	SVECTOR( 2000,   479, -3541);	// norm[256]
	SVECTOR(  577,   503, -4023);	// norm[257]
	SVECTOR(  631,   227, -4040);	// norm[258]
	SVECTOR( 1945,   200, -3598);	// norm[259]
	SVECTOR( -677,   183, -4035);	// norm[260]
	SVECTOR(-3834,   903, -1121);	// norm[261]
	SVECTOR(-3713,   913, -1466);	// norm[262]
	SVECTOR(-4004,   802,  -314);	// norm[263]
	SVECTOR(-3743,   695, -1509);	// norm[264]
	SVECTOR(-4010,   682,  -477);	// norm[265]
	SVECTOR(-4021,   592,  -502);	// norm[266]
	SVECTOR(-3689,   653, -1654);	// norm[267]
	SVECTOR(-3984,   587,   743);	// norm[268]
	SVECTOR(-4025,   551,   521);	// norm[269]
	SVECTOR(-3987,   525,  -773);	// norm[270]
	SVECTOR(-4024,   749,  -144);	// norm[271]
	SVECTOR(-4046,   630,    45);	// norm[272]
	SVECTOR(-3941,   753,   822);	// norm[273]
	SVECTOR(-3841,   934,  1071);	// norm[274]
	SVECTOR(-3793,   928,  1234);	// norm[275]
	SVECTOR(-4062,   495,  -154);	// norm[276]
	SVECTOR(-4054,   524,   244);	// norm[277]
	SVECTOR(-3898,   647, -1076);	// norm[278]
	SVECTOR(-4037,   538,   434);	// norm[279]
	SVECTOR(-3992,   608,  -685);	// norm[280]
	SVECTOR(-3543,   732, -1920);	// norm[281]
	SVECTOR(-3300,   748, -2308);	// norm[282]
	SVECTOR(-3161,   650, -2522);	// norm[283]
	SVECTOR(-3751,   629, -1517);	// norm[284]
	SVECTOR(-3708,   352, -1702);	// norm[285]
	SVECTOR(-3138,   319, -2612);	// norm[286]
	SVECTOR(-4053,   177,  -559);	// norm[287]
	SVECTOR(-3938,  -290,  1086);	// norm[288]
	SVECTOR(-2778,  -570,  2955);	// norm[289]
	SVECTOR(-3143,   -32,  2626);	// norm[290]
	SVECTOR(-3852,   195,  1377);	// norm[291]
	SVECTOR(-1855,  -389,  3630);	// norm[292]
	SVECTOR(-2874,   244,  2907);	// norm[293]
	SVECTOR(-1975,  -186,  3583);	// norm[294]
	SVECTOR(-1729,   -97,  3711);	// norm[295]
	SVECTOR(-3497,   655,  2029);	// norm[296]
	SVECTOR(-2288,   475,  3363);	// norm[297]
	SVECTOR(-1145,  -594,  3887);	// norm[298]
	SVECTOR(-1168,  -657,  3870);	// norm[299]
	SVECTOR( -989,  -788,  3895);	// norm[300]
	SVECTOR(-1750, -1087,  3539);	// norm[301]
	SVECTOR(-1476,  -607,  3772);	// norm[302]
	SVECTOR(-1257,  -533,  3861);	// norm[303]
	SVECTOR(-1069,  -565,  3913);	// norm[304]
	SVECTOR(-1064,  -458,  3928);	// norm[305]
	SVECTOR(-1064,  -536,  3918);	// norm[306]
	SVECTOR(-1017,  -655,  3913);	// norm[307]
	SVECTOR(-1133,  -321,  3922);	// norm[308]
	SVECTOR(-1132,  -420,  3913);	// norm[309]
	SVECTOR(-1175,  -359,  3907);	// norm[310]
	SVECTOR(-1055,  -822,  3871);	// norm[311]
	SVECTOR(-1127,  -586,  3893);	// norm[312]
	SVECTOR(-1016,  -408,  3946);	// norm[313]
	SVECTOR(-1377,   129,  3855);	// norm[314]
	SVECTOR( -917,    47,  3991);	// norm[315]
	SVECTOR( -513,   704,  4002);	// norm[316]
	SVECTOR( -113,   603,  4049);	// norm[317]
	SVECTOR( -971,    94,  3978);	// norm[318]
	SVECTOR( -957,  -127,  3980);	// norm[319]
	SVECTOR(-1215,  -393,  3891);	// norm[320]
	SVECTOR(-1167,  -543,  3888);	// norm[321]
	SVECTOR(-1235,  -582,  3861);	// norm[322]
	SVECTOR(-1242,  -458,  3875);	// norm[323]
	SVECTOR(-1283,  -512,  3855);	// norm[324]
	SVECTOR(-1292,  -497,  3854);	// norm[325]
	SVECTOR(-1133,  -692,  3874);	// norm[326]
	SVECTOR( 3555,   298,  2011);	// norm[327]
	SVECTOR( 1722,    31,  3716);	// norm[328]
	SVECTOR( 2633,  -823,  3027);	// norm[329]
	SVECTOR( 3722,  -467,  1644);	// norm[330]
	SVECTOR(  403,  -727,  4010);	// norm[331]
	SVECTOR( 2413, -1335,  3028);	// norm[332]
	SVECTOR(  707, -1209,  3848);	// norm[333]
	SVECTOR(  311, -1491,  3802);	// norm[334]
	SVECTOR( 3592,  -839,  1780);	// norm[335]
	SVECTOR(  -36, -4087,  -254);	// norm[336]
	SVECTOR( -846,  -629,  3957);	// norm[337]
	SVECTOR( -838,  -701,  3947);	// norm[338]
	SVECTOR(-1246,  -354,  3885);	// norm[339]
	SVECTOR( -405,  -248,  4068);	// norm[340]
	SVECTOR(-1007,  -503,  3938);	// norm[341]
	SVECTOR(-1146,  -452,  3906);	// norm[342]
	SVECTOR(-1267,  -480,  3865);	// norm[343]
	SVECTOR(-1254,  -438,  3874);	// norm[344]
	SVECTOR(-1283,  -496,  3858);	// norm[345]
	SVECTOR(-1246,  -208,  3895);	// norm[346]
	SVECTOR(  664, -4040,  -116);	// norm[347]
	SVECTOR(  682, -4034,  -192);	// norm[348]
	SVECTOR( -641,  3709, -1613);	// norm[349]
	SVECTOR(   76,  3898,  1255);	// norm[350]
	SVECTOR(  316,  3744, -1629);	// norm[351]
	SVECTOR(-1339,  -624,  3820);	// norm[352]
	SVECTOR(-1206,  -258,  3905);	// norm[353]
	SVECTOR(-1257,  -184,  3893);	// norm[354]
	SVECTOR(-1258,  -242,  3890);	// norm[355]
	SVECTOR(-1207,  -303,  3902);	// norm[356]
	SVECTOR(-1274,  -267,  3883);	// norm[357]
	SVECTOR(  762,   233, -4017);	// norm[358]
	SVECTOR(  943,    41, -3985);	// norm[359]
	SVECTOR( 1026,   265, -3956);	// norm[360]
	SVECTOR( 1664,    27, -3742);	// norm[361]
	SVECTOR( 1360,  -423, -3840);	// norm[362]
	SVECTOR( 1524,   456, -3773);	// norm[363]
	SVECTOR( 2201,  -258, -3444);	// norm[364]
	SVECTOR( 2157,   373, -3461);	// norm[365]
	SVECTOR( 2188,   295, -3449);	// norm[366]
	SVECTOR( 1690,  -904, -3619);	// norm[367]
	SVECTOR( 2204,  -396, -3428);	// norm[368]
	SVECTOR(   91,  4068,  -460);	// norm[369]
	SVECTOR( 1785,   923, -3568);	// norm[370]
	SVECTOR( 1949,   917, -3483);	// norm[371]
	SVECTOR( 1313,  1486, -3583);	// norm[372]
	SVECTOR( 1036,  1247, -3761);	// norm[373]
	SVECTOR( 1125,   762, -3863);	// norm[374]
	SVECTOR(  651,   890, -3944);	// norm[375]
	SVECTOR(  635,   636, -3995);	// norm[376]
	SVECTOR(  862,   491, -3973);	// norm[377]
	SVECTOR(  524,   504, -4030);	// norm[378]
	SVECTOR(  440,   688, -4013);	// norm[379]
	SVECTOR(  422,   598, -4030);	// norm[380]
	SVECTOR(  385,   633, -4028);	// norm[381]
	SVECTOR(  662,   353, -4026);	// norm[382]
	SVECTOR(  659,  1803, -3617);	// norm[383]
	SVECTOR(  600,  1583, -3729);	// norm[384]
	SVECTOR(  268,  1685, -3723);	// norm[385]
	SVECTOR(  224,  1936, -3602);	// norm[386]
	SVECTOR(  295,  1299, -3873);	// norm[387]
	SVECTOR(  -94,  1748, -3703);	// norm[388]
	SVECTOR(   76,  1353, -3865);	// norm[389]
	SVECTOR( -224,  1220, -3903);	// norm[390]
	SVECTOR( -265,  2001, -3563);	// norm[391]
	SVECTOR( -588,  1507, -3762);	// norm[392]
	SVECTOR(-1094,  1546, -3631);	// norm[393]
	SVECTOR(  185,  1010, -3965);	// norm[394]
	SVECTOR(   53,   962, -3980);	// norm[395]
	SVECTOR(  159,   862, -4001);	// norm[396]
	SVECTOR(  478,  1168, -3896);	// norm[397]
	SVECTOR(  299,   945, -3974);	// norm[398]
	SVECTOR(  388,   830, -3992);	// norm[399]
	SVECTOR(  299,   729, -4019);	// norm[400]
	SVECTOR(  218,   807, -4009);	// norm[401]
	SVECTOR(  357,   662, -4026);	// norm[402]
	SVECTOR(-1438,   681, -3773);	// norm[403]
	SVECTOR(-1193,   873, -3819);	// norm[404]
	SVECTOR(-1160,   343, -3913);	// norm[405]
	SVECTOR(-1234,   151, -3902);	// norm[406]
	SVECTOR( -794,   445, -3993);	// norm[407]
	SVECTOR( -893,   -96, -3996);	// norm[408]
	SVECTOR( -735,    42, -4029);	// norm[409]
	SVECTOR( -507,  -410, -4043);	// norm[410]
	SVECTOR( -909,  -287, -3983);	// norm[411]
	SVECTOR( -662,  -573, -4001);	// norm[412]
	SVECTOR( -663,  -572, -4001);	// norm[413]
	SVECTOR( -390,   221, -4071);	// norm[414]
	SVECTOR( -325,  -214, -4077);	// norm[415]
	SVECTOR(  -21,   124, -4094);	// norm[416]
	SVECTOR( -585,   852, -3963);	// norm[417]
	SVECTOR( -292,   530, -4050);	// norm[418]
	SVECTOR( -142,   776, -4019);	// norm[419]
	SVECTOR(   63,   589, -4052);	// norm[420]
	SVECTOR(   14,   421, -4074);	// norm[421]
	SVECTOR(  122,   753, -4024);	// norm[422]
	SVECTOR(   47,  -344, -4081);	// norm[423]
	SVECTOR( -104,  -704, -4033);	// norm[424]
	SVECTOR(  276,  -880, -3990);	// norm[425]
	SVECTOR( -232,  -867, -3996);	// norm[426]
	SVECTOR(  189, -1249, -3896);	// norm[427]
	SVECTOR( 1434,  3184, -2140);	// norm[428]
	SVECTOR( -415,  -881, -3978);	// norm[429]
	SVECTOR(  758, -1454, -3753);	// norm[430]
	SVECTOR( 1243,  3850,  -636);	// norm[431]
	SVECTOR(  746,  -793, -3948);	// norm[432]
	SVECTOR(  643,  -207, -4039);	// norm[433]
	SVECTOR(  341,  -322, -4068);	// norm[434]
	SVECTOR(  385,   147, -4075);	// norm[435]
	SVECTOR(  592,   195, -4048);	// norm[436]
	SVECTOR(  220,   126, -4088);	// norm[437]
	SVECTOR(  868,  3988,   341);	// norm[438]
	SVECTOR( 2350,  -472, -3321);	// norm[439]
	SVECTOR( 3091,  -740, -2582);	// norm[440]
	SVECTOR(  289,  3933,  1103);	// norm[441]
	SVECTOR( 3241,    72, -2502);	// norm[442]
	SVECTOR( 3503,  -876, -1933);	// norm[443]
	SVECTOR( 3839,  -212, -1410);	// norm[444]
	SVECTOR( 4026,  -234,  -713);	// norm[445]
	SVECTOR( -205,  4083,   244);	// norm[446]
	SVECTOR( -641,  3960,   822);	// norm[447]
	SVECTOR( 3628,   822, -1712);	// norm[448]
	SVECTOR( 4057,   339,  -441);	// norm[449]
	SVECTOR( 2214,  2202, -2649);	// norm[450]
	SVECTOR( 2667,  1039, -2929);	// norm[451]
	SVECTOR( 1790,  1832, -3195);	// norm[452]
	SVECTOR( 1980,   919, -3465);	// norm[453]
	SVECTOR( 2306,   271, -3373);	// norm[454]
	SVECTOR( 1355,  1538, -3545);	// norm[455]
	SVECTOR( 1252,  2495, -2996);	// norm[456]
	SVECTOR(  441,  1989, -3552);	// norm[457]
	SVECTOR(  343,  2283, -3383);	// norm[458]
	SVECTOR( -557,  2066, -3491);	// norm[459]
	SVECTOR( -349,  2027, -3541);	// norm[460]
	SVECTOR(-1729,  1885, -3198);	// norm[461]
	SVECTOR(-2015,  1823, -3064);	// norm[462]
	SVECTOR( -283,  2011, -3556);	// norm[463]
	SVECTOR(-1365,  1774, -3430);	// norm[464]
	SVECTOR(  944,  2562, -3052);	// norm[465]
	SVECTOR(  229,  2222, -3433);	// norm[466]
	SVECTOR(  755,  2114, -3425);	// norm[467]
	SVECTOR(-1874,  1030, -3493);	// norm[468]
	SVECTOR(-2744,  1187, -2798);	// norm[469]
	SVECTOR(-2791,   352, -2976);	// norm[470]
	SVECTOR(-3224,  1101, -2272);	// norm[471]
	SVECTOR(-3587,   341, -1946);	// norm[472]
	SVECTOR(-3839,   352, -1382);	// norm[473]
	SVECTOR(-3685,   845, -1573);	// norm[474]
	SVECTOR(-1157,  3926,  -151);	// norm[475]
	SVECTOR( -829,  3960,  -632);	// norm[476]
	SVECTOR(-1814,  3665,   219);	// norm[477]
	SVECTOR(-2017,  -392, -3543);	// norm[478]
	SVECTOR(  886, -3988,  -281);	// norm[479]
	SVECTOR(-1272,  -253, -3884);	// norm[480]
	SVECTOR(-1671,   273, -3729);	// norm[481]
	SVECTOR( -704,  -622, -3986);	// norm[482]
	SVECTOR(   98,  3780,  1574);	// norm[483]
	SVECTOR(  277, -1230, -3897);	// norm[484]
	SVECTOR(  159, -1500, -3807);	// norm[485]
	SVECTOR(  800,  3837,  1187);	// norm[486]
	SVECTOR(  788,  3705,  1557);	// norm[487]
	SVECTOR(  790,  3658,  1664);	// norm[488]
	SVECTOR( -754,  3712,  1557);	// norm[489]
	SVECTOR(  108,  3774,  1586);	// norm[490]
	SVECTOR( 1312, -3798,  -792);	// norm[491]
	SVECTOR(-1228,  -420,  3884);	// norm[492]
	SVECTOR(-1208,  -505,  3880);	// norm[493]
	SVECTOR(-1274,  -475,  3863);	// norm[494]
	SVECTOR(-1177,  -579,  3880);	// norm[495]
	SVECTOR(-1258,  -525,  3862);	// norm[496]
	SVECTOR(-1294,  -500,  3853);	// norm[497]
	SVECTOR(-1296,  -464,  3857);	// norm[498]
	SVECTOR(-1288,  -406,  3866);	// norm[499]
	SVECTOR(-1278,  -399,  3870);	// norm[500]
	SVECTOR( 4025,  -374,   655);	// norm[501]
	SVECTOR( 4048,  -212,   586);	// norm[502]
	SVECTOR( 4090,   -10,   213);	// norm[503]
	SVECTOR( 4008,   212,   815);	// norm[504]
	SVECTOR( 4087,   117,   242);	// norm[505]
	SVECTOR( 4084,   289,   -84);	// norm[506]
	SVECTOR( 4094,   104,   -54);	// norm[507]
	SVECTOR(   90, -4001,  -868);	// norm[508]
	SVECTOR( 4088,  -135,   198);	// norm[509]
	SVECTOR(  351,   590, -4037);	// norm[510]
	SVECTOR(  297,   605, -4040);	// norm[511]
	SVECTOR(  298,   517, -4052);	// norm[512]
	SVECTOR(  230,   647, -4037);	// norm[513]
	SVECTOR(  223,   532, -4055);	// norm[514]
	SVECTOR(  215,   406, -4070);	// norm[515]
	SVECTOR(  370,   510, -4047);	// norm[516]
	SVECTOR(  312,   403, -4064);	// norm[517]
	SVECTOR(  430,   394, -4054);	// norm[518]
	SVECTOR(-3981,   531,  -801);	// norm[519]
	SVECTOR(-4065,   288,  -403);	// norm[520]
	SVECTOR(-4074,   126,  -399);	// norm[521]
	SVECTOR(-4038,   461,   505);	// norm[522]
	SVECTOR(-4094,   -21,    89);	// norm[523]
	SVECTOR(-4085,  -258,   124);	// norm[524]
	SVECTOR(-4026,   286,  -694);	// norm[525]
	SVECTOR(-4083,   -17,  -324);	// norm[526]
	SVECTOR(-4001,  -109,  -867);	// norm[527]
	SVECTOR( 3640, -1525,  1094);	// norm[528]
	SVECTOR( 3370, -1915,  1322);	// norm[529]
	SVECTOR( 3535, -1393,  1528);	// norm[530]
	SVECTOR( 2935, -1745,  2260);	// norm[531]
	SVECTOR( 3293, -1925,  1491);	// norm[532]
	SVECTOR( 3222, -1196,  2226);	// norm[533]
	SVECTOR( 2544, -1505,  2834);	// norm[534]
	SVECTOR( 2166, -1503,  3134);	// norm[535]
	SVECTOR(  995, -1159,  3800);	// norm[536]
	SVECTOR( 3459, -1360,  1719);	// norm[537]
	SVECTOR( 1711,  -944,  3599);	// norm[538]
	SVECTOR( 2782,  -649,  2935);	// norm[539]
	SVECTOR(  698, -1068,  3891);	// norm[540]
	SVECTOR( 1836, -3222, -1738);	// norm[541]
	SVECTOR( 3559,  1450,  1416);	// norm[542]
	SVECTOR( 3721,    15,  1710);	// norm[543]
	SVECTOR( 3850,  1058,   911);	// norm[544]
	SVECTOR( 4007,   104,   839);	// norm[545]
	SVECTOR( 3848,  -615,  1259);	// norm[546]
	SVECTOR( 4030,  -423,   595);	// norm[547]
	SVECTOR( 4024,   683,   330);	// norm[548]
	SVECTOR( 4085,   167,   232);	// norm[549]
	SVECTOR( 4068,   468,    70);	// norm[550]
	SVECTOR( 3844, -1104,   880);	// norm[551]
	SVECTOR(-1285,  3791,   866);	// norm[552]
	SVECTOR(  435, -3665, -1774);	// norm[553]
	SVECTOR(  144,  3501, -2120);	// norm[554]
	SVECTOR( 3998,  -854,  -251);	// norm[555]
	SVECTOR(-1384,  3663, -1201);	// norm[556]
	SVECTOR( 3941,   982,  -526);	// norm[557]
	SVECTOR( 3676,  1769,  -357);	// norm[558]
	SVECTOR( 3799,  1259,  -867);	// norm[559]
	SVECTOR( 3983,  -187,  -936);	// norm[560]
	SVECTOR( 3805,   797, -1287);	// norm[561]
	SVECTOR( 3221,  -148, -2525);	// norm[562]
	SVECTOR(-1434,  2637, -2786);	// norm[563]
	SVECTOR( 3752,  1513,  -638);	// norm[564]
	SVECTOR( 3688,  1688,  -565);	// norm[565]
	SVECTOR( -664, -3577, -1880);	// norm[566]
	SVECTOR( -926, -3818, -1157);	// norm[567]
	SVECTOR( 3794,  1535,   148);	// norm[568]
	SVECTOR(-1128, -3832,  -902);	// norm[569]
	SVECTOR( 1523, -3337, -1820);	// norm[570]
	SVECTOR( 4032,   713,   -51);	// norm[571]
	SVECTOR( 2017,  -948, -3435);	// norm[572]
	SVECTOR( 3265,  -322, -2451);	// norm[573]
	SVECTOR(  217, -3453, -2191);	// norm[574]
	SVECTOR(  206, -3953, -1051);	// norm[575]
	SVECTOR(-1304, -2706, -2784);	// norm[576]
	SVECTOR( -144, -4066,  -470);	// norm[577]
	SVECTOR( -430, -4049,  -440);	// norm[578]
	SVECTOR( 3447, -1478, -1643);	// norm[579]
	SVECTOR(-1506, -3702,  -894);	// norm[580]
	SVECTOR( 3486,  -730, -2022);	// norm[581]
	SVECTOR(  407, -4071,  -178);	// norm[582]
	SVECTOR( 3158, -2160, -1460);	// norm[583]
	SVECTOR( 3409, -1928, -1198);	// norm[584]
	SVECTOR( 3770,   406, -1548);	// norm[585]
	SVECTOR(-1401, -3519, -1557);	// norm[586]
	SVECTOR( 3871,   702, -1138);	// norm[587]
	SVECTOR(-1267, -3847,  -606);	// norm[588]
	SVECTOR(  500,  3657,  1775);	// norm[589]
	SVECTOR( 1353, -3720, -1049);	// norm[590]
	SVECTOR( 3164, -2481,  -777);	// norm[591]
	SVECTOR( 3704, -1584,  -736);	// norm[592]
	SVECTOR( 3615, -1912,  -216);	// norm[593]
	SVECTOR( 3933,  -662,  -930);	// norm[594]
	SVECTOR( 4026,  -748,   -52);	// norm[595]
	SVECTOR( 3915, -1094,   497);	// norm[596]
	SVECTOR( 3563, -1964,   464);	// norm[597]
	SVECTOR( 3276, -2381,   608);	// norm[598]
	SVECTOR( 3152, -2607,  -199);	// norm[599]
	SVECTOR( 3494, -2136,    33);	// norm[600]
	SVECTOR( 3599, -1804,   752);	// norm[601]
	SVECTOR( 3449, -2107,  -658);	// norm[602]
	SVECTOR(  631,  3538,  1964);	// norm[603]
	SVECTOR( -278,  3612,  1910);	// norm[604]
	SVECTOR(   81, -4078,  -370);	// norm[605]
	SVECTOR( 1200, -3852,  -700);	// norm[606]
	SVECTOR(   66, -4086,  -275);	// norm[607]
	SVECTOR(-2533,  -175, -3213);	// norm[608]
	SVECTOR(-2825,    21, -2965);	// norm[609]
	SVECTOR(-3048,   853, -2599);	// norm[610]
	SVECTOR(-1783,  -446, -3659);	// norm[611]
	SVECTOR(-2829,   612, -2897);	// norm[612]
	SVECTOR(-2106,   166, -3508);	// norm[613]
	SVECTOR( -981, -3969,  -242);	// norm[614]
	SVECTOR(-3138,   996, -2436);	// norm[615]
	SVECTOR(-3290,   863, -2280);	// norm[616]
	SVECTOR(-3192,  -381, -2537);	// norm[617]
	SVECTOR(  880,  3570,  1803);	// norm[618]
	SVECTOR(-3325,  -982, -2179);	// norm[619]
	SVECTOR( -112,  3727,  1694);	// norm[620]
	SVECTOR(-2940, -1222, -2576);	// norm[621]
	SVECTOR( -957,  3639,  1617);	// norm[622]
	SVECTOR( 1093, -3906,  -567);	// norm[623]
	SVECTOR(-3080, -1795, -2016);	// norm[624]
	SVECTOR(-2996, -1668, -2239);	// norm[625]
	SVECTOR(-2755, -2362, -1897);	// norm[626]
	SVECTOR(-3147,  1833, -1873);	// norm[627]
	SVECTOR(-3086,  1922, -1886);	// norm[628]
	SVECTOR(-2804,  2725, -1218);	// norm[629]
	SVECTOR(-3080,  1788, -2021);	// norm[630]
	SVECTOR(-2897,  2607, -1256);	// norm[631]
	SVECTOR(-3161,  2065, -1585);	// norm[632]
	SVECTOR(-2995,  1407, -2413);	// norm[633]
	SVECTOR(  801,  3704,  1553);	// norm[634]
	SVECTOR(-3138,  2488,  -854);	// norm[635]
	SVECTOR(  701,  3572,  1876);	// norm[636]
	SVECTOR( -384,  3723,  1661);	// norm[637]
	SVECTOR( -245,  3609,  1920);	// norm[638]
	SVECTOR(-1149,  3514,  1762);	// norm[639]
	SVECTOR(  708,  3639,  1740);	// norm[640]
	SVECTOR(-3145,  2231, -1378);	// norm[641]
	SVECTOR( -306,  3676,  1779);	// norm[642]
	SVECTOR(-1393,  3634,  1276);	// norm[643]
	SVECTOR(  711, -4031,  -137);	// norm[644]
	SVECTOR(-3868,  1061,  -828);	// norm[645]
	SVECTOR(-1241,  3482,  1763);	// norm[646]
	SVECTOR( -103, -4088,  -220);	// norm[647]
	SVECTOR(   63, -4089,  -229);	// norm[648]
	SVECTOR(-1933,  -927,  3489);	// norm[649]
	SVECTOR(-1651, -1017,  3607);	// norm[650]
	SVECTOR(-2971,  -719,  2726);	// norm[651]
	SVECTOR(-2229, -1548,  3067);	// norm[652]
	SVECTOR(-2612, -1776,  2606);	// norm[653]
	SVECTOR(-3116, -2299,  1331);	// norm[654]
	SVECTOR(-1962, -1135,  3411);	// norm[655]
	SVECTOR(-3452, -1615,  1499);	// norm[656]
	SVECTOR(-3583, -1354,  1450);	// norm[657]
	SVECTOR(-3376, -2181,   785);	// norm[658]
	SVECTOR(-3881, -1296,  -170);	// norm[659]
	SVECTOR(-3568,   749,  1866);	// norm[660]
	SVECTOR(-3936,  -280,  1098);	// norm[661]
	SVECTOR(-4027,   644,   373);	// norm[662]
	SVECTOR(-4062,   119,  -505);	// norm[663]
	SVECTOR(-4042,  -630,  -204);	// norm[664]
	SVECTOR(-3943,   827,  -736);	// norm[665]
	SVECTOR(-2988, -2235, -1688);	// norm[666]
	SVECTOR(-3024, -2279, -1559);	// norm[667]
	SVECTOR(-3032, -2566,  -997);	// norm[668]
	SVECTOR(-3376, -1971, -1219);	// norm[669]
	SVECTOR(-3592, -1653, -1065);	// norm[670]
	SVECTOR(-3178, -2573,  -222);	// norm[671]
	SVECTOR(-3435, -2212,  -279);	// norm[672]
	SVECTOR(-3672, -1672,  -701);	// norm[673]
	SVECTOR(-3927, -1086,  -413);	// norm[674]
	SVECTOR(-3940,  -328, -1070);	// norm[675]
	SVECTOR(-3636,  -178, -1876);	// norm[676]
	SVECTOR(-3593, -1123, -1612);	// norm[677]
	SVECTOR(-1782,  -595,  3639);	// norm[678]
	SVECTOR(-1331, -1057,  3726);	// norm[679]
	SVECTOR(-1074,  -797,  3871);	// norm[680]
	SVECTOR(-1547,  -858,  3694);	// norm[681]
	SVECTOR( -973, -1112,  3819);	// norm[682]
	SVECTOR(-1038, -3934,  -467);	// norm[683]
	SVECTOR( -806, -4007,  -263);	// norm[684]
	SVECTOR( -417,  -914,  3970);	// norm[685]
	SVECTOR( -522, -1291,  3851);	// norm[686]
	SVECTOR( -430,  -757,  4002);	// norm[687]
	SVECTOR( -101,  -556,  4056);	// norm[688]
	SVECTOR(-1255,  -319,  3885);	// norm[689]
	SVECTOR( 4086,   252,  -109);	// norm[690]
	SVECTOR( 4058,   389,  -396);	// norm[691]
	SVECTOR( 4069,  -212,  -417);	// norm[692]
	SVECTOR( -647, -4036,  -260);	// norm[693]
	SVECTOR(  862, -4002,  -110);	// norm[694]
	SVECTOR( 3929,  -876,  -754);	// norm[695]
	SVECTOR( 4084,  -305,   -25);	// norm[696]
	SVECTOR( 3957,  -998,  -343);	// norm[697]
	SVECTOR( 3961, -1016,   232);	// norm[698]
	SVECTOR(  177, -4086,  -223);	// norm[699]
	SVECTOR( -266,  3729,  1672);	// norm[700]
	SVECTOR(-1264,  3431,  1844);	// norm[701]
	SVECTOR(  975, -1113, -3819);	// norm[702]
	SVECTOR(   87, -1031, -3963);	// norm[703]
	SVECTOR(  107,  -796, -4016);	// norm[704]
	SVECTOR( 1330,  -895, -3769);	// norm[705]
	SVECTOR( -742,  -741, -3959);	// norm[706]
	SVECTOR( -995,  -392, -3953);	// norm[707]
	SVECTOR(-1240,  3568,  1582);	// norm[708]
	SVECTOR(  978, -3977,    46);	// norm[709]
	SVECTOR( 1383,  3316, -1965);	// norm[710]
	SVECTOR( 1013, -3950,  -380);	// norm[711]
	SVECTOR( 1427,  3730,  -906);	// norm[712]
	SVECTOR(  148,  4030,  -713);	// norm[713]
	SVECTOR( 1289,  3886,   -96);	// norm[714]
	SVECTOR(-3901,    12, -1245);	// norm[715]
	SVECTOR(-3889,  -599, -1137);	// norm[716]
	SVECTOR(   55,  4085,   283);	// norm[717]
	SVECTOR(-3707,  -731, -1580);	// norm[718]
	SVECTOR(-3464, -1011, -1937);	// norm[719]
	SVECTOR(-3590, -1081,  1648);	// norm[720]
	SVECTOR(-1814, -1838,  3178);	// norm[721]
	SVECTOR(-2096, -1431,  3214);	// norm[722]
	SVECTOR( -855, -1824,  3566);	// norm[723]
	SVECTOR( -700, -2307,  3310);	// norm[724]
	SVECTOR(   58, -4088,  -236);	// norm[725]
	SVECTOR(  437, -2318,  3348);	// norm[726]
	SVECTOR(   33, -4090,  -206);	// norm[727]
	SVECTOR( -865, -3999,  -188);	// norm[728]
	SVECTOR(  574, -2656,  3064);	// norm[729]
	SVECTOR( 2257, -2522,  2306);	// norm[730]
	SVECTOR( 2861, -2089,  2054);	// norm[731]
	SVECTOR(  -60,  3977,   974);	// norm[732]
	SVECTOR(  997,  3900,   755);	// norm[733]
	SVECTOR(-3696,  -825,  1559);	// norm[734]
	SVECTOR( -822, -4010,  -140);	// norm[735]
	SVECTOR(-3779,    36,  1577);	// norm[736]
	SVECTOR(-1503,  3810,    -7);	// norm[737]
	SVECTOR( -897, -3994,  -121);	// norm[738]
	SVECTOR( 1034, -3958,  -202);	// norm[739]
	SVECTOR(    7, -4092,  -169);	// norm[740]
	SVECTOR(  882, -3999,   -38);	// norm[741]
	SVECTOR( 3320, -2390,   181);	// norm[742]
	SVECTOR( 3380, -2041,  1088);	// norm[743]
	SVECTOR( 3567, -1961,   447);	// norm[744]
	SVECTOR( 3853, -1323,   418);	// norm[745]
	SVECTOR( 3677, -1535,   947);	// norm[746]
	SVECTOR( 3282, -2447,  -125);	// norm[747]
	SVECTOR( 3747, -1649,   115);	// norm[748]
	SVECTOR( 3226, -2512,  -240);	// norm[749]
	SVECTOR( 2531, -3112,  -824);	// norm[750]
	SVECTOR( 2926, -2826,  -474);	// norm[751]
	SVECTOR( 2586, -2840, -1419);	// norm[752]
	SVECTOR( 3311, -2297,  -731);	// norm[753]
	SVECTOR( 3284, -2445,   -92);	// norm[754]
	SVECTOR( 3181, -1758, -1887);	// norm[755]
	SVECTOR( 1741, -1094, -3542);	// norm[756]
	SVECTOR( 1713, -2390, -2850);	// norm[757]
	SVECTOR(  324, -1497, -3798);	// norm[758]
	SVECTOR( 1537, -3297, -1881);	// norm[759]
	SVECTOR(  393, -2796, -2966);	// norm[760]
	SVECTOR(  710, -3533, -1945);	// norm[761]
	SVECTOR( 1932, -3439, -1100);	// norm[762]
	SVECTOR( -915, -1842, -3541);	// norm[763]
	SVECTOR( -358, -3235, -2486);	// norm[764]
	SVECTOR(-2215, -2744, -2082);	// norm[765]
	SVECTOR(-2708,  -642, -3004);	// norm[766]
	SVECTOR(-1219,  -632, -3858);	// norm[767]
	SVECTOR(-2606,   492, -3121);	// norm[768]
	SVECTOR(-1180,   -62, -3921);	// norm[769]
	SVECTOR(  184,  -759, -4020);	// norm[770]
	SVECTOR(-2374,   774, -3246);	// norm[771]
	SVECTOR(-3692, -1085, -1402);	// norm[772]
	SVECTOR(-3628,    55, -1900);	// norm[773]
	SVECTOR(-3894,   355, -1217);	// norm[774]
	SVECTOR(-3973,  -339,  -933);	// norm[775]
	SVECTOR(-3677,  1198, -1347);	// norm[776]
	SVECTOR(-4073,    96,  -413);	// norm[777]
	SVECTOR(-3924,  1088,  -437);	// norm[778]
	SVECTOR(-4079,  -231,  -291);	// norm[779]
	SVECTOR(-3609,  1804,  -700);	// norm[780]
	SVECTOR(-3409,   908, -2079);	// norm[781]
	SVECTOR(-3440,  1701, -1430);	// norm[782]
	SVECTOR(-3171,  1468, -2136);	// norm[783]
	SVECTOR( 2562, -3096,  -788);	// norm[784]
	SVECTOR( 2513, -3227,  -205);	// norm[785]
	SVECTOR( 3772, -1572,  -269);	// norm[786]
	SVECTOR( 3704, -1662,   541);	// norm[787]
	SVECTOR( 2468, -3257,   268);	// norm[788]
	SVECTOR( 4032,   -14,   717);	// norm[789]
	SVECTOR( 3574, -1744,   978);	// norm[790]
	SVECTOR( 3893,   -47,  1271);	// norm[791]
	SVECTOR( 3808,   -40,  1505);	// norm[792]
	SVECTOR( 2601, -3108,   590);	// norm[793]
	SVECTOR( 3565, -1536,  1306);	// norm[794]
	SVECTOR( 2670, -3003,   790);	// norm[795]
	SVECTOR( 3586,  1397,  1401);	// norm[796]
	SVECTOR( 3520,  1474,  1486);	// norm[797]
	SVECTOR( 2385,  3056,  1320);	// norm[798]
	SVECTOR( 2282,  2976,  1645);	// norm[799]
	SVECTOR( 3649,  1522,  1067);	// norm[800]
	SVECTOR( 2471,  2847,  1601);	// norm[801]
	SVECTOR( 3787,  1511,   378);	// norm[802]
	SVECTOR( 4093,   140,   -30);	// norm[803]
	SVECTOR( 3979,     8,  -969);	// norm[804]
	SVECTOR( 2652,  2916,  1113);	// norm[805]
	SVECTOR( 3762,  1547,  -474);	// norm[806]
	SVECTOR( 2676,  3099,    93);	// norm[807]
	SVECTOR( 3683, -1425, -1085);	// norm[808]
	SVECTOR(-2849, -2816,  -850);	// norm[809]
	SVECTOR(-3665, -1261, -1322);	// norm[810]
	SVECTOR(-3715, -1528,  -798);	// norm[811]
	SVECTOR(-4030,   100,  -723);	// norm[812]
	SVECTOR(-3869,   100, -1339);	// norm[813]
	SVECTOR(-4093,    23,  -138);	// norm[814]
	SVECTOR(-3848,  1394,  -146);	// norm[815]
	SVECTOR(-3795,  1493,   375);	// norm[816]
	SVECTOR(-2741,  2790,  1214);	// norm[817]
	SVECTOR(-3827,  1125,  -925);	// norm[818]
	SVECTOR(-3037,  2693,   545);	// norm[819]
	SVECTOR(-3167,  2583,  -259);	// norm[820]
	SVECTOR(-3780,  1455,   601);	// norm[821]
	SVECTOR(-2619,  2812,  1414);	// norm[822]
	SVECTOR(-2562,  2965,  1190);	// norm[823]
	SVECTOR(-2519, -3207,  -371);	// norm[824]
	SVECTOR(-3722, -1697,  -197);	// norm[825]
	SVECTOR(-2414, -3305,  -150);	// norm[826]
	SVECTOR(-4087,  -154,   208);	// norm[827]
	SVECTOR(-3690, -1774,   105);	// norm[828]
	SVECTOR(-4063,   -29,   515);	// norm[829]
	SVECTOR(-3694,  1623,   699);	// norm[830]
	SVECTOR(-2377, -3335,     4);	// norm[831]
	SVECTOR(-3620, -1883,   351);	// norm[832]
	SVECTOR(-2539, -3210,   155);	// norm[833]
	SVECTOR( 2521, -2094, -2455);	// norm[834]
	SVECTOR( 2624, -2484, -1928);	// norm[835]
	SVECTOR( 3203, -1087, -2308);	// norm[836]
	SVECTOR( 3420, -1213, -1898);	// norm[837]
	SVECTOR( 2626, -2770, -1485);	// norm[838]
	SVECTOR( 3568,   -85, -2008);	// norm[839]
	SVECTOR( 3501, -1395, -1602);	// norm[840]
	SVECTOR( 3758,  -111, -1623);	// norm[841]
	SVECTOR( 2585, -2939, -1204);	// norm[842]
	SVECTOR( 3609,  1317, -1418);	// norm[843]
	SVECTOR( 2688,  2977,  -825);	// norm[844]
	SVECTOR( 3402,  1315, -1863);	// norm[845]
	SVECTOR( 2647,  2759, -1466);	// norm[846]
	SVECTOR( 3108,  1154, -2404);	// norm[847]
	SVECTOR( 3284,   101, -2444);	// norm[848]
	SVECTOR( 2625,   -71, -3142);	// norm[849]
	SVECTOR( 2440,  2398, -2251);	// norm[850]
	SVECTOR( 2436,   880, -3172);	// norm[851]
	SVECTOR( 1990,  1896, -3036);	// norm[852]
	SVECTOR( 2656, -1037, -2940);	// norm[853]
	SVECTOR(-1846,  -813, -3564);	// norm[854]
	SVECTOR( -946, -1463, -3706);	// norm[855]
	SVECTOR( -672,  -590, -3997);	// norm[856]
	SVECTOR(  596,  -845, -3963);	// norm[857]
	SVECTOR(  448, -2133, -3467);	// norm[858]
	SVECTOR(  544,   -91, -4058);	// norm[859]
	SVECTOR( 1746, -1004, -3566);	// norm[860]
	SVECTOR( 1656,  -135, -3743);	// norm[861]
	SVECTOR( 1734, -2306, -2906);	// norm[862]
	SVECTOR( 1476,   736, -3748);	// norm[863]
	SVECTOR( 1239,  2098, -3291);	// norm[864]
	SVECTOR(  447,   663, -4017);	// norm[865]
	SVECTOR( -155,  1931, -3608);	// norm[866]
	SVECTOR( -906,   663, -3938);	// norm[867]
	SVECTOR( -640,   -41, -4045);	// norm[868]
	SVECTOR(-1881,   169, -3634);	// norm[869]
	SVECTOR(-1507,  1305, -3577);	// norm[870]
	SVECTOR(-1865,   810, -3555);	// norm[871]
	SVECTOR(-1843,  1047, -3504);	// norm[872]
	SVECTOR(-1872,  -381, -3622);	// norm[873]
	SVECTOR(-2740,  -486, -3005);	// norm[874]
	SVECTOR(-2830,   -14, -2960);	// norm[875]
	SVECTOR(-3312,    34, -2409);	// norm[876]
	SVECTOR(-2657,   630, -3052);	// norm[877]
	SVECTOR(-3342,   681, -2266);	// norm[878]
	SVECTOR(-2748,  1944, -2333);	// norm[879]
	SVECTOR(-2091,  1284, -3279);	// norm[880]
	SVECTOR(-3603,   843, -1755);	// norm[881]
	SVECTOR(-3081,  2395, -1242);	// norm[882]
	SVECTOR(-2366, -1354, -3056);	// norm[883]
	SVECTOR(-3215,  -650, -2452);	// norm[884]
	SVECTOR(-2798, -1894, -2314);	// norm[885]
	SVECTOR(-3577,    29, -1994);	// norm[886]
	SVECTOR(-3522,  -889, -1892);	// norm[887]
	SVECTOR(-2862, -2561, -1423);	// norm[888]
	SVECTOR( 2327, -3370,    10);	// norm[889]
	SVECTOR( 2448, -3276,   218);	// norm[890]
	SVECTOR( 3632, -1867,   305);	// norm[891]
	SVECTOR( 3606, -1820,   676);	// norm[892]
	SVECTOR( 2389, -3306,   366);	// norm[893]
	SVECTOR( 3996,   -70,   896);	// norm[894]
	SVECTOR( 3536, -1861,   896);	// norm[895]
	SVECTOR( 3904,  -255,  1212);	// norm[896]
	SVECTOR( 3844,    29,  1412);	// norm[897]
	SVECTOR( 2535, -3148,   659);	// norm[898]
	SVECTOR( 3592, -1596,  1150);	// norm[899]
	SVECTOR( 2854, -2789,   921);	// norm[900]
	SVECTOR( 3514,  1505,  1468);	// norm[901]
	SVECTOR( 3439,  1541,  1603);	// norm[902]
	SVECTOR( 2742,  2568,  1631);	// norm[903]
	SVECTOR( 2371,  2800,  1819);	// norm[904]
	SVECTOR( 3484,  1650,  1382);	// norm[905]
	SVECTOR( 2352,  2804,  1838);	// norm[906]
	SVECTOR( 3604,  1576,  1140);	// norm[907]
	SVECTOR( 4053,    13,   585);	// norm[908]
	SVECTOR( 4087,    66,   262);	// norm[909]
	SVECTOR( 2344,  2882,  1722);	// norm[910]
	SVECTOR( 3727,  1574,   637);	// norm[911]
	SVECTOR( 2196,  3309,   999);	// norm[912]
	SVECTOR( 3825, -1460,    91);	// norm[913]
	SVECTOR(-2780, -2732, -1256);	// norm[914]
	SVECTOR(-3522, -1459, -1496);	// norm[915]
	SVECTOR(-3671, -1593,  -871);	// norm[916]
	SVECTOR(-4034,    97,  -703);	// norm[917]
	SVECTOR(-3894,   -22, -1268);	// norm[918]
	SVECTOR(-4090,   -79,  -196);	// norm[919]
	SVECTOR(-3788,  1551,  -136);	// norm[920]
	SVECTOR(-3730,  1646,   387);	// norm[921]
	SVECTOR(-2660,  2928,  1060);	// norm[922]
	SVECTOR(-3748,  1402,  -869);	// norm[923]
	SVECTOR(-2996,  2785,   204);	// norm[924]
	SVECTOR(-3145,  2562,  -562);	// norm[925]
	SVECTOR(-3685,  1706,   536);	// norm[926]
	SVECTOR(-2472,  3027,  1224);	// norm[927]
	SVECTOR(-2184,  3375,   779);	// norm[928]
	SVECTOR(-2525, -3122,  -805);	// norm[929]
	SVECTOR(-3665, -1801,  -310);	// norm[930]
	SVECTOR(-2331, -3344,  -393);	// norm[931]
	SVECTOR(-4090,  -181,   113);	// norm[932]
	SVECTOR(-3631, -1893,   -68);	// norm[933]
	SVECTOR(-4086,  -102,   251);	// norm[934]
	SVECTOR(-3753,  1606,   333);	// norm[935]
	SVECTOR(-2361, -3336,  -260);	// norm[936]
	SVECTOR(-3568, -2010,    77);	// norm[937]
	SVECTOR(-2061, -3534,  -183);	// norm[938]
	SVECTOR( 3238, -1422, -2065);	// norm[939]
	SVECTOR( 3226, -1871, -1693);	// norm[940]
	SVECTOR( 3654,  -954, -1585);	// norm[941]
	SVECTOR( 3853, -1135,  -798);	// norm[942]
	SVECTOR( 3000, -2666,  -816);	// norm[943]
	SVECTOR( 4032,   133,  -703);	// norm[944]
	SVECTOR( 3869, -1326,  -214);	// norm[945]
	SVECTOR( 4091,   120,  -137);	// norm[946]
	SVECTOR( 2716, -3052,  -282);	// norm[947]
	SVECTOR( 3862,  1363,     0);	// norm[948]
	SVECTOR( 2889,  2902,    39);	// norm[949]
	SVECTOR( 3816,  1259,  -787);	// norm[950]
	SVECTOR( 2949,  2588, -1175);	// norm[951]
	SVECTOR( 3321,  1052, -2153);	// norm[952]
	SVECTOR( 3719,    64, -1713);	// norm[953]
	SVECTOR( 2731,   -67, -3051);	// norm[954]
	SVECTOR( 2324,  1892, -2791);	// norm[955]
	SVECTOR( 2176,   813, -3373);	// norm[956]
	SVECTOR( 1797,  1242, -3464);	// norm[957]
	SVECTOR( 3159,  -922, -2437);	// norm[958]
	SVECTOR(-1376, -2213, -3159);	// norm[959]
	SVECTOR(  -94, -2540, -3211);	// norm[960]
	SVECTOR( -297, -1011, -3957);	// norm[961]
	SVECTOR(  678, -1099, -3886);	// norm[962]
	SVECTOR( 1087, -2466, -3084);	// norm[963]
	SVECTOR(  509,  -129, -4062);	// norm[964]
	SVECTOR( 1827, -1064, -3507);	// norm[965]
	SVECTOR( 1442,  -171, -3829);	// norm[966]
	SVECTOR( 2440, -1975, -2630);	// norm[967]
	SVECTOR( 1276,   684, -3831);	// norm[968]
	SVECTOR( 1388,  1727, -3444);	// norm[969]
	SVECTOR(  460,   904, -3968);	// norm[970]
	SVECTOR(  452,  2502, -3210);	// norm[971]
	SVECTOR( -432,  1427, -3814);	// norm[972]
	SVECTOR( -380,    89, -4077);	// norm[973]
	SVECTOR(-1643,   704, -3685);	// norm[974]
	SVECTOR( -516,  2908, -2837);	// norm[975]
	SVECTOR(-1361,  2286, -3113);	// norm[976]
	SVECTOR(-1019,  3191, -2356);	// norm[977]
	SVECTOR(-1638,  -674, -3693);	// norm[978]
	SVECTOR(-2759, -1272, -2745);	// norm[979]
	SVECTOR(-2871,   233, -2911);	// norm[980]
	SVECTOR(-3396,  -103, -2286);	// norm[981]
	SVECTOR(-2499,  1852, -2664);	// norm[982]
	SVECTOR(-3198,  1552, -2033);	// norm[983]
	SVECTOR(-2159,  3173, -1430);	// norm[984]
	SVECTOR(-1444,  3237, -2052);	// norm[985]
	SVECTOR(-3526,  1310, -1619);	// norm[986]
	SVECTOR(-2668,  2962,  -937);	// norm[987]
	SVECTOR(-2040, -2880, -2076);	// norm[988]
	SVECTOR(-3127, -1632, -2081);	// norm[989]
	SVECTOR(-2290, -2992, -1604);	// norm[990]
	SVECTOR(-3715,  -149, -1718);	// norm[991]
	SVECTOR(-3361, -1542, -1758);	// norm[992]
	SVECTOR(-2503, -2923, -1401);	// norm[993]
	SVECTOR(-2165, -3454,  -393);	// norm[994]
	SVECTOR(-3594, -1923,  -399);	// norm[995]
	SVECTOR(-3583, -1973,   195);	// norm[996]
	SVECTOR(-4069,  -172,   427);	// norm[997]
	SVECTOR(-4092,   -22,  -174);	// norm[998]
	SVECTOR(-3947,   -65,  1091);	// norm[999]
	SVECTOR(-3565,  1819,   870);	// norm[1000]
	SVECTOR(-3513,  1653,  1304);	// norm[1001]
	SVECTOR(-2095,  3154,  1559);	// norm[1002]
	SVECTOR(-3699,  1749,   171);	// norm[1003]
	SVECTOR(-2178,  3266,  1166);	// norm[1004]
	SVECTOR(-2231,  3405,   446);	// norm[1005]
	SVECTOR(-3368,  1701,  1591);	// norm[1006]
	SVECTOR(-2072,  3140,  1618);	// norm[1007]
	SVECTOR(-2293,  3117,  1339);	// norm[1008]
	SVECTOR(-2269, -3409,   -28);	// norm[1009]
	SVECTOR(-3437, -2115,   694);	// norm[1010]
	SVECTOR(-2143, -3479,   277);	// norm[1011]
	SVECTOR(-3818,  -101,  1478);	// norm[1012]
	SVECTOR(-3501, -1804,  1122);	// norm[1013]
	SVECTOR(-3766,   -93,  1607);	// norm[1014]
	SVECTOR(-3404,  1657,  1561);	// norm[1015]
	SVECTOR(-2201, -3422,   468);	// norm[1016]
	SVECTOR(-3392, -1922,  1255);	// norm[1017]
	SVECTOR(-2333, -3314,   587);	// norm[1018]
	SVECTOR( 2229, -3410,  -419);	// norm[1019]
	SVECTOR( 2057, -3539,  -124);	// norm[1020]
	SVECTOR( 3582, -1982,  -114);	// norm[1021]
	SVECTOR( 3463, -2145,   425);	// norm[1022]
	SVECTOR( 1983, -3581,   121);	// norm[1023]
	SVECTOR( 4037,   -25,   688);	// norm[1024]
	SVECTOR( 3307, -2281,   796);	// norm[1025]
	SVECTOR( 3909,   -85,  1219);	// norm[1026]
	SVECTOR( 3762,  -240,  1601);	// norm[1027]
	SVECTOR( 1972, -3571,   358);	// norm[1028]
	SVECTOR( 3222, -2194,  1256);	// norm[1029]
	SVECTOR( 2017, -3506,   642);	// norm[1030]
	SVECTOR( 3358,  1857,  1431);	// norm[1031]
	SVECTOR( 3330,  1746,  1623);	// norm[1032]
	SVECTOR( 2038,  3172,  1599);	// norm[1033]
	SVECTOR( 2186,  3046,  1648);	// norm[1034]
	SVECTOR( 3488,  1872,  1050);	// norm[1035]
	SVECTOR( 2184,  3197,  1335);	// norm[1036]
	SVECTOR( 3613,  1860,   510);	// norm[1037]
	SVECTOR( 4094,    64,    75);	// norm[1038]
	SVECTOR( 4064,    81,  -500);	// norm[1039]
	SVECTOR( 2312,  3279,   819);	// norm[1040]
	SVECTOR( 3689,  1770,  -178);	// norm[1041]
	SVECTOR( 2440,  3287,   110);	// norm[1042]
	SVECTOR( 3649, -1752,  -620);	// norm[1043]
	SVECTOR( 1952, -1627, -3211);	// norm[1044]
	SVECTOR( 2108,  -743, -3431);	// norm[1045]
	SVECTOR(  772, -1061, -3879);	// norm[1046]
	SVECTOR(  754,    28, -4025);	// norm[1047]
	SVECTOR( 2130,   539, -3456);	// norm[1048]
	SVECTOR( -311,   -71, -4083);	// norm[1049]
	SVECTOR(  983,  1443, -3705);	// norm[1050]
	SVECTOR( -212,  1262, -3890);	// norm[1051]
	SVECTOR(  279,  2847, -2930);	// norm[1052]
	SVECTOR( 1900,  1885, -3100);	// norm[1053]
	SVECTOR( 1415,  2486, -2930);	// norm[1054]
	SVECTOR( 1773,  2284, -2900);	// norm[1055]
	SVECTOR(-1118,  1331, -3708);	// norm[1056]
	SVECTOR( -774,  2919, -2766);	// norm[1057]
	SVECTOR(-1469,  2788, -2615);	// norm[1058]
	SVECTOR(  924, -2397, -3189);	// norm[1059]
	SVECTOR( -345, -1379, -3841);	// norm[1060]
	SVECTOR( -214, -2893, -2890);	// norm[1061]
	SVECTOR(-1347,  -145, -3865);	// norm[1062]
	SVECTOR(-1398, -1588, -3506);	// norm[1063]
	SVECTOR(-2580,   -41, -3180);	// norm[1064]
	SVECTOR(-2174,  1572, -3094);	// norm[1065]
	SVECTOR(-1246, -3042, -2442);	// norm[1066]
	SVECTOR(-2525, -1678, -2753);	// norm[1067]
	SVECTOR(-2108, -2919, -1950);	// norm[1068]
	SVECTOR(-3246, -1728, -1803);	// norm[1069]
	SVECTOR(-3478,   -77, -2160);	// norm[1070]
	SVECTOR(-3883,    33, -1302);	// norm[1071]
	SVECTOR(-3049,  1813, -2047);	// norm[1072]
	SVECTOR(-3418,  1906, -1207);	// norm[1073]
	SVECTOR(-2153,  3385,  -822);	// norm[1074]
	SVECTOR(-1919,  3209, -1671);	// norm[1075]
	SVECTOR(-3582,  1902,  -568);	// norm[1076]
	SVECTOR(-2212,  3440,  -220);	// norm[1077]
	SVECTOR(-2203, -3203, -1287);	// norm[1078]
	SVECTOR(-3464, -1846, -1168);	// norm[1079]
	SVECTOR(-2325, -3248,  -901);	// norm[1080]
	SVECTOR(-4026,   -30,  -748);	// norm[1081]
	SVECTOR(-3539, -1899,  -799);	// norm[1082]
	SVECTOR(-2183, -3405,  -640);	// norm[1083]
	SVECTOR( 2336, -2414, -2342);	// norm[1084]
	SVECTOR( 3100, -1046, -2463);	// norm[1085]
	SVECTOR( 3501, -1332, -1655);	// norm[1086]
	SVECTOR( 2452, -2957, -1418);	// norm[1087]
	SVECTOR( 3760,    77, -1622);	// norm[1088]
	SVECTOR( 3588, -1637, -1103);	// norm[1089]
	SVECTOR( 3957,    78, -1052);	// norm[1090]
	SVECTOR( 2393, -3226,  -798);	// norm[1091]
	SVECTOR( 3671,  1619,  -819);	// norm[1092]
	SVECTOR( 2513,  3195,  -496);	// norm[1093]
	SVECTOR( 3542,  1453, -1454);	// norm[1094]
	SVECTOR( 2384,  2994, -1457);	// norm[1095]
	SVECTOR( 2933,  1584, -2379);	// norm[1096]
	SVECTOR( 3281,    84, -2449);	// norm[1097]
	SVECTOR( 1956,  2524, -2564);	// norm[1098]
	SVECTOR( 2864, -2813,   807);	// norm[1099]
	SVECTOR( 3555, -1520,  1350);	// norm[1100]
	SVECTOR( 3728, -1292,  1097);	// norm[1101]
	SVECTOR( 3181, -2543,   430);	// norm[1102]
	SVECTOR( 3889,   -77,  1282);	// norm[1103]
	SVECTOR( 3922, -1025,   581);	// norm[1104]
	SVECTOR( 4007,   -95,   840);	// norm[1105]
	SVECTOR( 4090,     1,   204);	// norm[1106]
	SVECTOR( 3598, -1955,    28);	// norm[1107]
	SVECTOR( 4028,  -735,   -53);	// norm[1108]
	SVECTOR( 3864, -1313,  -341);	// norm[1109]
	SVECTOR( 3870,  1075,   800);	// norm[1110]
	SVECTOR( 3973,   950,   296);	// norm[1111]
	SVECTOR( 3591,  1948,   289);	// norm[1112]
	SVECTOR( 3224,  2460,   569);	// norm[1113]
	SVECTOR( 3706,  1285,  1177);	// norm[1114]
	SVECTOR( 2974,  2700,   798);	// norm[1115]
	SVECTOR( 3554,  1447,  1430);	// norm[1116]
	SVECTOR( 3793,    57,  1542);	// norm[1117]
	SVECTOR( 2558,  3035,  1009);	// norm[1118]
	SVECTOR(-3630, -1836,   470);	// norm[1119]
	SVECTOR(-4048,   -23,   619);	// norm[1120]
	SVECTOR(-4084,  -118,   286);	// norm[1121]
	SVECTOR(-3690,  1656,   645);	// norm[1122]
	SVECTOR(-3772,  1550,   371);	// norm[1123]
	SVECTOR(-2641,  3110,   352);	// norm[1124]
	SVECTOR(-2520,  3133,   779);	// norm[1125]
	SVECTOR(-3727,  1665,  -334);	// norm[1126]
	SVECTOR(-2476,  3257,  -169);	// norm[1127]
	SVECTOR(-1935,  3503,  -868);	// norm[1128]
	SVECTOR(-2461, -3271,   124);	// norm[1129]
	SVECTOR(-3732, -1685,   -10);	// norm[1130]
	SVECTOR(-2480, -3235,  -394);	// norm[1131]
	SVECTOR(-3996,   150,  -884);	// norm[1132]
	SVECTOR(-3648, -1569,  -999);	// norm[1133]
	SVECTOR(-2877,   230, -2905);	// norm[1134]
	SVECTOR(-3035,  1951, -1936);	// norm[1135]
	SVECTOR(-2414, -3105, -1141);	// norm[1136]
	SVECTOR(-2416, -1896, -2709);	// norm[1137]
	SVECTOR(-1035, -3268, -2241);	// norm[1138]
	SVECTOR(-3689, -1778,    64);	// norm[1139]
	SVECTOR(-4088,  -194,   165);	// norm[1140]
	SVECTOR(-4063,  -393,  -333);	// norm[1141]
	SVECTOR(-3787,  1557,    90);	// norm[1142]
	SVECTOR(-3878,  1215,  -508);	// norm[1143]
	SVECTOR(-2645,  3079,  -544);	// norm[1144]
	SVECTOR(-2500,  3241,   139);	// norm[1145]
	SVECTOR(-3771,   755, -1408);	// norm[1146]
	SVECTOR(-2836,  2612, -1381);	// norm[1147]
	SVECTOR(-2386,  2291, -2413);	// norm[1148]
	SVECTOR(-2574, -3172,  -287);	// norm[1149]
	SVECTOR(-3697, -1714,  -408);	// norm[1150]
	SVECTOR(-2870, -2716, -1074);	// norm[1151]
	SVECTOR(-3869,  -616, -1194);	// norm[1152]
	SVECTOR(-3462, -1285, -1770);	// norm[1153]
	SVECTOR(-2738,  -259, -3035);	// norm[1154]
	SVECTOR(-2863,   749, -2830);	// norm[1155]
	SVECTOR(-2344, -2423, -2325);	// norm[1156]
	SVECTOR(-2178, -1157, -3269);	// norm[1157]
	SVECTOR(-1166, -2479, -3044);	// norm[1158]
	SVECTOR( 2611, -3052,   800);	// norm[1159]
	SVECTOR( 3484, -1748,  1255);	// norm[1160]
	SVECTOR( 3610, -1794,   722);	// norm[1161]
	SVECTOR( 2528, -3212,   257);	// norm[1162]
	SVECTOR( 3974,   -29,   990);	// norm[1163]
	SVECTOR( 3551, -1997,  -415);	// norm[1164]
	SVECTOR( 4083,  -306,    67);	// norm[1165]
	SVECTOR( 3442,  -633, -2127);	// norm[1166]
	SVECTOR( 2093, -3463,  -628);	// norm[1167]
	SVECTOR( 2578, -2539, -1918);	// norm[1168]
	SVECTOR( 1077, -3710, -1359);	// norm[1169]
	SVECTOR( 3785,  1548,   218);	// norm[1170]
	SVECTOR( 3381,  1207, -1971);	// norm[1171]
	SVECTOR( 1684,  3510, -1270);	// norm[1172]
	SVECTOR( 2382,  3330,    77);	// norm[1173]
	SVECTOR( 3585,  1790,   845);	// norm[1174]
	SVECTOR( 2382,  3250,   728);	// norm[1175]
	SVECTOR( 3446,  1743,  1362);	// norm[1176]
	SVECTOR( 3866,   141,  1343);	// norm[1177]
	SVECTOR( 2554,  2919,  1314);	// norm[1178]
	SVECTOR(-3507, -1640,  1335);	// norm[1179]
	SVECTOR(-3761,  -213,  1608);	// norm[1180]
	SVECTOR(-3872,  -107,  1329);	// norm[1181]
	SVECTOR(-3534,  1427,  1499);	// norm[1182]
	SVECTOR(-3657,  1377,  1225);	// norm[1183]
	SVECTOR(-2757,  2920,   803);	// norm[1184]
	SVECTOR(-2359,  3215,   932);	// norm[1185]
	SVECTOR(-3830,  1158,   871);	// norm[1186]
	SVECTOR(-3016,  2723,   511);	// norm[1187]
	SVECTOR(-3357,  2331,   256);	// norm[1188]
	SVECTOR(-2663, -3042,   653);	// norm[1189]
	SVECTOR(-3600, -1603,  1114);	// norm[1190]
	SVECTOR(-2883, -2873,   451);	// norm[1191]
	SVECTOR(-3987,  -107,   931);	// norm[1192]
	SVECTOR(-3850, -1182,   746);	// norm[1193]
	SVECTOR(-4077,     8,   388);	// norm[1194]
	SVECTOR(-3905,  1164,   409);	// norm[1195]
	SVECTOR(-3278, -2442,   259);	// norm[1196]
	SVECTOR(-3964, -1007,   209);	// norm[1197]
	SVECTOR(-3649, -1859,     7);	// norm[1198]
	SVECTOR( 2091, -3450,   702);	// norm[1199]
	SVECTOR( 3260, -1941,  1540);	// norm[1200]
	SVECTOR( 3409, -1979,  1110);	// norm[1201]
	SVECTOR( 2253, -3397,   394);	// norm[1202]
	SVECTOR( 3769,  -136,  1597);	// norm[1203]
	SVECTOR( 3404, -2272,   140);	// norm[1204]
	SVECTOR( 4026,  -437,   611);	// norm[1205]
	SVECTOR( 3594, -1168, -1577);	// norm[1206]
	SVECTOR( 2091, -3516,  -181);	// norm[1207]
	SVECTOR( 2724, -2911,  -935);	// norm[1208]
	SVECTOR( 1423, -3768,  -743);	// norm[1209]
	SVECTOR( 3731,  1483,   808);	// norm[1210]
	SVECTOR( 3471,  1109, -1869);	// norm[1211]
	SVECTOR( 1927,  3427, -1147);	// norm[1212]
	SVECTOR( 2259,  3404,   288);	// norm[1213]
	SVECTOR( 3395,  1795,  1422);	// norm[1214]
	SVECTOR( 2125,  3372,   942);	// norm[1215]
	SVECTOR( 3179,  1960,  1679);	// norm[1216]
	SVECTOR( 3632,   -73,  1892);	// norm[1217]
	SVECTOR( 2162,  3184,  1399);	// norm[1218]
	SVECTOR(-3994,  -901,    79);	// norm[1219]
	SVECTOR(-4093,    72,   126);	// norm[1220]
	SVECTOR(-4052,   224,   553);	// norm[1221]
	SVECTOR(-3893,  1269,    90);	// norm[1222]
	SVECTOR(-3846,  1355,   377);	// norm[1223]
	SVECTOR(-3016,  2769,   -60);	// norm[1224]
	SVECTOR(-3232,  2511,  -137);	// norm[1225]
	SVECTOR(-3598,  1481,  1278);	// norm[1226]
	SVECTOR(-2524,  3191,   466);	// norm[1227]
	SVECTOR(-1428,  3562,  1431);	// norm[1228]
	SVECTOR(-3516, -2092,  -185);	// norm[1229]
	SVECTOR(-3952, -1017,   349);	// norm[1230]
	SVECTOR(-3156, -2610,   -31);	// norm[1231]
	SVECTOR(-3849,   196,  1386);	// norm[1232]
	SVECTOR(-3760, -1226,  1062);	// norm[1233]
	SVECTOR(-3326,   103,  2388);	// norm[1234]
	SVECTOR(-2934,  1433,  2471);	// norm[1235]
	SVECTOR(-2630, -3130,   247);	// norm[1236]
	SVECTOR(-3275, -1794,  1682);	// norm[1237]
	SVECTOR(-1279, -3891,   -26);	// norm[1238]
	SVECTOR( -537, -1458, -3789);	// norm[1239]
	SVECTOR( -885,    -9, -3999);	// norm[1240]
	SVECTOR(  560,  -150, -4054);	// norm[1241]
	SVECTOR(-1129,  1306, -3714);	// norm[1242]
	SVECTOR(  386,  1791, -3663);	// norm[1243]
	SVECTOR(  -62,  3072, -2707);	// norm[1244]
	SVECTOR(-1158,  2572, -2969);	// norm[1245]
	SVECTOR( 1589,  1590, -3423);	// norm[1246]
	SVECTOR(  883,  3354, -2177);	// norm[1247]
	SVECTOR(   53, -2905, -2886);	// norm[1248]
	SVECTOR(  830, -1947, -3506);	// norm[1249]
	SVECTOR( 1062, -3293, -2191);	// norm[1250]
	SVECTOR( 1984,  -547, -3541);	// norm[1251]
	SVECTOR( 2176, -2396, -2509);	// norm[1252]
	SVECTOR( 1639, -3510, -1328);	// norm[1253]
	SVECTOR( 3745, -1492,  -723);	// norm[1254]
	SVECTOR( 4040,  -582,  -339);	// norm[1255]
	SVECTOR( 4047,  -595,  -189);	// norm[1256]
	SVECTOR( 3652, -1744,  -625);	// norm[1257]
	SVECTOR( 4084,   295,    70);	// norm[1258]
	SVECTOR( 3988,  -895,   261);	// norm[1259]
	SVECTOR( 4060,   220,   487);	// norm[1260]
	SVECTOR( 3905,    64,  1234);	// norm[1261]
	SVECTOR( 3218, -2503,  -388);	// norm[1262]
	SVECTOR( 3750, -1402,   863);	// norm[1263]
	SVECTOR( 2089, -3494,  -445);	// norm[1264]
	SVECTOR( 3696,  1566,   811);	// norm[1265]
	SVECTOR( 3435,  1653,  1497);	// norm[1266]
	SVECTOR( 1481,  3599,  1274);	// norm[1267]
	SVECTOR( 2664,  3073,   482);	// norm[1268]
	SVECTOR( 3877,  1304,   208);	// norm[1269]
	SVECTOR( 3140,  2627,   -85);	// norm[1270]
	SVECTOR( 3971,  1000,   -77);	// norm[1271]
	SVECTOR( 4090,   147,  -149);	// norm[1272]
	SVECTOR( 3466,  2173,  -187);	// norm[1273]
	SVECTOR( -364, -1620, -3743);	// norm[1274]
	SVECTOR( -559,   197, -4052);	// norm[1275]
	SVECTOR(  799,    -4, -4017);	// norm[1276]
	SVECTOR( -973,  2053, -3407);	// norm[1277]
	SVECTOR(  576,  1754, -3655);	// norm[1278]
	SVECTOR(   -6,  3295, -2431);	// norm[1279]
	SVECTOR(-1181,  3423, -1912);	// norm[1280]
	SVECTOR( 1562,  1416, -3511);	// norm[1281]
	SVECTOR(  796,  3182, -2452);	// norm[1282]
	SVECTOR(   93, -2867, -2923);	// norm[1283]
	SVECTOR(  920, -1519, -3690);	// norm[1284]
	SVECTOR(  917, -2749, -2894);	// norm[1285]
	SVECTOR( 2018,   -55, -3563);	// norm[1286]
	SVECTOR( 1923, -1649, -3218);	// norm[1287]
	SVECTOR( 1260, -3047, -2429);	// norm[1288]
	SVECTOR( 2493, -3247,   113);	// norm[1289]
	SVECTOR( 3578, -1601,  1185);	// norm[1290]
	SVECTOR( 3571, -1587,  1224);	// norm[1291]
	SVECTOR( 2738, -3044,   109);	// norm[1292]
	SVECTOR( 3711,  -352,  1697);	// norm[1293]
	SVECTOR( 3681, -1541,   921);	// norm[1294]
	SVECTOR( 3816,  -492,  1403);	// norm[1295]
	SVECTOR( 3966,  -656,   785);	// norm[1296]
	SVECTOR( 2963, -2826,   -53);	// norm[1297]
	SVECTOR( 3758, -1579,   395);	// norm[1298]
	SVECTOR( 3711,   601,  1624);	// norm[1299]
	SVECTOR( 3974,   327,   935);	// norm[1300]
	SVECTOR( 3498,  1891,   980);	// norm[1301]
	SVECTOR( 2562,  2853,  1438);	// norm[1302]
	SVECTOR( 3471,  1065,  1894);	// norm[1303]
	SVECTOR( 2211,  2962,  1763);	// norm[1304]
	SVECTOR( 3329,  1376,  1948);	// norm[1305]
	SVECTOR( 3721,  -199,  1698);	// norm[1306]
	SVECTOR( 1727,  3172,  1930);	// norm[1307]
	SVECTOR(-2667, -2478,  1876);	// norm[1308]
	SVECTOR(-2884,   -66,  2907);	// norm[1309]
	SVECTOR(-2921,  -495,  2827);	// norm[1310]
	SVECTOR(-2249,  1467,  3092);	// norm[1311]
	SVECTOR(-2313,  1487,  3035);	// norm[1312]
	SVECTOR(-1346,  2658,  2810);	// norm[1313]
	SVECTOR(-1378,  2634,  2817);	// norm[1314]
	SVECTOR(-2790,  1414,  2643);	// norm[1315]
	SVECTOR(-1638,  2860,  2430);	// norm[1316]
	SVECTOR(-2404,  3279,   490);	// norm[1317]
	SVECTOR(-1154, -3928,   115);	// norm[1318]
	SVECTOR(-2403, -2937,  1539);	// norm[1319]
	SVECTOR(-1157, -3924,  -184);	// norm[1320]
	SVECTOR(-3297,  -897,  2257);	// norm[1321]
	SVECTOR(-2556, -3085,   848);	// norm[1322]
	SVECTOR(-3903, -1005,   727);	// norm[1323]
	SVECTOR(-3674,  1440,  1096);	// norm[1324]
	SVECTOR(-1344, -3819,  -620);	// norm[1325]
	SVECTOR(-2975, -2807,  -204);	// norm[1326]
	SVECTOR( 3975,   918,   361);	// norm[1327]
	SVECTOR( 4078,   -43,   375);	// norm[1328]
	SVECTOR( 4085,   145,   247);	// norm[1329]
	SVECTOR( 4006,  -798,   290);	// norm[1330]
	SVECTOR( 4051,  -495,   346);	// norm[1331]
	SVECTOR( 4012,  -615,   547);	// norm[1332]
	SVECTOR( 3867,  -713,  1146);	// norm[1333]
	SVECTOR( 4086,   151,   241);	// norm[1334]
	SVECTOR( 4018,   250,   753);	// norm[1335]
	SVECTOR( 3907,  1228,   -56);	// norm[1336]
	SVECTOR( 3937,  1127,    50);	// norm[1337]
	SVECTOR( 2803,  2950,  -458);	// norm[1338]
	SVECTOR( 3807,  1469,   343);	// norm[1339]
	SVECTOR( 2735,  2964,  -711);	// norm[1340]
	SVECTOR( 2291,  3376,  -357);	// norm[1341]
	SVECTOR( 2871,  2920,    13);	// norm[1342]
	SVECTOR(-4056,  -191,  -536);	// norm[1343]
	SVECTOR(-4023,     3,  -765);	// norm[1344]
	SVECTOR(-3881,   717, -1094);	// norm[1345]
	SVECTOR(-3955,  -856,  -633);	// norm[1346]
	SVECTOR(-4005,   710,  -474);	// norm[1347]
	SVECTOR(-3528,  1838,  -971);	// norm[1348]
	SVECTOR(-2306,  2961, -1639);	// norm[1349]
	SVECTOR(-3386,  1585, -1672);	// norm[1350]
	SVECTOR(-2153,  2783, -2095);	// norm[1351]
	SVECTOR(-3441,  1459, -1675);	// norm[1352]
	SVECTOR(-3899,   440, -1173);	// norm[1353]
	SVECTOR(-4086,   272,   -67);	// norm[1354]
	SVECTOR(-2315,  2783, -1914);	// norm[1355]
	SVECTOR(-3683,  1605,  -792);	// norm[1356]
	SVECTOR(-2810,  2872,  -792);	// norm[1357]
	SVECTOR(-4013,  -527,   627);	// norm[1358]
	SVECTOR(  827,  -293,  4000);	// norm[1359]
	SVECTOR(  935,   -63,  3987);	// norm[1360]
	SVECTOR( 1808,  -108,  3673);	// norm[1361]
	SVECTOR( 1995,   332,  3561);	// norm[1362]
	SVECTOR(  946,   441,  3960);	// norm[1363]
	SVECTOR( 3015,   425,  2738);	// norm[1364]
	SVECTOR( 1716,  1062,  3564);	// norm[1365]
	SVECTOR( 2899,  1322,  2573);	// norm[1366]
	SVECTOR( 1790,  2515,  2692);	// norm[1367]
	SVECTOR(  843,  1078,  3860);	// norm[1368]
	SVECTOR(  999,  1628,  3622);	// norm[1369]
	SVECTOR(  789,  1298,  3803);	// norm[1370]
	SVECTOR( 3550,  1446,  1441);	// norm[1371]
	SVECTOR( 2388,  3111,  1179);	// norm[1372]
	SVECTOR( 1284,  -639,  3836);	// norm[1373]
	SVECTOR( 2748,  -291,  3022);	// norm[1374]
	SVECTOR( 1937, -1263,  3380);	// norm[1375]
	SVECTOR( 3709,   385,  1693);	// norm[1376]
	SVECTOR( 3460,  -467,  2141);	// norm[1377]
	SVECTOR( 2456, -1794,  2743);	// norm[1378]
	SVECTOR(-1930, -1188,  3411);	// norm[1379]
	SVECTOR(-2160, -1381,  3194);	// norm[1380]
	SVECTOR(-2607,  -583,  3104);	// norm[1381]
	SVECTOR(-3037,  -722,  2650);	// norm[1382]
	SVECTOR(-2478, -1399,  2945);	// norm[1383]
	SVECTOR(-3303,   331,  2398);	// norm[1384]
	SVECTOR(-3566,  -650,  1906);	// norm[1385]
	SVECTOR(-3854,   234,  1366);	// norm[1386]
	SVECTOR(-2864, -1342,  2602);	// norm[1387]
	SVECTOR(-3599,  1681,   994);	// norm[1388]
	SVECTOR(-2419,  3278,   412);	// norm[1389]
	SVECTOR(-3015,  1803,  2104);	// norm[1390]
	SVECTOR(-2029,  3112,  1724);	// norm[1391]
	SVECTOR(-2387,  1437,  3002);	// norm[1392]
	SVECTOR(-2665,   351,  3090);	// norm[1393]
	SVECTOR(-1977,   230,  3579);	// norm[1394]
	SVECTOR(-1771,  2490,  2726);	// norm[1395]
	SVECTOR(-1730,  1123,  3538);	// norm[1396]
	SVECTOR(-1320,  1935,  3359);	// norm[1397]
	SVECTOR(-2020,  -563,  3518);	// norm[1398]
	SVECTOR(  218,  -647,  4038);	// norm[1399]
	SVECTOR(  148,  -183,  4089);	// norm[1400]
	SVECTOR( -589,  -365,  4036);	// norm[1401]
	SVECTOR( -570, -1033,  3922);	// norm[1402]
	SVECTOR( -535,   175,  4057);	// norm[1403]
	SVECTOR(-1308,  -506,  3848);	// norm[1404]
	SVECTOR(-1229,   145,  3904);	// norm[1405]
	SVECTOR(-1340, -1227,  3670);	// norm[1406]
	SVECTOR(-1065,   912,  3848);	// norm[1407]
	SVECTOR( -863,  1983,  3478);	// norm[1408]
	SVECTOR( -466,   822,  3985);	// norm[1409]
	SVECTOR( -193,  1838,  3655);	// norm[1410]
	SVECTOR(  263,   855,  3997);	// norm[1411]
	SVECTOR(  144,   209,  4088);	// norm[1412]
	SVECTOR(  539,  1490,  3776);	// norm[1413]
	SVECTOR(  732,  4029,    55);	// norm[1414]
	SVECTOR(  682,  3719,  1574);	// norm[1415]
	SVECTOR( -183,  3926,  1151);	// norm[1416]
	SVECTOR(  531,  2766,  2973);	// norm[1417]
	SVECTOR( -312,  3160,  2586);	// norm[1418]
	SVECTOR( -927,  3114,  2492);	// norm[1419]
	SVECTOR(  530,  3911, -1095);	// norm[1420]
	SVECTOR( -107,  4087,  -240);	// norm[1421]
	SVECTOR( -240,  3870, -1318);	// norm[1422]
	SVECTOR( -906,  3809,  1200);	// norm[1423]
	SVECTOR( -938,  3985,  -123);	// norm[1424]
	SVECTOR(-1266,  3665, -1318);	// norm[1425]
	SVECTOR(  682, -2712,  2991);	// norm[1426]
	SVECTOR( -568, -2584,  3125);	// norm[1427]
	SVECTOR( -444, -2522,  3196);	// norm[1428]
	SVECTOR(-1563, -2148,  3117);	// norm[1429]
	SVECTOR(-1437, -2156,  3171);	// norm[1430]
	SVECTOR(-1369, -1886,  3368);	// norm[1431]
	SVECTOR(  613, -2216,  3389);	// norm[1432]
	SVECTOR( -526, -1875,  3603);	// norm[1433]
	SVECTOR(  412, -1417,  3820);	// norm[1434]
	SVECTOR(  688,  3807, -1345);	// norm[1435]
	SVECTOR(  -49,  3701, -1752);	// norm[1436]
	SVECTOR( -342,  3797, -1496);	// norm[1437]
	SVECTOR( -823,  3470, -2013);	// norm[1438]
	SVECTOR( -781,  3534, -1917);	// norm[1439]
	SVECTOR(-1076,  3712, -1356);	// norm[1440]
	SVECTOR(  586,  3915, -1048);	// norm[1441]
	SVECTOR( -671,  3933,  -922);	// norm[1442]
	SVECTOR(  339,  4039,  -588);	// norm[1443]
	SVECTOR( -655,  4041,  -121);	// norm[1444]
	SVECTOR(-1372,  3858,   -65);	// norm[1445]
	SVECTOR( 1078,  3939,   312);	// norm[1446]
	SVECTOR( 1158, -3513,  1757);	// norm[1447]
	SVECTOR( 1735, -3708,   108);	// norm[1448]
	SVECTOR(   36, -4094,   113);	// norm[1449]
	SVECTOR( 2307, -3108, -1338);	// norm[1450]
	SVECTOR(  448, -3880, -1231);	// norm[1451]
	SVECTOR(-1187, -3677, -1357);	// norm[1452]
	SVECTOR( -556, -3722,  1614);	// norm[1453]
	SVECTOR(-1571, -3778,  -169);	// norm[1454]
	SVECTOR(-2347, -3000,  1505);	// norm[1455]
	SVECTOR(   92,  3730,  1687);	// norm[1456]
	SVECTOR(  113,  3841,  1416);	// norm[1457]
	SVECTOR( -528,  3702,  1670);	// norm[1458]
	SVECTOR(  229,  4003,   833);	// norm[1459]
	SVECTOR( -796,  3922,   870);	// norm[1460]
	SVECTOR(-1106,  3654,  1481);	// norm[1461]
	SVECTOR( -725,  3369,  2213);	// norm[1462]
	SVECTOR( -539,  3382,  2246);	// norm[1463]
	SVECTOR( -302,  3627,  1876);	// norm[1464]
	SVECTOR( -171,  3883,  1291);	// norm[1465]
	SVECTOR( -372,  3748,  1607);	// norm[1466]
	SVECTOR(  -28,  3934,  1138);	// norm[1467]
	SVECTOR( -344, -3809, -1465);	// norm[1468]
	SVECTOR(  320, -3756, -1600);	// norm[1469]
	SVECTOR(  172, -3849, -1389);	// norm[1470]
	SVECTOR( 1353, -3674, -1200);	// norm[1471]
	SVECTOR( 1015, -3817, -1080);	// norm[1472]
	SVECTOR(  675, -3867, -1168);	// norm[1473]
	SVECTOR(  341, -3863, -1317);	// norm[1474]
	SVECTOR(   77, -3873, -1330);	// norm[1475]
	SVECTOR(   38, -3887, -1290);	// norm[1476]
	SVECTOR( -245, -3954, -1039);	// norm[1477]
	SVECTOR( -310, -3916, -1159);	// norm[1478]
	SVECTOR( -206, -3948, -1070);	// norm[1479]
	SVECTOR(  100,  4083,   297);	// norm[1480]
	SVECTOR(  537,  4056,   169);	// norm[1481]
	SVECTOR(   33,  4066,  -486);	// norm[1482]
	SVECTOR(   35,  4070,  -451);	// norm[1483]
	SVECTOR(  103,  4064,  -492);	// norm[1484]
	SVECTOR(  112,  3909, -1217);	// norm[1485]
	SVECTOR( -232,  3934, -1114);	// norm[1486]
	SVECTOR(  194,  3967,  -999);	// norm[1487]
	SVECTOR( -519,  3981,  -808);	// norm[1488]
	SVECTOR( 1232,  3901,  -182);	// norm[1489]
	SVECTOR(  359,  4050,  -489);	// norm[1490]
	SVECTOR( 1803,  3657,  -385);	// norm[1491]
	SVECTOR(  815,  3994,  -394);	// norm[1492]
	SVECTOR( -371,  4044,  -529);	// norm[1493]
	SVECTOR( 2407,  3311,  -127);	// norm[1494]
	SVECTOR( 1339, -3644, -1304);	// norm[1495]
	SVECTOR( 2204, -3191, -1317);	// norm[1496]
	SVECTOR(  864, -3589, -1772);	// norm[1497]
	SVECTOR( 2723, -2813, -1200);	// norm[1498]
	SVECTOR( 1159, -3555, -1669);	// norm[1499]
	SVECTOR( 1522, -3597, -1233);	// norm[1500]
	SVECTOR( 3110, -2555,  -754);	// norm[1501]
	SVECTOR(  235, -3526, -2070);	// norm[1502]
	SVECTOR(   52, -3795, -1539);	// norm[1503]
	SVECTOR(  462, -3856, -1300);	// norm[1504]
	SVECTOR(  525, -3690, -1697);	// norm[1505]
	SVECTOR(  344, -3772, -1558);	// norm[1506]
	SVECTOR(  489, -3411, -2213);	// norm[1507]
	SVECTOR(  636, -3484, -2056);	// norm[1508]
	SVECTOR(  501, -3703, -1676);	// norm[1509]
	SVECTOR(  219,  4031,  -688);	// norm[1510]
	SVECTOR(   45,  4073,  -428);	// norm[1511]
	SVECTOR(   44,  4079,  -361);	// norm[1512]
	SVECTOR(  -26,  4085,   287);	// norm[1513]
	SVECTOR(  -50,  4082,   329);	// norm[1514]
	SVECTOR( -128,  4086,   250);	// norm[1515]
	SVECTOR( -208,  4088,  -142);	// norm[1516]
	SVECTOR(  -63,  4072,  -429);	// norm[1517]
	SVECTOR( -239,  3977,  -946);	// norm[1518]
	SVECTOR( -231,  3979,  -942);	// norm[1519]
	SVECTOR(   95,  4055,  -564);	// norm[1520]
	SVECTOR( -177,  4026,  -728);	// norm[1521]
	SVECTOR( -749,  3565, -1870);	// norm[1522]
	SVECTOR( -984,  3694, -1470);	// norm[1523]
	SVECTOR(  346,  4061,  -399);	// norm[1524]
	SVECTOR(  -50, -3934, -1137);	// norm[1525]
	SVECTOR(   19, -3873, -1331);	// norm[1526]
	SVECTOR(   86, -3884, -1297);	// norm[1527]
	SVECTOR(  183, -3859, -1358);	// norm[1528]
	SVECTOR(  153, -3833, -1433);	// norm[1529]
	SVECTOR(  257, -3866, -1326);	// norm[1530]
	SVECTOR(  325, -3955, -1011);	// norm[1531]
	SVECTOR(  138, -3900, -1243);	// norm[1532]
	SVECTOR( -130, -3874, -1321);	// norm[1533]
	SVECTOR(  -86, -3781, -1570);	// norm[1534]
	SVECTOR(   86, -3908, -1222);	// norm[1535]
	SVECTOR(  168, -3865, -1343);	// norm[1536]
	SVECTOR( -844, -3415, -2097);	// norm[1537]
	SVECTOR( -190, -3492, -2130);	// norm[1538]
	SVECTOR(  106, -3989,  -921);	// norm[1539]
	SVECTOR(  374,  3936, -1068);	// norm[1540]
	SVECTOR(  129,  3859, -1365);	// norm[1541]
	SVECTOR( -126,  4022,  -763);	// norm[1542]
	SVECTOR( -263,  3692, -1752);	// norm[1543]
	SVECTOR( -137,  4007,  -834);	// norm[1544]
	SVECTOR( -661,  4039,  -137);	// norm[1545]
	SVECTOR(-1117,  3922,  -373);	// norm[1546]
	SVECTOR(-1497,  3784,  -463);	// norm[1547]
	SVECTOR( -263,  4029,  -686);	// norm[1548]
	SVECTOR( -622,  4018,  -494);	// norm[1549]
	SVECTOR(-2067,  3530,  -193);	// norm[1550]
	SVECTOR(  358,  4026,  -660);	// norm[1551]
	SVECTOR(  311, -4024,  -693);	// norm[1552]
	SVECTOR(  756, -3947,  -789);	// norm[1553]
	SVECTOR( -249, -4032,  -676);	// norm[1554]
	SVECTOR( -869, -3965,  -547);	// norm[1555]
	SVECTOR(  121, -4016,  -796);	// norm[1556]
	SVECTOR(-1754, -3668,  -490);	// norm[1557]
	SVECTOR(-1335, -3830,  -570);	// norm[1558]
	SVECTOR(-2462, -3262,  -258);	// norm[1559]
	SVECTOR( -548, -3995,  -715);	// norm[1560]
	SVECTOR(  378, -3953, -1001);	// norm[1561]
	SVECTOR(  450, -3721, -1650);	// norm[1562]
	SVECTOR(  823, -3861, -1088);	// norm[1563]
	SVECTOR( -760,  3869,  1105);	// norm[1564]
	SVECTOR( -872,  3970,   503);	// norm[1565]
	SVECTOR(   24,  4058,   550);	// norm[1566]
	SVECTOR(   80,  3924,  1171);	// norm[1567]
	SVECTOR(  -38,  4095,    11);	// norm[1568]
	SVECTOR(  831,  3924,   825);	// norm[1569]
	SVECTOR(  808,  4007,   251);	// norm[1570]
	SVECTOR(  844,  3773,  1350);	// norm[1571]
	SVECTOR(  715,  4025,  -245);	// norm[1572]
	SVECTOR(-1036,  3962,    67);	// norm[1573]
	SVECTOR( -177,  4076,  -361);	// norm[1574]
	SVECTOR(-1412,  3843,  -109);	// norm[1575]
	SVECTOR( -958, -3980,  -134);	// norm[1576]
	SVECTOR(-1209, -3906,  -231);	// norm[1577]
	SVECTOR( -108, -4067,  -466);	// norm[1578]
	SVECTOR(-1695, -3721,  -229);	// norm[1579]
	SVECTOR( -328, -4041,  -576);	// norm[1580]
	SVECTOR(  582, -4011,  -589);	// norm[1581]
	SVECTOR( -826, -4010,   -87);	// norm[1582]
	SVECTOR(  -19, -4087,  -270);	// norm[1583]
	SVECTOR(    0, -4092,  -176);	// norm[1584]
	SVECTOR(  771, -4008,  -334);	// norm[1585]
	SVECTOR(  787, -4019,   -34);	// norm[1586]
	SVECTOR(  691, -4037,     4);	// norm[1587]
	SVECTOR( -630,  3948,   889);	// norm[1588]
	SVECTOR( -824,  4004,   253);	// norm[1589]
	SVECTOR(    3,  4061,   529);	// norm[1590]
	SVECTOR(  229,  3938,  1101);	// norm[1591]
	SVECTOR(  -13,  4095,    18);	// norm[1592]
	SVECTOR(  959,  3887,   860);	// norm[1593]
	SVECTOR(  871,  3993,   264);	// norm[1594]
	SVECTOR( 1393,  3563,  1462);	// norm[1595]
	SVECTOR(  644,  4042,  -132);	// norm[1596]
	SVECTOR( -964,  3972,  -257);	// norm[1597]
	SVECTOR(  -84,  4079,  -354);	// norm[1598]
	SVECTOR( -979,  3900,  -779);	// norm[1599]
	SVECTOR( -771, -4008,  -339);	// norm[1600]
	SVECTOR(-1069, -3885,  -730);	// norm[1601]
	SVECTOR(  -12, -4066,  -488);	// norm[1602]
	SVECTOR(-1228, -3626, -1454);	// norm[1603]
	SVECTOR( -153, -3998,  -872);	// norm[1604]
	SVECTOR(  627, -3990,  -677);	// norm[1605]
	SVECTOR( -382, -4070,  -244);	// norm[1606]
	SVECTOR(  143, -4089,  -191);	// norm[1607]
	SVECTOR(  424, -4073,   -33);	// norm[1608]
	SVECTOR(  909, -3983,  -282);	// norm[1609]
	SVECTOR( 1095, -3944,   135);	// norm[1610]
	SVECTOR( 1477, -3800,   388);	// norm[1611]
	SVECTOR( 1013,  3928,   558);	// norm[1612]
	SVECTOR( 1235,  3900,   181);	// norm[1613]
	SVECTOR(   60,  4095,     4);	// norm[1614]
	SVECTOR( 1727,  3713,    27);	// norm[1615]
	SVECTOR(  276,  4077,  -274);	// norm[1616]
	SVECTOR( -816,  4001,  -311);	// norm[1617]
	SVECTOR(  841,  3835,  1165);	// norm[1618]
	SVECTOR(  -69,  4066,   482);	// norm[1619]
	SVECTOR( -121,  3937,  1122);	// norm[1620]
	SVECTOR( -995,  3972,    44);	// norm[1621]
	SVECTOR(-1008,  3934,   531);	// norm[1622]
	SVECTOR(-1103,  3760,  1189);	// norm[1623]
	SVECTOR(  998, -3971,    59);	// norm[1624]
	SVECTOR( 1156, -3929,     5);	// norm[1625]
	SVECTOR(   38, -4087,  -254);	// norm[1626]
	SVECTOR(    0, -4093,  -136);	// norm[1627]
	SVECTOR(  194, -4049,  -583);	// norm[1628]
	SVECTOR( -973, -3973,  -202);	// norm[1629]
	SVECTOR( -925, -3942,  -617);	// norm[1630]
	SVECTOR( -938, -3985,   -88);	// norm[1631]
	SVECTOR( -656, -3889, -1104);	// norm[1632]
	SVECTOR( 1543, -3785,  -250);	// norm[1633]
	SVECTOR(  632, -3938,  -930);	// norm[1634]
	SVECTOR( 2074, -3496,  -500);	// norm[1635]
	SVECTOR( -817,  3795, -1304);	// norm[1636]
	SVECTOR(  -17,  3882, -1304);	// norm[1637]
	SVECTOR(    4,  4081,  -343);	// norm[1638]
	SVECTOR( 1100,  3498, -1822);	// norm[1639]
	SVECTOR(  945,  3947,  -544);	// norm[1640]
	SVECTOR(  868,  4002,    68);	// norm[1641]
	SVECTOR( -836,  3988,  -413);	// norm[1642]
	SVECTOR(    9,  4089,   236);	// norm[1643]

SharedNorm_0000:	// 0x000121d0
	SVECTOR(-1765,   571,  3651);	// shared norm[0]
	SVECTOR(-3345,  -224,  2352);	// shared norm[1]
	SVECTOR(-1461,    10,  3826);	// shared norm[2]
	SVECTOR( -582,  -703,  3992);	// shared norm[3]
	SVECTOR(  966, -1562,  3660);	// shared norm[4]
	SVECTOR( 2779,  -790,  2902);	// shared norm[5]
	SVECTOR( 3958,  -414,   965);	// shared norm[6]
	SVECTOR( 4083,  -317,   -20);	// shared norm[7]
	SVECTOR( 3932,  -768,  -850);	// shared norm[8]
	SVECTOR( 3891,  -943,  -863);	// shared norm[9]
	SVECTOR( 3312, -1401, -1959);	// shared norm[10]
	SVECTOR(-2180, -1275, -3224);	// shared norm[11]
	SVECTOR(-2617,  -747, -3060);	// shared norm[12]
	SVECTOR( 2139, -1767, -3012);	// shared norm[13]
	SVECTOR(-3746,  -258, -1635);	// shared norm[14]
	SVECTOR(-4033,   140,  -696);	// shared norm[15]
	SVECTOR(-4067,   -11,   486);	// shared norm[16]
	SVECTOR(-1180,  -650,  3867);	// shared norm[17]
	SVECTOR( -419, -1557, -3765);	// shared norm[18]
	SVECTOR( 1291, -1548, -3565);	// shared norm[19]
	SVECTOR(  819, -1333, -3785);	// shared norm[20]
	SVECTOR(  701, -1559, -3721);	// shared norm[21]
	SVECTOR( -412, -1609, -3743);	// shared norm[22]
	SVECTOR(  122, -1624, -3758);	// shared norm[23]

SharedNorm_0001:	// 0x00012290
	SVECTOR(-3290,  -757,  2318);	// shared norm[0]
	SVECTOR( 3352, -1073,  2094);	// shared norm[1]
	SVECTOR( 4067,  -470,   -92);	// shared norm[2]
	SVECTOR( 4051,  -263,   540);	// shared norm[3]
	SVECTOR(-4028,  -206,  -712);	// shared norm[4]
	SVECTOR(-3670,  -704, -1676);	// shared norm[5]
	SVECTOR(-4095,   -14,    73);	// shared norm[6]
	SVECTOR( 1693, -1791,  3271);	// shared norm[7]
	SVECTOR( -974,  -720,  3912);	// shared norm[8]
	SVECTOR(-1307,  -399,  3861);	// shared norm[9]
	SVECTOR( -217, -1554,  3783);	// shared norm[10]
	SVECTOR(-1578, -1000,  3644);	// shared norm[11]
	SVECTOR( 1534, -1368, -3542);	// shared norm[12]
	SVECTOR(   -1, -1339, -3870);	// shared norm[13]
	SVECTOR(  545, -1681, -3694);	// shared norm[14]
	SVECTOR( 1758, -1297, -3464);	// shared norm[15]
	SVECTOR( 2238, -1333, -3160);	// shared norm[16]
	SVECTOR( 2834, -1466, -2566);	// shared norm[17]
	SVECTOR( 3801,  -824, -1283);	// shared norm[18]
	SVECTOR(-3114,  -533, -2605);	// shared norm[19]
	SVECTOR(-3741,  -396, -1619);	// shared norm[20]
	SVECTOR(-1563, -1181, -3596);	// shared norm[21]
	SVECTOR(-1024,  -958, -3848);	// shared norm[22]
	SVECTOR( -386, -1311, -3860);	// shared norm[23]
	SVECTOR( 4070,  -353,  -295);	// shared norm[24]
	SVECTOR( 2452,  -302,  3266);	// shared norm[25]
	SVECTOR( 3406,  2201,   570);	// shared norm[26]
	SVECTOR( 3351,  2313,   436);	// shared norm[27]
	SVECTOR( 3516,  2094,  -155);	// shared norm[28]
	SVECTOR( 3909,  1184,  -296);	// shared norm[29]
	SVECTOR( 2854, -1405, -2579);	// shared norm[30]
	SVECTOR( 2913, -1767, -2272);	// shared norm[31]
	SVECTOR( 2416,  -908, -3179);	// shared norm[32]
	SVECTOR( 3364, -1514, -1778);	// shared norm[33]
	SVECTOR( 3854,  -760, -1159);	// shared norm[34]
	SVECTOR(-1752,  -246, -3693);	// shared norm[35]
	SVECTOR(-2649,  -415, -3096);	// shared norm[36]
	SVECTOR(-3002,  -840, -2656);	// shared norm[37]
	SVECTOR(-2889,  -507, -2858);	// shared norm[38]
	SVECTOR(-3171,  -679, -2501);	// shared norm[39]
	SVECTOR(-3078,  2461,  1114);	// shared norm[40]
	SVECTOR(-3594,  1949,   236);	// shared norm[41]
	SVECTOR(-3826,  1339,  -586);	// shared norm[42]
	SVECTOR(-3810,  1140,  -979);	// shared norm[43]
	SVECTOR(-2028,  -106,  3556);	// shared norm[44]
	SVECTOR(-2554,   567,  3151);	// shared norm[45]
	SVECTOR(-1410,  -959,  3723);	// shared norm[46]
	SVECTOR(-2363,    -7,  3345);	// shared norm[47]
	SVECTOR( 3997,   654,  -606);	// shared norm[48]
	SVECTOR( 4031,  -125,  -712);	// shared norm[49]
	SVECTOR( 1562,  -440, -3760);	// shared norm[50]
	SVECTOR( -562,  -210, -4051);	// shared norm[51]
	SVECTOR(  657,  -183, -4038);	// shared norm[52]
	SVECTOR(-3727,   513, -1619);	// shared norm[53]
	SVECTOR(-3754,   -87, -1634);	// shared norm[54]
	SVECTOR(-3874,   606, -1183);	// shared norm[55]
	SVECTOR(-3548,  -244, -2031);	// shared norm[56]
	SVECTOR(   34, -1295,  3885);	// shared norm[57]
	SVECTOR( 2268, -1430,  3096);	// shared norm[58]
	SVECTOR(-1259, -1248,  3692);	// shared norm[59]

SharedNorm_0002:	// 0x00012470
	SVECTOR( 4023,  -651,   401);	// shared norm[0]
	SVECTOR( 3891,  1276,    18);	// shared norm[1]
	SVECTOR( 3347,  2360,   -12);	// shared norm[2]
	SVECTOR( 3544,  2013,  -399);	// shared norm[3]
	SVECTOR( 3747,  1568,  -522);	// shared norm[4]
	SVECTOR( 2546, -1374, -2898);	// shared norm[5]
	SVECTOR( 1859, -1246, -3430);	// shared norm[6]
	SVECTOR( 3311,  -936, -2220);	// shared norm[7]
	SVECTOR( 3796,  -275, -1512);	// shared norm[8]
	SVECTOR( 3960,   184, -1028);	// shared norm[9]
	SVECTOR( 3883,  1068,  -745);	// shared norm[10]
	SVECTOR(-2375,  -374, -3316);	// shared norm[11]
	SVECTOR(-1614,  -458, -3736);	// shared norm[12]
	SVECTOR(-2742,  -424, -3012);	// shared norm[13]
	SVECTOR(-2966,    80, -2823);	// shared norm[14]
	SVECTOR(-3242,    93, -2500);	// shared norm[15]
	SVECTOR(-2558,  3165,  -454);	// shared norm[16]
	SVECTOR(-3144,  2100,  1574);	// shared norm[17]
	SVECTOR(-2835,  2900,  -566);	// shared norm[18]
	SVECTOR(-3434,  2071,  -829);	// shared norm[19]
	SVECTOR(-3623,  1286, -1411);	// shared norm[20]
	SVECTOR(-3427,  1330, -1804);	// shared norm[21]
	SVECTOR( 1014, -1005, -3838);	// shared norm[22]
	SVECTOR(  355,  -709, -4018);	// shared norm[23]
	SVECTOR( -539,  -525, -4026);	// shared norm[24]
	SVECTOR(-3550,   462, -1989);	// shared norm[25]
	SVECTOR(-1042, -1453,  3684);	// shared norm[26]
	SVECTOR(  372, -1708,  3704);	// shared norm[27]
	SVECTOR( 2238, -2201,  2630);	// shared norm[28]
	SVECTOR(-2334, -1101,  3180);	// shared norm[29]
	SVECTOR(-2440,  -453,  3258);	// shared norm[30]
	SVECTOR(-3588,  1175,  1585);	// shared norm[31]
	SVECTOR( 3513, -1954,   783);	// shared norm[32]
	SVECTOR( 3375, -1980,  1209);	// shared norm[33]

CalcedNorm_0000:	// 0x00012580
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[0]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[1]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[2]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[3]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[4]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[5]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[6]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[7]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[8]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[9]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[10]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[11]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[12]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[13]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[14]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[15]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[16]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[17]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[18]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[19]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[20]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[21]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[22]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[23]

CalcedNorm_0001:	// 0x00012640
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[0]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[1]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[2]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[3]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[4]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[5]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[6]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[7]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[8]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[9]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[10]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[11]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[12]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[13]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[14]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[15]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[16]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[17]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[18]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[19]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[20]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[21]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[22]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[23]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[24]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[25]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[26]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[27]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[28]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[29]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[30]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[31]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[32]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[33]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[34]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[35]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[36]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[37]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[38]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[39]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[40]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[41]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[42]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[43]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[44]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[45]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[46]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[47]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[48]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[49]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[50]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[51]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[52]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[53]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[54]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[55]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[56]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[57]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[58]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[59]

CalcedNorm_0002:	// 0x00012820
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[0]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[1]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[2]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[3]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[4]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[5]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[6]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[7]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[8]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[9]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[10]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[11]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[12]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[13]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[14]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[15]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[16]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[17]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[18]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[19]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[20]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[21]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[22]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[23]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[24]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[25]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[26]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[27]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[28]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[29]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[30]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[31]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[32]
	H(0); H(0); H(0); H(0x0000);	// r, g, b, pad; calced norm[33]
