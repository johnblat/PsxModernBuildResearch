$PSDocId: Document Release 1.0 for Run-time Library Release 4.4$
anim：HMD フォーマットを使用したアニメーションのサンプルプログラム

                      Copyright(C) 1997 Sony Computer Entertainment Inc.
                                                    All Rights Reserved.

animview: 汎用的な HMD アニメーション ビューワ
=====

<サンプルの解説>

        HMD データフォーマットを使用した汎用的なアニメーションビューワ
	です。

        SEQ/COD には操作対象となる シーケンスインデックスおよびそのシー
	ケンスインデックスが書き換えるマトリックスの番号が表示されてい
	ます。

        対象を選びシーケンス IDおよび再生スピードの操作が行なえます。

	プログラム中にROOTコーディネートを作り、HMDデータのROOTに
	リンクします。平行移動、回転はプログラム中のROOTコーディネート
	に対して行うので、アニメーションがHMDのROOTにつけられていたとしても
	オブジェクトの回転、平行移動が可能です。


<起動方法> 
        >psymake animview	コンパイル
        >psymake loadH		必要なデータをダウンロード
        >run animview		実行

<コントローラの操作方法> 
        ○,△,□,× : オブジェクトの回転
        →,←,↑,↓ : オブジェクトの XY 軸平行移動
        L1,R1       : オブジェクトの Z 軸平行移動
        L2,R2       : 操作するシーケンス番号をinc/decする
        START&(L1,R1)   : 全てのシーケンスについて再生スピードをinc/decする
        SELECT&(L1,R1)  : 全てのシーケンスについてシーケンスIDをinc/decする
        START&(L2,R2)   : 再生スピードをinc/decする
        SELECT&(L2,R2)  : シーケンスIDをinc/decする
        SELECT&(△,□,×,○) : 全てのシーケンスについてシーケンスIDを、
                               1, 2, 3, 4 に設定する
        SELECT&(↑,←,↓,→) : 全てのシーケンスについてシーケンスIDを、
                               5, 6, 7, 8 に設定する
        START&SELECT: 終了

<備考>
	全てのHMDデータ
	例として data/hmd/scei/anim/baloon/baloon.hmd
		 BEZIERカーブよるアニメーション
						

tuto0: 汎用的な HMD アニメーション ビューワ
=====

<サンプルの解説>

        HMD データフォーマットを使用した汎用的なアニメーションビューワ
	です。

        SEQ/COD には操作対象となる シーケンスインデックスおよびそのシー
	ケンスインデックスが書き換えるマトリックスの番号が表示されてい
	ます。

        対象を選びオブジェクトの回転、平行移動およびシーケンス ID の操
	作が行なえます。ただしアニメーションがつけられているシーケンス
	は回転、平行移動は有効にはなりません。

<起動方法> 
        >psymake tuto0  コンパイル
        >psymake load0  必要なデータをダウンロード
        >run tuto0      実行

<コントローラの操作方法> 
        ○,△,□,× : オブジェクトの回転
        →,←,↑,↓ : オブジェクトの XY 軸平行移動
        L1,R1       : オブジェクトの Z 軸平行移動
        L2,R2       : 操作するシーケンス番号をinc/decする
        START       : シーケンスIDをインクリメントする
        SELECT      : シーケンスIDをデクリメントする
        START&SELECT: 終了

<備考> 

【モデリングデータ】
	data/hmd/scei/anim/tri3/tri.hmd	： tri（トリケラトプス） 



tuto1: Realtime Motion Switch #1
=====  (SIDによるインターラクラクティブアニメーション）

<サンプルの解説>

	HMD データフォーマットを対話的なアニメーションのサンプルです。

	あらかじめHMDデータのMOTファイルにシーケンスID(SID)に応じた複数の
	アニメーションを定義しておき SIDを実行時に切り替えることで
	対話的なアニメーションを実現しています。

<起動方法>

	>psymake tuto1	コンパイル
	>psymake load1	必要なデータをダウンロード
	>run tuto1	実行

<コントローラの操作方法>

	○△□× 	： オブジェクトの回転
	→←↑↓ 	： オブジェクトの XY 軸平行移動
        L１ R１  	： オブジェクトの Z 軸平行移動
        L２		: 尻尾の体操
	R２		: 首の体操
	START		: 駆け足
	SELECT		: 足踏み
	START&SELECT	: 終了

<備考> 	
【モデリングデータ】
	data/hmd/scei/anim/tri3/tri.hmd	： tri（トリケラトプス） 


tuto2: Realtime Motion Switch #2
=====	(仮想キーフレームによるインターラクラクティブアニメーション）

<サンプルの解説>

	Realtime Motion Switchのデモプログラムです
	
	キーフレームが３つ 画面の左上 右下 中央奥に定義されています。

	A	SID 3
	\--------------- C
	 \		|
	  \		|
	   \		|  SID 2
	    \		|
	     \		|
	      \		|
	 SID 1 \	|
		\	|
		 \	|
		  \	|
		   \	|
		    \	|
		     \  |
		      \	|
		       \| B

	シーケンスパターンとして A-B,B-C,C-Aの３つが定義されています。
	SID=0の場合は 現在のシーケンスパターンを繰り返します。
	SIDを１から３の値にすると他のシーケンスへスイッチします。

	左の方向キーは
	→  B
	←  A
	↑  C
	のキーフレームに対応しており ボタンを押すと即座に そのキーフレーム
	を含むシーケンスへなめらかにスイッチします。

	これは ボタンが押された時点で 現在のポジションを新たに
	仮想キーフレームとして定義し、仮想キーフレームとターゲットの
	キーフレームとの補完を行うことで実現しています。

	[再生コントロール]
	再生コントロールのデモとして 正逆1/16から8倍までの再生を
	ボタンで切り替えられるようになっています。

	[逆転再生時の制約]
	ダイナミックに再生経路をログしていないので 仮想キーフレームによる
	Realtime Motion Swich中は逆転再生はできません。
	同様の理由で逆転再生中に 仮想キーフレームによる
	Realtime Motion Switch	はできません。


<起動方法>
	psymake tuto2	コンパイル
	psymake load2	必要なデータをダウンロード
	run tuto2	実行

＜コントローラの操作方法＞
	○△□× 	： シーケンスIDの切り替え
	→←↑↓ 	： キーフレームの即時切り替え（仮想キーフレーム）
        L１ R１  	： 再生速度を緩める
        L２ R２  	： 再生速度を速める

	START	: シーケンスを逆転再生
	START&SELECT : 終了

＜備考＞

【モデリングデータ】
	data/hmd/scei/anim/cube0/cube0.hmd


tuto3: 汎用的な HMD アニメーション ビューワ (視点アニメーションを含む）
=====

<サンプルの解説>

	toto0に加えて視点のアニメーションを行うプログラムです。
	視点用にtri.hmd内の最後に３つのマトリックスを加えています。

	VIEW0
	 ↑
	VIEW1
	 ↑
	VIEW2	<- viewpoint

	プログラム中では VIEW2のマトリックスを取り出して GsSetViewUnit()
	に引数として渡される GsVUEWUNIT構造体の matrix,superに VIEW2の
	内容をコピーしています。

	HMDアニメーションの機能により VIEW1,VIEW2,VIEW3のCOORDINATEを
	アニメーションさせます。

	これにより 視点アニメーションが実現します。


	対象の回りを回る視点にするため VIEW0の親コーディネートには 対象の
	最上位のコーディネートをセットしています。これでカメラは常に
	対象からの相対でアクセスできるので 対象物が移動してもカメラは
	対象を自動的に追いかけるので見失いません。

	VIEW1には 対象物との距離をセットするためのコーディネートになります。
	これで VIEW0を回転させることでカメラは対象物の回りを回ることに
	なります。

	VIEW2には視点座標をセットします。カメラの角度などの設定は
	この座標系で行います。

	このサンプルでは ３チャンネルのアニメーションを視点のためにかけて
	います。

	１ カメラを対象物の回りを回転させる
	２ カメラを対象物に近づけたら遠ざけたりする
	３ カメラの仰角を上下に振る

<起動方法>
	>psymake tuto3	コンパイル
	>psymake load3	必要なデータをダウンロード
	>run tuto3	実行

<コントローラの操作方法>

	○△□× 	： オブジェクトの回転
	→←↑↓ 	： オブジェクトの XY 軸平行移動
        L１ R１  	： オブジェクトの Z 軸平行移動
        L２ R２  	： 操作するシーケンス番号をinc/decする

	START	: シーケンスIDをインクリメントする
	SELECT ： シーケンスIDをデクリメントする
	START&SELECT : 終了

<備考>

【モデリングデータ】
	data/hmd/scei/anim/tri4/tri.hmd	： tri（トリケラトプス） 


【追記】
        本サンプルで使用している以下のモデルデータは、米国 Viewpoint
	DataLabs により作成され、米国 Newtek Incorporated により配布さ
	れているデータを元にして作成されました。

	data/hmd/scei/anim/tri3/tri.hmd
	data/hmd/scei/anim/tri4/tri.hmd



						以上
