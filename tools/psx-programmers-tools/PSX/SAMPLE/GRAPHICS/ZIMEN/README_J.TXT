$PSDocId: Document Release 1.0 for Run-time Library Release 4.4$
				 The Ground

                      Copyright(C) 1997 Sony Computer Entertainment Inc.
                                                    All Rights Reserved.

<サンプルの解説>
	
	- このディレクトリには、無限を扱う地面の表示に関する
	  プログラムが入っています。
	
	- 各プログラムはメニューから起動されます。詳細は menu.h,
	  main.c を参照下さい。
	
	- 検討用に各デモを個別に切り出して使用したい場合は、main.c 内
	  の記述をご参照下さい。


tuto0	プリミティブ自動分割
	
	POLY_FT4 プリミティブをメッシュ上に自動分割します。
	プリミティブは、各辺の中点を新しい頂点とした４つの４角形に４分
	割されます。それ以上の分割が指定された場合は、分割された４つの小
	４角形ごとにおなじ操作が再帰的に繰り返されます。
	再帰分割時にすべての頂点が描画領域外であれば、それより以降の分割
	は行なわれません。

	スクリーンに近いプリミティブは、分割することにより以下の効果が
	期待できます。
	
	・描画領域をおおきくはみ出したプリミティブは、前もって除去
	  されるため描画のオーバーヘッドが軽減されます。

	・視点に近付いて、プリミティブが非常に大きくなった場合も描画
	  時にクリップされません。

	・線形のテクスチャマッピングによる対角線の歪みを軽減できます。
	
	分割プログラムのサンプルは、div.c を参照ください。
	なお、ここの自動分割サンプルは動作を説明するためのものであり、
	より高速の処理が必要な場合は、DivPolyFT4() を御使用下さい。
	
tuto1	領域クリップ

	z = 0 の平面上にメッシュ上に並べられたプリミティブをクリップし
	ます。クリップは、スクリーンの各４頂点と原点を通る直線をワール
	ド座標系に変換し、これと、z = 0 の平面上の点を求めます。
	例えば、640x480 モードでであれば、スクリーンの位置は、スクリー
	ン座標系で
	
		(-320,-240,SCR_Z)-(320,240,SCR_Z)
	
	になります。これをワールド座標系に変換した後、ワールド座標系で
	の視点の位置とスクリーンの各頂点を結ぶ直線と平面  z = 0 との交
	点をもとめます。こうして計算された４点に囲まれる領域が実際に座
	標透変換・視変換(RotTransPers()) 後に表示されることになります。
	
	詳細は、clip.c を参照下さい。
	
	screen_to_matrix() 関数はスクリーン座標系からワールド座標系へ
	の変換を行ないます。
	
	get_z_cross_point() は、指定された２点を通る直線と z = 0 の平
	面との交点を求めます。
	
	rot_trans_pers() は、座標値をワールド座標系からスクリーン座標系
	へ変換したのち、透視変換を行ないます。RotTransPers() と異なり、
	GTE オフセットの影響を受けません。
	
	y = 0, x = 0 の平面の場合も座標系の対称性を利用して若干の変更
	で使用できます。
	
	プログラムの中央の長方形が、スクリーンです。その外側の４角形が
	スクリーン長方形を z = 0 の平面に投影した図形を崩落する長方形
	です。

tuto2	有限マップを持つ地面

	地面は有限の大きさをもつメッシュ構造として表現されます。
	このモデルでは、世界の端が存在します。
	メッシュの各セルに対応するテクスチャパターンはマップデータから定
	義されます。これは、基本的には、通常の２次元のスクロール BG
	(BackGround) のデータ構造と同様のものです。

	地面メッシュは、SVECTOR の２次元配列です。ここの vz メンバ（デ
	フォルトは 0) を操作することで高さを持つ地面を表現することがで
	きます。詳細は、mesh.c を参照下さい。

	メッシュセルは、ワールド座標系とスクリーン座標系で２段階でクリッ
	プされます。ワールド座標系でのクリップ領域は RECT32 *clipw で指
	定されます。clipw に含まれるメッシュセルが回転・透視変換され、
	その結果がスクリーン座標系でのクリップ範囲 RECT *clips に含ま
	れるかで２段階目のクリップが行なわれます。

	メッシュの各頂点は最初に clipw の範囲にはずれるものが除去され、
	これ以内に収まるものが座標変換されます。また、変換後の２次元の
	頂点が clips で示されるスクリーン範囲をはずれるものもクリップ
	されます。メッシュセルは、セルの４頂点のいずれかがクリップ範囲
	内にあるものだけが OT に登録されます。

	ここのメッシュサンプルは、動作を説明するためのものであり、より
	高速な処理が必要な場合は、RotMesh 関数、あるいは、最低でも
	RotTransPersN() を使用すべきです。
	
tuto3	無限マップを持つ地面

	移動ベクトル(Translation Vector) をマップの１キャラクタに等し
	い大きさでラップラウンドさせ、ラップラウンドに合わせてマップの
	位置をずらすことで、無限に繰り返される地面のパターンが生成でき
	ます。
	
	このモデルでは、世界の端が存在しませんが、ワールド座標系での視
	点（カメラ）の物理的な座標値と論理的な座標値が異なります。
	
tuto4	自動分割付き地面

	OT エントリの値 sz に応じて分割の on/off と分割数を適応的に切
	替える例です。div_addprim() 関数がそれを行ないます。
	

tuto5	CLUT フォグを行なう例

	以上の処理をまとめてコーディングした例です。各プリミティブデプス
	キューの値(p)に応じて CLUT のエントリを切替え、CLUT フォグを行
	なう機能が追加されています。詳細は以下のドキュメントを参照下さ
	い。

	2DのBGをX軸で横倒しにして その平面上を視点が 平面にそって上下
	左右に移動するサンプルです。まだ高さの表現ができていませんが 
	平面で地面を表現する目的には 充分に使えると思います。また サン
	プルとしてソースで提供されているため自由に改変して組み込むこと
	ができます。 

	負荷としては サンプルで設定されているデフォルトのパラメータで
	は地面を計算するルーチンは３０〜７０スキャンラインぐらい消費し
	ています。これは どこまで見えるようにするか、自動分割をどの程
	度にするかなどのパラメータを変えることで激的に増減するのでアプ
	リケーション毎に負荷も含めて細かくパラメータを調整する必要があ
	ります。 

	CLUT フォグに関する説明は clutfog サンプルを参照ください。

座標変換について

	いずれのサンプルも、地面はマップデータの操作の容易さから ワー
	ルド座標系で z = 0 の平面が仮定されています。また視点位置は同
	じくワールド座標系で z > 0 の任意の点が仮定されています。
	そのため、スクリーン座標系に変換する際には、注意が必要です。

	モデルは、地面はワールド座標系で固定され、視点がワールド座標系
	移動していくものです。このためには、RotTrans() で常に視点のワー
	ルド座標が常に原点 （0,0,0) に変換されるように移動ベクトルを設
	定することが必要です。RotTrans() は回転後に並行移動を行なうの
	で、
		x: ワールド座標, R:回転マトリクス, t:移動ベクトル
	
	とすると、RotTrans() は、以下のようになります。
	
		 y = Rx + t
	
	これから、y = 0 とおくと t = -Rx が得られます。x は視点のワー
	ルド座標です。これが移動ベクトルの値となります。

	また、視点の移動方向（視点位置の時間差分）はスクリーン座標系で記
	述されます。コントローラで指定される移動方向は、スクリーン座標系
	で与えられた方が自然なためです。しかし、視点位置自体はワールド座
	標系で処理した方が簡単なため、スクリーン座標系で表された移動方向
	を一旦ワールド座標に変換した後、ワールド座標での視点位置座標に加
	算する処理が必要になります。
	
	スクリーン座標からワールド座標を求める処理（RotTrans() の逆変換）
	は、

		x = RR(y - t) = RRy - RRt	RR: R の逆行列

	で計算できます。回転マトリクスに限っては、R の逆行列
	(Inversed Matrix) は、R の転置行列 (Transposed Matrix) と等しい
	ことから、容易に計算できます。
	

<起動方法> 
	
	>psymake main
	>run main

<コントローラの操作方法>
	
	方向キー : カーソルの移動
        ○ :       決定
        SELECT :   終了

<備考>
	- カーソルを「DEMO」に合わせて○を押すとデモが起動されます。
	- カーソルを「HELP」に合わせて○を押すとデモ内のキー配置が表示
	  されます。各デモのキー配置は HELP を参照下さい。

	
	









